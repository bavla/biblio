TY  - CONF
AU  - Zhu, W.
AU  - Zhang, M.
AU  - Chen, C.
AU  - Wang, X.
AU  - Zhang, F.
AU  - Lin, X.
TI  - Pivotal relationship identification: The k-truss minimization problem
PY  - 2019
T2  - IJCAI International Joint Conference on Artificial Intelligence
VL  - 2019-August
SP  - 4874
EP  - 4880
DO  - 10.24963/ijcai.2019/677
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85074956526&doi=10.24963%2fijcai.2019%2f677&partnerID=40&md5=2866be41e5db6b0a288c8271eb990ecd
AD  - East China Normal University, China
AD  - Zhejiang Gongshang University, China
AD  - Zhejiang Lab, Hangzhou, China
AD  - University of New South Wales, Australia
AB  - In a social network, the strength of relationships between users can significantly affect the stability of the network. In this paper, we use the k-truss model to measure the stability of a social network. To identify critical connections, we propose a novel problem, named k-truss minimization. Given a social network G and a budget b, it aims to find b edges for deletion which can lead to the maximum number of edge breaks in the k-truss of G. We show that the problem is NP-hard. To accelerate the computation, novel pruning rules are developed to reduce the candidate size. In addition, we propose an upper bound based strategy to further reduce the searching space. Comprehensive experiments are conducted over real social networks to demonstrate the efficiency and effectiveness of the proposed techniques. © 2019 International Joint Conferences on Artificial Intelligence. All rights reserved.
A2  - Kraus S.
PB  - International Joint Conferences on Artificial Intelligence
SN  - 10450823 (ISSN); 978-099924114-1 (ISBN)
LA  - English
J2  - IJCAI Int. Joint Conf. Artif. Intell.
M3  - Conference paper
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 18; Correspondence Address: C. Chen; East China Normal University, China; email: chenc@zjgsu.edu.cn
ER  -

TY  - CONF
AU  - Bu, F.
AU  - Shin, K.
TI  - On Improving the Cohesiveness of Graphs by Merging Nodes: Formulation, Analysis, and Algorithms
PY  - 2023
T2  - Proceedings of the ACM SIGKDD International Conference on Knowledge Discovery and Data Mining
SP  - 117
EP  - 129
DO  - 10.1145/3580305.3599449
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85171365622&doi=10.1145%2f3580305.3599449&partnerID=40&md5=9549a6012c893e608e80bc91a0280960
AD  - School of Electrical Engineering, KAIST, Daejeon, South Korea
AD  - Kim Jaechul Graduate School of AI, KAIST, Seoul, South Korea
AB  - Graphs are a powerful mathematical model, and they are used to represent real-world structures in various fields. In many applications, real-world structures with high connectivity and robustness are preferable. For enhancing the connectivity and robustness of graphs, two operations, adding edges and anchoring nodes, have been extensively studied. However, merging nodes, which is a realistic operation in many scenarios (e.g., bus station reorganization, multiple team formation), has been overlooked. In this work, we study the problem of improving graph cohesiveness by merging nodes. First, we formulate the problem mathematically using the size of the k-truss, for a given k, as the objective. Then, we prove the NP-hardness and non-modularity of the problem. After that, we develop BATMAN, a fast and effective algorithm for choosing sets of nodes to be merged, based on our theoretical findings and empirical observations. Lastly, we demonstrate the superiority of BATMAN over several baselines, in terms of speed and effectiveness, through extensive experiments on fourteen real-world graphs.  © 2023 ACM.
KW  - combinatorial optimization
KW  - graph algorithms
KW  - k-trusses
KW  - Graph theory
KW  - Graphic methods
KW  - Merging
KW  - Trusses
KW  - Anchorings
KW  - Bus stations
KW  - Graph algorithms
KW  - High connectivity
KW  - High robustness
KW  - K-trusse
KW  - Multiple teams
KW  - Real-world
KW  - Reorganisation
KW  - Team formation
KW  - Combinatorial optimization
PB  - Association for Computing Machinery
SN  - 979-840070103-0 (ISBN)
LA  - English
J2  - Proc. ACM SIGKDD Int. Conf. Knowl. Discov. Data Min.
M3  - Conference paper
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 0
ER  -

TY  - JOUR
AU  - Mo, Z.
AU  - Xie, Z.
AU  - Zhang, X.
AU  - Luo, Q.
AU  - Zheng, Y.
AU  - Yu, D.
TI  - Network representation learning based on social similarities
PY  - 2022
T2  - Frontiers in Environmental Science
VL  - 10
C7  - 974246
DO  - 10.3389/fenvs.2022.974246
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85138304708&doi=10.3389%2ffenvs.2022.974246&partnerID=40&md5=f62acb8c846175815165688239618e01
AD  - School of Computer Science and Technology, Shandong University, Qingdao, China
AB  - Analysis of large-scale networks generally requires mapping high-dimensional network data to a low-dimensional space. We thus need to represent the node and connections accurate and effectively, and representation learning could be a promising method. In this paper, we investigate a novel social similarity-based method for learning network representations. We first introduce neighborhood structural features for representing node identities based on higher-order structural parameters. Then the node representations are learned by a random walk approach that based on the structural features. Our proposed truss2vec is able to maintain both structural similarity of nodes and domain similarity. Extensive experiments have shown that our model outperforms the state-of-the-art solutions. Copyright © 2022 Mo, Xie, Zhang, Luo, Zheng and Yu.
KW  - graph learning
KW  - k-truss
KW  - network representation
KW  - social networks
KW  - social similarities
PB  - Frontiers Media S.A.
SN  - 2296665X (ISSN)
LA  - English
J2  - Front. Environ. Sci.
M3  - Article
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 1; Correspondence Address: Z. Xie; School of Computer Science and Technology, Shandong University, Qingdao, China; email: xiezz21@sdu.edu.cn
ER  -

TY  - CONF
AU  - Sun, Z.
AU  - Huang, X.
AU  - Xu, J.
AU  - Bonchi, F.
TI  - Efficient probabilistic truss indexing on uncertain graphs
PY  - 2021
T2  - The Web Conference 2021 - Proceedings of the World Wide Web Conference, WWW 2021
SP  - 354
EP  - 366
DO  - 10.1145/3442381.3449976
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85108011978&doi=10.1145%2f3442381.3449976&partnerID=40&md5=af44aca5f35300ce2cf791ee51aa5f59
AD  - HKBU, China
AD  - ISI Foundation, Italy
AB  - Networks in many real-world applications come with an inherent uncertainty in their structure, due to e.g., noisy measurements, inference and prediction models, or for privacy purposes. Modeling and analyzing uncertain graphs has attracted a great deal of attention. Among the various graph analytic tasks studied, the extraction of dense substructures, such as cores or trusses, has a central role. In this paper, we study the problem of (k,  3)-truss indexing and querying over an uncertain graph . A (k,  3)-truss is the largest subgraph of , such that the probability of each edge being contained in at least k - 2 triangles is no less than  3. Our first proposal, CPT-index, keeps all the (k,  3)-trusses: retrieval for any given k and ?can be executed in an optimal linear time w.r.t. the graph size of the queried (k,  3)-truss. We develop a bottom-up CPT-indexconstruction scheme and an improved algorithm for fast CPT-indexconstruction using top-down graph partitions. For trading off between (k,  3)-truss offline indexing and online querying, we further develop an approximate indexing approach (  Âµ,  "r)-APXequipped with two parameters,   Âµ and  "r, that govern tolerated errors. Extensive experiments using large-scale uncertain graphs with 261 million edges validate the efficiency of our proposed indexing and querying algorithms against state-of-the-art methods.  Â© 2021 ACM.
KW  - Indexing
KW  - Probabilistic k-truss
KW  - Query
KW  - Uncertain graph
KW  - Automatic indexing
KW  - Indexing (of information)
KW  - Predictive analytics
KW  - Privacy by design
KW  - Trusses
KW  - Uncertainty analysis
KW  - World Wide Web
KW  - Graph partition
KW  - Graph-analytic
KW  - Indexing approaches
KW  - Noisy measurements
KW  - Prediction model
KW  - State-of-the-art methods
KW  - Two parameter
KW  - Uncertain graphs
KW  - Graph algorithms
PB  - Association for Computing Machinery, Inc
SN  - 978-145038312-7 (ISBN)
LA  - English
J2  - Web Conf. - Proc. World Wide Web Conf., WWW
M3  - Conference paper
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 6
ER  -

TY  - JOUR
AU  - Rezvani, M.
AU  - Rezvani, M.
TI  - Truss decomposition using triangle graphs
PY  - 2022
T2  - Soft Computing
VL  - 26
IS  - 1
SP  - 55
EP  - 68
DO  - 10.1007/s00500-021-06468-9
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85118686389&doi=10.1007%2fs00500-021-06468-9&partnerID=40&md5=4d0f87a68801c67a7c2203e9ff22e08f
AD  - Faculty of Computer Engineering, Shahrood University of Technology, Shahrood, Iran
AD  - College of Engineering and Computer Science, Australian National University, Canberra, 2601, ACT, Australia
AB  - Recent studies have shown that social networks exhibit interesting characteristics such as community structures, i.e., vertexes can be clustered into communities that are densely connected together and loosely connected to other vertices. In order to identify communities, several definitions were proposed that can characterize the density of connections among vertices in the networks. Dense triangle cores, also known as k-trusses, are subgraphs in which every edge participates at least k- 2 triangles (a clique of size 3), exhibiting a high degree of cohesiveness among vertices. There are a number of research works that propose k-truss decomposition algorithms. However, existing in-memory algorithms for computing k-truss are inefficient for handling today’s massive networks. In this paper, we propose an efficient, yet scalable algorithm for finding k-trusses in a large-scale network. To this end, we propose a new structure, called triangle graph to speed up the process of finding the k-trusses and prove the correctness and efficiency of our method. We also evaluate the performance of the proposed algorithms through extensive experiments using real-world networks. The results of comprehensive experiments show that the proposed algorithms outperform the state-of-the-art methods by several orders of magnitudes in running time. © 2021, The Author(s), under exclusive licence to Springer-Verlag GmbH Germany, part of Springer Nature.
KW  - Community detection
KW  - Social networks
KW  - Triangle graph
KW  - Truss decomposition
KW  - Graph theory
KW  - Social networking (online)
KW  - Community detection
KW  - Community structures
KW  - Decomposition algorithm
KW  - Massive networks
KW  - Memory algorithms
KW  - Scalable algorithms
KW  - Social network
KW  - Subgraphs
KW  - Triangle graph
KW  - Truss decomposition
KW  - Trusses
PB  - Springer Science and Business Media Deutschland GmbH
SN  - 14327643 (ISSN)
LA  - English
J2  - Soft Comput.
M3  - Article
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 2; Correspondence Address: M. Rezvani; Faculty of Computer Engineering, Shahrood University of Technology, Shahrood, Iran; email: mrezvani@shahroodut.ac.ir
ER  -

TY  - JOUR
AU  - Saxena, R.
AU  - Kaur, S.
AU  - Bhatnagar, V.
TI  - Identifying similar networks using structural hierarchy
PY  - 2019
T2  - Physica A: Statistical Mechanics and its Applications
VL  - 536
C7  - 121029
DO  - 10.1016/j.physa.2019.04.265
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85065571389&doi=10.1016%2fj.physa.2019.04.265&partnerID=40&md5=ae9f6ff79974a3cd869a672c614c7701
AD  - Deshbandhu College, University of Delhi, India
AD  - Acharya Narendra Dev College, University of Delhi, India
AD  - Department of Computer Science, University of Delhi, India
AB  - Comparing structural similarities among complex networks is an important task in several scientific and social science applications. Existing techniques for quantifying network similarity range from network-centric methods that consider global network topology to node-centric methods that consider local node-level sub-structures. In this paper, we address the research gap between computationally expensive network-centric approaches and myopic node-centric network comparison methods by introducing a novel approach to quantify network similarity based on hierarchical graph decomposition. The approach adequately captures both global and local topology and is motivated by the observation that networks from diverse domains such as physical, chemical, biological and social systems exhibit an inherent structural hierarchy that emerges from local dyadic and triadic interactions. The proposed algorithm, Network Similarity via graph Decomposition (NSD), extracts network signatures from hierarchical decomposition of networks and uses Canberra distance to quantify the similarity between signatures. We use two well-known graph decomposition methods to expose network hierarchy resulting in two variations of NSD. We find that our approach groups similar networks better than competing algorithms. Experimentation using 40 real-world networks, 15 massive networks, and 30 large synthetic networks establishes that the proposed methodology is effective, scalable, sensitive and applicable to wide variety of networks. © 2019 Elsevier B.V.
KW  - Canberra distance
KW  - Graph analytics
KW  - k-core decomposition
KW  - k-truss decomposition
KW  - Network comparison
KW  - Network similarity
KW  - Quantiles
KW  - Social networks
KW  - Structural hierarchy
KW  - Complex networks
KW  - Social networking (online)
KW  - Topology
KW  - Canberra distances
KW  - Graph analytics
KW  - K-cores
KW  - Network comparisons
KW  - Quantiles
KW  - Structural hierarchies
KW  - Graph algorithms
PB  - Elsevier B.V.
SN  - 03784371 (ISSN)
LA  - English
J2  - Phys A Stat Mech Appl
M3  - Article
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 3; Correspondence Address: R. Saxena; Deshbandhu College, University of Delhi, India; email: rsaxena@db.du.ac.in; CODEN: PHYAD
ER  -

TY  - CONF
AU  - Yang, Y.
AU  - Gu, X.
AU  - Fan, H.
AU  - Li, B.
AU  - Wang, W.
TI  - Multi-granularity Evolution Network for Dynamic Link Prediction
PY  - 2022
T2  - Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)
VL  - 13280 LNAI
SP  - 393
EP  - 405
DO  - 10.1007/978-3-031-05933-9_31
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85130389583&doi=10.1007%2f978-3-031-05933-9_31&partnerID=40&md5=340d04283f0705cd725dfb10640f6e2d
AD  - Institute of Information Engineering, Chinese Academy of Sciences, Beijing, China
AD  - School of Cyber Security, University of Chinese Academy of Sciences, Beijing, China
AB  - Dynamic link prediction target to predict future new links in a dynamic network, is widely used in social networks, knowledge graphs, etc. Some existing dynamic methods capture structural characteristics and learn the evolution process from the entire graph, which pays no attention to the association between subgraphs and ignores that graphs under different granularity have different evolve patterns. Although some static methods use multi-granularity subgraphs, they can hardly be applied to dynamic graphs. We propose a novel Temporal K-truss based Recurrent Graph Convolutional Network (TKRGCN) for dynamic link prediction, which learns graph embedding from different granularity subgraphs. Specifically, we employ k-truss decomposition to extract multi-granularity subgraphs which preserve both local and global structure information. Then we design a RNN framework to learn spatio-temporal graph embedding under different granularities. Extensive experiments demonstrate the effectiveness of our proposed TKRGCN and its superiority over some state-of-the-art dynamic link prediction algorithms. © 2022, The Author(s), under exclusive license to Springer Nature Switzerland AG.
KW  - Dynamic graph
KW  - Link prediction
KW  - Network embedding
KW  - Forecasting
KW  - Network embeddings
KW  - Convolutional networks
KW  - Different granularities
KW  - Dynamic graph
KW  - Dynamic links
KW  - Graph embeddings
KW  - Learn+
KW  - Link prediction
KW  - Multi-granularity
KW  - Network embedding
KW  - Subgraphs
KW  - Trusses
A2  - Gama J.
A2  - Li T.
A2  - Yu Y.
A2  - Chen E.
A2  - Zheng Y.
A2  - Teng F.
PB  - Springer Science and Business Media Deutschland GmbH
SN  - 03029743 (ISSN); 978-303105932-2 (ISBN)
LA  - English
J2  - Lect. Notes Comput. Sci.
M3  - Conference paper
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 0; Correspondence Address: H. Fan; Institute of Information Engineering, Chinese Academy of Sciences, Beijing, China; email: fanhaihui@iie.ac.cn
ER  -

TY  - JOUR
AU  - Esfahani, F.
AU  - Daneshmand, M.
AU  - Srinivasan, V.
AU  - Thomo, A.
AU  - Wu, K.
TI  - Scalable probabilistic truss decomposition using central limit theorem and H-index
PY  - 2022
T2  - Distributed and Parallel Databases
VL  - 40
IS  - 2-3
SP  - 299
EP  - 333
DO  - 10.1007/s10619-022-07415-9
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85134752685&doi=10.1007%2fs10619-022-07415-9&partnerID=40&md5=2741421f6a859bcbe738b4b93e9a1723
AD  - University of Victoria, Victoria, BC, Canada
AB  - Truss decomposition is a popular notion of hierarchical dense substructures in graphs. In a nutshell, k-truss is the largest subgraph in which every edge is contained in at least k triangles. Truss decomposition aims to compute k-trusses for each possible value of k. There are many works that study truss decomposition in deterministic graphs. However, in probabilistic graphs, truss decomposition is significantly more challenging and has received much less attention; state-of-the-art approaches do not scale well to large probabilistic graphs. Finding the tail probabilities of the number of triangles that contain each edge is a critical challenge of those approaches. This is achieved using dynamic programming which has quadratic run-time and thus not scalable to real large networks which, quite commonly, can have edges contained in many triangles (in the millions). To address this challenge, we employ a special version of the Central Limit Theorem (CLT) to obtain the tail probabilities efficiently. Based on our CLT approach we propose a peeling algorithm for truss decomposition that scales to large probabilistic graphs and offers significant improvement over state-of-the-art. We also design a second method which progressively tightens the estimate of the truss value of each edge and is based on h-index computation. In contrast to our CLT-based approach, our h-index algorithm (1) is progressive by allowing the user to see near-results along the way, (2) does not sacrifice the exactness of final result, and (3) achieves all these while processing only one edge and its immediate neighbors at a time, thus resulting in smaller memory footprint. We perform extensive experiments to show the scalability of both of our proposed algorithms. © 2022, The Author(s), under exclusive licence to Springer Science+Business Media, LLC, part of Springer Nature.
KW  - Dense subgraphs
KW  - Probabilistic graphs
KW  - Truss decomposition
KW  - Computation theory
KW  - Dynamic programming
KW  - Indexing (of information)
KW  - Trusses
KW  - Central Limit Theorem
KW  - Dense sub-graphs
KW  - Deterministics
KW  - H indices
KW  - Probabilistic graphs
KW  - Probabilistics
KW  - State-of-the-art approach
KW  - Subgraphs
KW  - Tail probability
KW  - Truss decomposition
KW  - Graphic methods
PB  - Springer
SN  - 09268782 (ISSN)
LA  - English
J2  - Distrib Parallel Databases
M3  - Article
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 1; Correspondence Address: F. Esfahani; University of Victoria, Victoria, Canada; email: esfahani@uvic.ca; CODEN: DAATE
ER  -

TY  - CONF
AU  - Li, D.
AU  - Zeng, L.
AU  - Hu, R.
AU  - Liang, X.
AU  - Zang, Y.
TI  - ITC: Influential-Truss Community Search
PY  - 2022
T2  - Proceedings of the International Joint Conference on Neural Networks
VL  - 2022-July
DO  - 10.1109/IJCNN55064.2022.9892552
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85140785051&doi=10.1109%2fIJCNN55064.2022.9892552&partnerID=40&md5=99c9393329c38c232ad277978c4a7d0d
AD  - School of Artificial Intelligence, Jianghan University, Wuhan, 430056, China
AD  - School of Computer Science, Wuhan University, Wuhan, 430072, China
AB  - Community search is a method of finding a com-munity closely related to a query node. The latest influence community search considers both the structural cohesion of the community and the influence between nodes. It sets the influence threshold to constrain the output community. However, artificially setting the influence threshold makes the output community too large or too small, which leads to low accuracy of the output community. In order to avoid the low accuracy of community search caused by artificially setting influence thresh-old constraints, this paper studies the community search problem based on community influence score. In this paper, an influence-truss community (ITC) model is proposed for community search by combining structural cohesion and community influence score. This model aims to obtain a connected subgraph in a social network containing the query node, which satisfies structural cohesion and satisfies the subgraph's maximum community in-fluence score. In order to obtain ITC, an effective pruning method is proposed, which strips other nodes far away from the query node. Then, the ITCS algorithm is designed, which firstly imposes structural cohesion constraints on query nodes. Then, the search community's influence scores are iteratively calculated until the community has the highest community influence score under the condition of meeting the structural cohesion. Experiments on real-world networks of different scales show that the community search accuracy index of ITCS is improved by about 20% compared with the traditional method. © 2022 IEEE.
KW  - community search
KW  - influential
KW  - k-truss
KW  - social network
KW  - Social networking (online)
KW  - Trusses
KW  - Community model
KW  - Community search
KW  - Connected Subgraph
KW  - Influential
KW  - K-truss
KW  - Problem-based
KW  - Query nodes
KW  - Search problem
KW  - Social network
KW  - Subgraphs
KW  - Iterative methods
PB  - Institute of Electrical and Electronics Engineers Inc.
SN  - 978-172818671-9 (ISBN)
LA  - English
J2  - Proc Int Jt Conf Neural Networks
M3  - Conference paper
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 0; Correspondence Address: D. Li; School of Artificial Intelligence, Jianghan University, Wuhan, 430056, China; email: reallds@jhun.edu.cn; CODEN: 85OFA
ER  -

TY  - CONF
AU  - Chen, L.
AU  - Liu, C.
AU  - Zhou, R.
AU  - Li, J.
AU  - Yang, X.
AU  - Wang, B.
TI  - Maximum co-located community search in large scale social networks
PY  - 2018
T2  - Proceedings of the VLDB Endowment
VL  - 11
IS  - 10
SP  - 1233
EP  - 1246
DO  - 10.14778/3231751.3231755
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85060307592&doi=10.14778%2f3231751.3231755&partnerID=40&md5=d62bcc214746992604bac77ff1390696
AD  - Swinburne University of Technology, Australia
AD  - University of Western Australia, Australia
AD  - Northeastern University, United States
AB  - The problem of k-truss search has been well defined and investigated to find the highly correlated user groups in social networks. But there is no previous study to consider the constraint of users' spatial information in k-truss search, denoted as co-located community search in this paper. The co-located community can serve many real applications. To search the maximum co-located communities efficiently, we first develop an efficient exact algorithm with several pruning techniques. After that, we further develop an approximation algorithm with adjustable accuracy guarantees and explore more effective pruning rules, which can reduce the computational cost significantly. To accelerate the real-time efficiency, we also devise a novel quadtree based index to support the efficient retrieval of users in a region and optimise the search regions with regards to the given query region. Finally, we verify the performance of our proposed algorithms and index using five real datasets. © 2018 VLDB Endowment 21508097/18/4.
KW  - Trusses
KW  - Computational costs
KW  - Efficient exact algorithms
KW  - Highly-correlated
KW  - Pruning techniques
KW  - Real applications
KW  - Real data sets
KW  - Search region
KW  - Spatial informations
KW  - Approximation algorithms
PB  - Association for Computing Machinery
SN  - 21508097 (ISSN)
LA  - English
J2  - Proc. VLDB Endow.
M3  - Conference paper
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 76; Correspondence Address: L. Chen; Swinburne University of Technology, Australia; email: luchen@swin.edu.au
ER  -

TY  - JOUR
AU  - Xu, T.
AU  - Lu, Z.
AU  - Zhu, Y.
TI  - Efficient Triangle-Connected Truss Community Search In Dynamic Graphs
PY  - 2022
T2  - Proceedings of the VLDB Endowment
VL  - 16
IS  - 3
SP  - 519
EP  - 531
DO  - 10.14778/3570690.3570701
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85143545009&doi=10.14778%2f3570690.3570701&partnerID=40&md5=3add9bbc3d72b8c23921459b5dc50ea5
AD  - School of Computer Science, Wuhan University, China
AB  - Community search studies the retrieval of certain community structures containing query vertices, which has received lots of attention recently. k-truss is a fundamental community structure where each edge is contained in at least k − 2 triangles. Triangle-connected ktruss community (k-TTC) is a widely-used variant of k-truss, which is a maximal k-truss where edges can reach each other via a series of edge-adjacent triangles. Although existing works have provided indexes and query algorithms for k-TTC search, the cohesiveness of a k-TTC (diameter upper bound) has not been theoretically analyzed and the triangle connectivity has not been efficiently captured. Thus, we revisit the k-TTC search problem in dynamic graphs, aiming to achieve a deeper understanding of k-TTC. First, we prove that the diameter of a k-TTC with n vertices is bounded by ⌊ K+12n⌋. Then, we encapsulate triangle connectivity with two novel concepts, partial class and truss-precedence, based on which we build our compact index, EquiTree, to support the efficient k-TTC search. We also provide efficient index construction and maintenance algorithms for the dynamic change of graphs. Compared with the state-of-the-art methods, our extensive experiments show that EquiTree can boost search efficiency up to two orders of magnitude at a small cost of index construction and maintenance. © 2022, VLDB Endowment. All rights reserved.
KW  - Community structures
KW  - Dynamic graph
KW  - Index algorithms
KW  - Index construction
KW  - Index maintenance
KW  - Maximal k
KW  - Novel concept
KW  - Query algorithms
KW  - Search problem
KW  - Upper Bound
PB  - VLDB Endowment
SN  - 21508097 (ISSN)
LA  - English
J2  - Proc. VLDB Endow.
M3  - Article
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 2; Correspondence Address: Y. Zhu; School of Computer Science, Wuhan University, China; email: yyzhu@whu.edu.cn
ER  -

TY  - JOUR
AU  - Saxena, R.
AU  - Kaur, S.
AU  - Bhatnagar, V.
TI  - Social centrality using network hierarchy and community structure
PY  - 2018
T2  - Data Mining and Knowledge Discovery
VL  - 32
IS  - 5
SP  - 1421
EP  - 1443
DO  - 10.1007/s10618-018-0582-x
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85049866976&doi=10.1007%2fs10618-018-0582-x&partnerID=40&md5=9b4c90a15311d1e1ea3d120695ad3b04
AD  - Deshbandhu College, University of Delhi, New Delhi, India
AD  - Acharya Narendra Dev College, University of Delhi, New Delhi, India
AD  - Department of Computer Science, University of Delhi, New Delhi, India
AB  - Several centrality measures have been formulated to quantify the notion of ‘importance’ of actors in social networks. Current measures scrutinize either local or global connectivity of the nodes and have been found to be inadequate for social networks. Ignoring hierarchy and community structure, which are inherent in all human social networks, is the primary cause of this inadequacy. Positional hierarchy and embeddedness of an actor in the community are intuitively crucial determinants of his importance. The theory of social capital asserts that an actor’s importance is derived from his position in network hierarchy as well as from the potential to mobilize resources through intra-community (bonding) and inter-community (bridging) ties. Inspired by this idea, we propose a novel centrality measure social centrality (SC) for actors in social networks. Our measure accounts for—(1) an individual’s propensity to socialize, and (2) his connections within and outside the community. These two factors are suitably aggregated to produce social centrality score. Comparative analysis of SC measure with classical and recent centrality measures using large public networks shows that it consistently produces more realistic ranking of nodes. The inference is based on the available ground truth for each tested networks. Extensive analysis of rankings delivered by SC measure and mapping with known facts in well-studied networks justifies its effectiveness in diverse social networks. Scalability evaluation of SC measure justifies its efficacy for real-world large networks. © 2018, The Author(s).
KW  - Centrality
KW  - Community
KW  - Hierarchy
KW  - k-Truss decomposition
KW  - Social capital
KW  - Strength of ties
KW  - Computer applications
KW  - Data mining
KW  - Centrality
KW  - Community
KW  - Hierarchy
KW  - Social capitals
KW  - Strength of ties
KW  - Computer networks
PB  - Springer New York LLC
SN  - 13845810 (ISSN)
LA  - English
J2  - Data Min. Knowl. Discov.
M3  - Article
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 14; Correspondence Address: R. Saxena; Deshbandhu College, University of Delhi, New Delhi, India; email: rsaxena@db.du.ac.in
ER  -

TY  - CONF
AU  - Esfahani, F.
AU  - Wu, J.
AU  - Srinivasan, V.
AU  - Thomo, A.
AU  - Wu, K.
TI  - Fast truss decomposition in large-scale probabilistic graphs
PY  - 2019
T2  - Advances in Database Technology - EDBT
VL  - 2019-March
SP  - 722
EP  - 725
DO  - 10.5441/002/edbt.2019.96
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85064902616&doi=10.5441%2f002%2fedbt.2019.96&partnerID=40&md5=cbf725415cb58e8da710a4bddc33a059
AB  - Truss decomposition is popular for finding dense substructures in graphs. Discovering trusses in deterministic graphs has been widely discussed in the literature. However, with the intrinsic uncertainty in many networks such as social, biological, and communication networks, it is of great importance to study truss decomposition in a probabilistic context, but this has received much less attention till now. Furthermore, due to computation challenges of truss decomposition in probabilistic graphs, the state-of-the-art approaches are not scalable to large graphs. Given a user-defined threshold, we are interested in finding all the maximal subgraphs which are a k-truss with high probability. The most important challenge, which distinguishes truss decomposition in probabilistic graphs from deterministic graphs, is computing tail probabilities of edge supports. We employ a special version of the Central Limit Theorem (CLT) to obtain the tail probabilities efficiently. Based on our CLT approach we propose a peeling algorithm for truss decomposition of a probabilistic graph that scales to very large graphs and offers significant improvement over state-of-the-art. Our extensive experimental results confirm the scalability and efficiency of our approach. © 2019 Copyright held by the owner/author(s).
KW  - Computation theory
KW  - Database systems
KW  - Graphic methods
KW  - Probability
KW  - Central Limit Theorem
KW  - Edge supports
KW  - High probability
KW  - Peeling algorithm
KW  - Probabilistic graphs
KW  - State of the art
KW  - State-of-the-art approach
KW  - Tail probability
KW  - Trusses
A2  - Kaoudi Z.
A2  - Reinwald B.
A2  - Fundulaki I.
A2  - Herschel M.
A2  - Binnig C.
A2  - Galhardas H.
PB  - OpenProceedings.org
SN  - 23672005 (ISSN); 978-389318081-3 (ISBN)
LA  - English
J2  - Adv.  Database Technol. - EDBT
M3  - Conference paper
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 12
ER  -

TY  - CONF
AU  - Liu, B.
AU  - Zhang, F.
AU  - Zhang, W.
AU  - Lin, X.
AU  - Zhang, Y.
TI  - Efficient community search with size constraint
PY  - 2021
T2  - Proceedings - International Conference on Data Engineering
VL  - 2021-April
C7  - 9458794
SP  - 97
EP  - 108
DO  - 10.1109/ICDE51399.2021.00016
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85112867499&doi=10.1109%2fICDE51399.2021.00016&partnerID=40&md5=02d6fcf4f1b6827130810a7937361ce3
AD  - Guangzhou University, China
AD  - University of New South Wales, Australia
AD  - University of Technology Sydney
AB  - The studies of k-truss based community search demonstrated that it can find high-quality personalized com-munities with good properties such as high connectivity and bounded diameter. Motivated by natural restrictions from real applications, in this paper, we investigate the search of triangle-connected k-truss with size constraint (denoted by SCkT) in a graph G: given a size constraint s, an integer k, and query set Q, SCkT search aims to find a triangle-connected k-truss H containing the vertices in Q and with size (i.e., total number of vertices in H) not exceeding s. We prove that the SCkT search problem is NP-hard. To tame the hardness, we fully exploit the properties of triangle-connected k-truss subgraphs s.t. a practically-efficient exact solution for SCkT search is developed. A novel and effective lower bound is proposed to early terminate unpromising search branches and narrow down the search space. Two search strategies, expansion and shrinking, are investigated to tailor for efficient support of SCkT search. A hybrid search method is proposed combining the expansion and shrinking strategies, where a score function is used to guide the search order. Our extensive experiments on real-life and synthetic graphs demonstrate the effectiveness of the SCkT model and the efficiency of the proposed techniques. © 2021 IEEE.
KW  - Community search
KW  - K truss
KW  - Size constrained
KW  - NP-hard
KW  - Trusses
KW  - Bounded diameter
KW  - Exact solution
KW  - High connectivity
KW  - Real applications
KW  - Score function
KW  - Search strategies
KW  - Size constraint
KW  - Synthetic graphs
KW  - Graph theory
PB  - IEEE Computer Society
SN  - 10844627 (ISSN); 978-172819184-3 (ISBN)
LA  - English
J2  - Proc Int Conf Data Eng
M3  - Conference paper
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 22; Correspondence Address: B. Liu; Guangzhou University, China; email: boge.liu@unsw.edu.au; F. Zhang; Guangzhou University, China; email: zhangf@gzhu.edu.cn
ER  -

TY  - CONF
AU  - Diab, S.
AU  - Olabi, M.G.
AU  - El Hajj, I.
TI  - KTRussExPLORER: Exploring the Design Space of K-truss Decomposition Optimizations on GPUs
PY  - 2020
T2  - 2020 IEEE High Performance Extreme Computing Conference, HPEC 2020
C7  - 9286165
DO  - 10.1109/HPEC43674.2020.9286165
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85099381827&doi=10.1109%2fHPEC43674.2020.9286165&partnerID=40&md5=0bcf733cc76b14ed2769c45923347d3d
AD  - American University of Beirut, Lebanon
AB  - K-truss decomposition is an important method in graph analytics for finding cohesive subgraphs in a graph. Various works have accelerated k-truss decomposition on GPUs and have proposed different optimizations while doing so. The combinations of these optimizations form a large design space. However, most GPU implementations focus on a specific combination or set of combinations in this space. This paper surveys the optimizations applied to k-truss decomposition on GPUs, and presents KTRussExPLORER, a framework for exploring the design space formed by the combinations of these optimizations. Our evaluation shows that the best combination highly depends on the graph of choice, and analyses the conditions that make each optimization attractive. Some of the best combinations we find outperform previous Graph Challenge champions on many large graphs.  © 2020 IEEE.
KW  - Program processors
KW  - Design spaces
KW  - GPU implementation
KW  - Graph analytics
KW  - Large designs
KW  - Large graphs
KW  - Paper surveys
KW  - Subgraphs
KW  - Trusses
PB  - Institute of Electrical and Electronics Engineers Inc.
SN  - 978-172819219-2 (ISBN)
LA  - English
J2  - IEEE High Perform. Extrem. Comput. Conf., HPEC
M3  - Conference paper
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 9
ER  -

TY  - JOUR
AU  - Li, Z.
AU  - Lu, Y.
AU  - Zhang, W.-P.
AU  - Li, R.-H.
AU  - Guo, J.
AU  - Huang, X.
AU  - Mao, R.
TI  - Discovering Hierarchical Subgraphs of K-Core-Truss
PY  - 2018
T2  - Data Science and Engineering
VL  - 3
IS  - 2
SP  - 136
EP  - 149
DO  - 10.1007/s41019-018-0068-2
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85062716277&doi=10.1007%2fs41019-018-0068-2&partnerID=40&md5=a76d87c615b112a04f3c5b9a466983c4
AD  - Shenzhen University, Shenzhen, China
AD  - Shenzhen institute of information technology, Shenzhen, China
AD  - Beijing institute of technology, Beijing, China
AD  - Hong Kong Baptist University, Kowloon Tong, China
AB  - Discovering dense subgraphs in a graph is a fundamental graph mining task, which has a wide range of applications in social networks, biology and visualization to name a few. Even the problem of computing most cohesive subgraphs is NP-hard (like clique, quasi-clique, k-densest subgraph), there exists a polynomial time algorithm for computing the k-core and k-truss. In this paper, we propose a novel dense subgraph model, k-core-truss, which leverages on a new type of important edges based on the basis of k-core and k-truss. We investigate the structural properties of the k-core-truss model. Compared to k-core and k-truss, k-core-truss can significantly discover the interesting and important structural information out the scope of k-core and k-truss. We study two useful problems of k-core-truss decomposition and k-core-truss search. In particular, we develop a k-core-truss decomposition algorithm to find all k-core-truss in a graph G by iteratively removing edges with the smallest degree-support. In addition, we offer a k-core-truss search algorithm to identifying a particular k-core-truss containing a given query node such that the core number k is the largest. Extensive experiments on several web-scale real-world datasets show the effectiveness and efficiency of k-core-truss model and proposed algorithms. © 2018, The Author(s).
KW  - Cohesive subgraph model
KW  - Community search
KW  - k-core
KW  - k-core-truss
KW  - k-truss
PB  - Springer Science and Business Media Deutschland GmbH
SN  - 23641185 (ISSN)
LA  - English
J2  - Data Sci. Eng.
M3  - Article
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 13; Correspondence Address: Z. Li; Shenzhen University, Shenzhen, China; email: 15323940@qq.com
ER  -

TY  - CONF
AU  - Du, C.
AU  - Gou, X.
AU  - Wang, Y.
AU  - Xu, X.
TI  - Efficient and Effective Expert Finding based on Community Search: A Demonstration
PY  - 2022
T2  - Proceedings - 2022 10th International Conference on Advanced Cloud and Big Data, CBD 2022
SP  - 91
EP  - 97
DO  - 10.1109/CBD58033.2022.00025
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85147550122&doi=10.1109%2fCBD58033.2022.00025&partnerID=40&md5=bb3b12c0b4eaceb193801a9a8d08082f
AD  - Hangzhou Dianzi University, School of Computer Science, Hangzhou, China
AB  - In recent years, with the vigorous development of social networks, various kinds of data in the network have shown an explosive growth trend. Among them, a large amount of data in the field of academics includes rich and diverse entity information such as high-quality academic papers, experts, venues, and topics that have intricate and complex relationships, constituting important heterogeneous academic networks, e.g., DBLP. Many expert finding systems have been investigated on the academic network. But most of them are using textual keyword matching techniques to support the systems. Different from the above systems, we designed and implemented an expert finding system to effectively and efficiently return desired experts not only based on textual keyword matching, but also on the experts' relationship achieved by community search. It contains three layers: data processing layer, core algorithm layer, and application layer. The data processing layer is responsible for data collection and processing to construct heterogeneous academic networks. The core algorithm layer includes the academic network community search algorithm and Top-n expert finding through multiple recalls based on the Threshold algorithm. The application layer receives data from the core algorithm layer to present to users at the front end. On this basis, our core algorithms can also be migrated to other applications, e.g., recommendation, biological data analysis, reviewer assignment, and public safety protection.  © 2022 IEEE.
KW  - Elastic Search
KW  - Expert finding
KW  - k-Truss
KW  - multiple recall
KW  - Bioinformatics
KW  - Network layers
KW  - Search engines
KW  - Application layers
KW  - Core algorithms
KW  - Elastic search
KW  - Expert finding
KW  - Expert finding systems
KW  - Explosive growth
KW  - K-truss
KW  - Key word matching
KW  - Multiple recall
KW  - Processing layer
KW  - Data handling
PB  - Institute of Electrical and Electronics Engineers Inc.
SN  - 979-835030971-3 (ISBN)
LA  - English
J2  - Proc. - Int. Conf. Adv. Cloud Big Data, CBD
M3  - Conference paper
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 0; Correspondence Address: C. Du; Hangzhou Dianzi University, School of Computer Science, Hangzhou, China; email: cydu@hdu.edu.cn
ER  -

TY  - CONF
AU  - Rao, S.
AU  - Kutuluru, A.
AU  - Brouwer, P.
AU  - McMillan, S.
AU  - Franchetti, F.
TI  - GBTLX: A First Look
PY  - 2020
T2  - 2020 IEEE High Performance Extreme Computing Conference, HPEC 2020
C7  - 9286231
DO  - 10.1109/HPEC43674.2020.9286231
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85099398810&doi=10.1109%2fHPEC43674.2020.9286231&partnerID=40&md5=d19b0c09b552cd22af6f6045403bf18c
AD  - Carnegie Mellon University, Department of Electrical and Computer Engineering, Pittsburgh, 15213, PA, United States
AD  - Software Engineering Institute, Carnegie Mellon University, Pittsburgh, 15213, PA, United States
AB  - We provide a first look at GBTLX, a code generator that translates graph processing programs written using the GraphBLAS Template Library (GBTL) into high-performance C programs that match the performance of hand-tuned implementations. GBTLX refactors code written using GBTL into problems that capture the signature of algorithms and solvers that capture the semantics (input/output behavior of algorithms. Users provide classes that implement these two aspects using standard GBTL functions and encapsulate the targeted algorithm. GBTLX then performs a sequence of inspection, code generation, and high-performance execution. First, the user code is traced while running with the original GBTL. Then, the trace is used to define the semantics and signature of the algorithm to be produced in code generation. The SPIRAL system is used to generate high-performance C code that implements the user-specified algorithm, specializing the code for algorithm and hardware-dependent optimizations. Finally, the user-provided GBTL-based implementation is replaced by the SPIRAL generated C code. For triangle counting and k-truss enumeration, the resulting executables provide performance equivalent to hand-tuned implementations, while the source code is maintainable as it only uses the C++ GBTL library.  © 2020 IEEE.
KW  - Cryptography
KW  - Semantics
KW  - Code Generation
KW  - Code generators
KW  - Executables
KW  - First look
KW  - Graph processing
KW  - Input/output behaviors
KW  - Source codes
KW  - Template libraries
KW  - C++ (programming language)
PB  - Institute of Electrical and Electronics Engineers Inc.
SN  - 978-172819219-2 (ISBN)
LA  - English
J2  - IEEE High Perform. Extrem. Comput. Conf., HPEC
M3  - Conference paper
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 1
ER  -

TY  - JOUR
AU  - Chen, C.
AU  - Zhang, M.
AU  - Sun, R.
AU  - Wang, X.
AU  - Zhu, W.
AU  - Wang, X.
TI  - Locating pivotal connections: the K-Truss minimization and maximization problems
PY  - 2022
T2  - World Wide Web
VL  - 25
IS  - 2
SP  - 899
EP  - 926
DO  - 10.1007/s11280-021-00933-z
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85111888921&doi=10.1007%2fs11280-021-00933-z&partnerID=40&md5=dfcb53db89976b835d8189ccfbbe4cd0
AD  - Zhejiang Gongshang University, Hangzhou, China
AD  - East China Normal University, Shanghai, China
AB  - In social networks, the strength of relationships between users can significantly affect the stability of the network. Two users are more likely to build the friendship if they share some common friends. Meanwhile, the breakdown or enhancement of critical connections may lead to a cascaded phenomenon and cause the social network collapsed or reinforced. In this paper, we leverage the k-truss model to measure the stability of a social network. To identify the critical edges, we propose two novel problems named k-truss minimization problem and k-truss maximization problem. Given a social network G, a positive integer k and a budget b, it aims to find b edges for deletion (resp. addition), which can lead to the maximum number of edges collapsed (resp. added) in the k-truss of G. We prove that both problems are NP-hard. To accelerate the computation, novel pruning rules and searching paradigms are developed for the corresponding problem. Comprehensive experiments are conducted over 9 real-life networks to demonstrate the effectiveness and efficiency of our proposed models and approaches. © 2021, The Author(s), under exclusive licence to Springer Science+Business Media, LLC, part of Springer Nature.
KW  - Critical edge
KW  - k-truss
KW  - Maximization
KW  - Minimization
KW  - NP-hard
KW  - Budget control
KW  - NP-hard
KW  - Critical connections
KW  - Critical edges
KW  - Effectiveness and efficiencies
KW  - Maximization problem
KW  - Minimization problems
KW  - Positive integers
KW  - Real-life networks
KW  - Truss model
KW  - Trusses
PB  - Springer
SN  - 1386145X (ISSN)
LA  - English
J2  - World Wide Web
M3  - Article
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 3; Correspondence Address: X. Wang; Zhejiang Gongshang University, Hangzhou, China; email: xiaoyangw@zjgsu.edu.cn
ER  -

TY  - CONF
AU  - Zhu, Y.
AU  - Zhang, Q.
AU  - Qin, L.
AU  - Chang, L.
AU  - Yu, J.X.
TI  - Querying cohesive subgraphs by keywords
PY  - 2018
T2  - Proceedings - IEEE 34th International Conference on Data Engineering, ICDE 2018
C7  - 8509362
SP  - 1328
EP  - 1331
DO  - 10.1109/ICDE.2018.00141
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85057137908&doi=10.1109%2fICDE.2018.00141&partnerID=40&md5=e68570267c348617b737afaa3539e368
AD  - Computer School, Wuhan University, China
AD  - Centre for Quantum Computation and Intelligent Systems, University of Technology Sydney, Australia
AD  - School of Information Technologies, University of Sydney, Australia
AD  - Chinese University of Hong Kong, Hong Kong, Hong Kong
AB  - Keyword search problem has been widely studied to retrieve related substructures from graphs for a keyword set. However, existing well-studied approaches aim at finding compact trees/subgraphs containing the keywords, and ignore a critical measure, density, to reflect how strongly and stablely the keyword nodes are connected in the substructure. In this paper, we study the problem of finding a cohesive subgraph containing the query keywords based on the k-Truss model, and formulate it as minimal dense truss search problem, i.e., finding minimal subgraph with maximum trussness covering the keywords. We first propose an efficient algorithm to find the dense truss with the maximum trussness containing keywords based on a novel hybrid KT-Index (Keyword-Truss Index). Then, we develop a novel refinement approach to extract the minimal dense truss based on the anti-monotonicity property of k-Truss. Experimental studies on real datasets show the outperformance of our method. © 2018 IEEE.
KW  - Cohesive Subgraph
KW  - Keyword Search
KW  - Large Graph
KW  - Search engines
KW  - Anti-monotonicity properties
KW  - Compact tree
KW  - Keyword search
KW  - Large graphs
KW  - Real data sets
KW  - Search problem
KW  - Subgraphs
KW  - Truss model
KW  - Trusses
PB  - Institute of Electrical and Electronics Engineers Inc.
SN  - 978-153865520-7 (ISBN)
LA  - English
J2  - Proc. - IEEE Int. Conf. Data Eng., ICDE
M3  - Conference paper
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 16
ER  -

TY  - CONF
AU  - Wang, C.
AU  - Zhu, J.
TI  - Forbidden nodes aware community search
PY  - 2019
T2  - 33rd AAAI Conference on Artificial Intelligence, AAAI 2019, 31st Innovative Applications of Artificial Intelligence Conference, IAAI 2019 and the 9th AAAI Symposium on Educational Advances in Artificial Intelligence, EAAI 2019
SP  - 758
EP  - 765
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85085861632&partnerID=40&md5=da1ba791b5c3ac50527c4dba8d916c15
AD  - School of Software, Tsinghua University, Beijing, 100084, China
AB  - Community search is an important problem in network analysis, which has attracted much attention in recent years. It starts with some given nodes, pays more attention to local network structures, and gets personalized resultant communities quickly. In this paper, we argue that there are many real scenarios where some nodes are not allowed to appear in the community. Then, we introduce a new concept called forbidden nodes and present a new problem of forbidden nodes aware community search to describe these scenarios. To address the above problem, three methods are proposed, i.e., k-core based FORTE (Forbidden nOdes awaRe communiTy sEarch), k-truss based FORTE and CW based FORTE, where the effects of both forbidden nodes and query nodes are thoroughly considered for each node in the resultant community. The former two methods are able to make use of popular community structures, while the latter is based on a new metric called weighted conductance. The extensive experiments conducted on real data sets demonstrate the effectiveness of the proposed methods. © 2019, Association for the Advancement of Artificial Intelligence (www.aaai.org). All rights reserved.
KW  - Community structures
KW  - In-network analysis
KW  - K-cores
KW  - Local networks
KW  - Query nodes
KW  - Real data sets
KW  - Artificial intelligence
PB  - AAAI Press
SN  - 978-157735809-1 (ISBN)
LA  - English
J2  - AAAI Conf. Artif. Intell., AAAI, Innov. Appl. Artif. .igence Conf., IAAI AAAI Symp. Educ. Adv. Artif. Intell., EAAI
M3  - Conference paper
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 10; Correspondence Address: C. Wang; School of Software, Tsinghua University, Beijing, 100084, China; email: chaokun@tsinghua.edu.cn
ER  -

TY  - CONF
AU  - Xie, X.
AU  - Liu, C.
AU  - Zhang, J.
AU  - Li, J.
TI  - Influential attribute community search
PY  - 2019
T2  - Proceedings - 21st IEEE International Conference on High Performance Computing and Communications, 17th IEEE International Conference on Smart City and 5th IEEE International Conference on Data Science and Systems, HPCC/SmartCity/DSS 2019
C7  - 8855396
SP  - 2630
EP  - 2636
DO  - 10.1109/HPCC/SmartCity/DSS.2019.00369
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85073535670&doi=10.1109%2fHPCC%2fSmartCity%2fDSS.2019.00369&partnerID=40&md5=4629c51801739475658309d09b95657f
AD  - College of Computer Science and Technology, Harbin Engineering University, Harbin, China
AB  - Community search in node-attributed network has attracted extensive attention. But, most of previous researches ignore the influence among nodes. This lead to inaccuracy in many scenes where it requires communities with high expansibility. Some researches may consider the influence in community search, but they ignore the attributes cohesion of community. In this paper, we study community search problem and propose an influential attribute community search method based on both influence and attribute features. Our method can find the attributed pk-truss community with largest attribute and influence relevance score function. Most of the community models adopt k-core or k-clique. But k-core has weaker structural tightness than that of k-truss, and k-clique has a strong rule and high computation complexity. So in our method, we first present attributed pk-truss community model based on k-truss. Then we propose a novel score function to check the cohesion of the community. This function can consider both the influence features and attribute features of the community. So it can improve the accuracy of searching results. Besides, to conduct influential attribute community search in large network, our method introduces graph refining method. Experiments on two large networks with ground-truth communities show the quality evaluation, effectiveness and efficiency of our proposed method. © 2019 IEEE.
KW  - community search
KW  - graph refining
KW  - influential attribute community
KW  - pk truss community model
KW  - Refining
KW  - Smart city
KW  - Trusses
KW  - Community model
KW  - community search
KW  - Computation complexity
KW  - Effectiveness and efficiencies
KW  - influential attribute community
KW  - Large networks
KW  - Quality evaluation
KW  - Relevance score
KW  - Data communication systems
A2  - Xiao Z.
A2  - Yang L.T.
A2  - Balaji P.
A2  - Li T.
A2  - Li K.
A2  - Zomaya A.
PB  - Institute of Electrical and Electronics Engineers Inc.
SN  - 978-172812058-4 (ISBN)
LA  - English
J2  - Proc. - IEEE Int. Conf. High Perform. Comput. Commun., IEEE Int. Conf. Smart City IEEE Int. Conf. Data Sci. Syst., HPCC/SmartCity/DSS
M3  - Conference paper
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 3
ER  -

TY  - CONF
AU  - Yang, Y.
AU  - Fang, Y.
AU  - Lin, X.
AU  - Zhang, W.
TI  - Effective and efficient truss computation over large heterogeneous information networks
PY  - 2020
T2  - Proceedings - International Conference on Data Engineering
VL  - 2020-April
C7  - 9101354
SP  - 901
EP  - 912
DO  - 10.1109/ICDE48307.2020.00083
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85085866006&doi=10.1109%2fICDE48307.2020.00083&partnerID=40&md5=be5e61ac09c29f039d5b678cfec6e927
AD  - University of New South Wales, School of Computer Science and Engineering, Australia
AB  - Recently, the topic of truss computation has gained plenty of attention, where the k-truss of a graph is the maximum subgraph in which each edge participates in at least (k-2) triangles. Existing solutions mainly focus on homogeneous networks, where vertices are of the same type, and thus cannot be applied to heterogeneous information networks which consist of multi-typed and interconnected objects, such as the bibliographic networks and knowledge graphs. In this paper, we study the problem of truss computation over HINs, which aims to find groups of vertices that are of the same type and densely connected.To model the relationship between two vertices of the same type, we adopt the well-known concept of meta-path, which is a sequence of vertex types and edge types between two given vertex types. We then introduce two kinds of HIN triangles for three vertices, regarding a specific meta-path P. The first one requires that each pair of vertices is connected by an instance of P, while the second one also has such a connectivity constraint but further needs that the three instances of P form a circle. Based on these two kinds of triangles, we propose two HIN truss models respectively. We further develop efficient truss computation algorithms. We have performed extensive experiments on five real large HINs, and the results show that the proposed solutions are highly effective and efficient. © 2020 IEEE.
KW  - Information services
KW  - Trusses
KW  - Computation algorithm
KW  - Connectivity constraints
KW  - Heterogeneous information
KW  - Homogeneous network
KW  - Knowledge graphs
KW  - Subgraphs
KW  - Truss model
KW  - Computational efficiency
PB  - IEEE Computer Society
SN  - 10844627 (ISSN); 978-172812903-7 (ISBN)
LA  - English
J2  - Proc Int Conf Data Eng
M3  - Conference paper
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 23; Correspondence Address: Y. Fang; University of New South Wales, School of Computer Science and Engineering, Australia; email: yixiang.fang@unsw.edu.au
ER  -

TY  - CONF
AU  - Lu, Z.
AU  - Feng, Y.
AU  - Cao, Q.
TI  - Two-level index for truss community query in large-scale graphs
PY  - 2019
T2  - 2019 IEEE Global Communications Conference, GLOBECOM 2019 - Proceedings
C7  - 9013837
DO  - 10.1109/GLOBECOM38437.2019.9013837
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85081964324&doi=10.1109%2fGLOBECOM38437.2019.9013837&partnerID=40&md5=cbe18de5c7e903123832a622a6af0aaa
AD  - Dept. of Electrical Engineering and Computer Science, University of Tennessee, Knoxville, United States
AB  - Recently, there has been a significant interest in the study of the community search problem in large- scale graphs. K-truss as a community model has drawn increasing attention in the literature. In this work, we extend our scope from the community search problems to a more generalized local community query problem based on a triangle- connected k-truss community model. We classify local community query into two categories, community-level and edge-level query, based on the information required to process a given query. We design a two-level index structure that supports both types of queries with multiple query vertices and arbitrary cohesiveness criteria. We conduct extensive experiments using real-world large-scale graphs and compare with the state-of-the-art methods of k-truss community search. The results show that our method outperforms the state-of-the- art works in various types of local k-truss community queries. © 2019 IEEE.
KW  - K-truss
KW  - Large-scale graphs
KW  - Query-dependent community detection
KW  - Classification (of information)
KW  - Graphic methods
KW  - Community detection
KW  - Community model
KW  - Index structure
KW  - Large-scale graphs
KW  - Local community
KW  - Multiple queries
KW  - State of the art
KW  - State-of-the-art methods
KW  - Trusses
PB  - Institute of Electrical and Electronics Engineers Inc.
SN  - 978-172810962-6 (ISBN)
LA  - English
J2  - IEEE Glob. Commun. Conf., GLOBECOM - Proc.
M3  - Conference paper
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 0
ER  -

TY  - CONF
AU  - Jabbour, S.
AU  - Kmimech, M.
AU  - Raddaoui, B.
TI  - Discovering Overlapping Communities Based on Cohesive Subgraph Models over Graph Data
PY  - 2022
T2  - Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)
VL  - 13428 LNCS
SP  - 189
EP  - 201
DO  - 10.1007/978-3-031-12670-3_16
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85135930114&doi=10.1007%2f978-3-031-12670-3_16&partnerID=40&md5=9f553ae4917cfda1a43ecc751102b967
AD  - CRIL - CNRS UMR 8188, University of Artois, Arras, France
AD  - ISMM, University of Monastir, Monastir, Tunisia
AD  - SAMOVAR, Télécom SudParis, Institut Polytechnique de Paris, Palaiseau, France
AB  - Detecting and analyzing dense subgroups or communities from social and information networks has attracted great attention over last decade due to its enormous applicability in various domains. A number of approaches have been made to solve this challenging problem using different quality functions and data structures. A number of cohesive structures have been defined as a primary element for community discovery in networks. Unfortunately, most of these structures suffer from computational intractability and they fail to mine meaningful communities from real-world graphs. The main objective of the paper is to exploit some cohesive structures in one unified framework to detect high-quality communities in networks. First, we revisit some existing subgraph models by showing their limits in terms of cohesiveness, which is an elementary aspect in graph theory. Next, to make these structures more effective models of communities, we focus on interesting configurations that are larger and more densely connected by fulfilling some new constraints. The new structures allow to ensure a larger density on the discovered clusters and overcome the weaknesses of the existing structures. The performance studies demonstrate that our approach significantly outperform state-of-the-art techniques for computing overlapping communities in real-world networks by several orders of magnitude. © 2022, The Author(s), under exclusive license to Springer Nature Switzerland AG.
KW  - Graph mining
KW  - k-edge-connected component
KW  - k-truss
KW  - Overlapping community detection
KW  - Computation theory
KW  - Information services
KW  - Community-based
KW  - Connected component
KW  - Graph data
KW  - Graph mining
KW  - In networks
KW  - K-edge-connected component
KW  - K-truss
KW  - Overlapping communities
KW  - Overlapping community detections
KW  - Subgraphs
KW  - Graph theory
A2  - Wrembel R.
A2  - Gamper J.
A2  - Kotsis G.
A2  - Khalil I.
A2  - Tjoa A.M.
PB  - Springer Science and Business Media Deutschland GmbH
SN  - 03029743 (ISSN); 978-303112669-7 (ISBN)
LA  - English
J2  - Lect. Notes Comput. Sci.
M3  - Conference paper
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 0; Correspondence Address: S. Jabbour; CRIL - CNRS UMR 8188, University of Artois, Arras, France; email: jabbour@cril.fr
ER  -

TY  - CONF
AU  - Ebadian, S.
AU  - Huang, X.
TI  - Fast algorithm for k-truss discovery on public-private graphs
PY  - 2019
T2  - IJCAI International Joint Conference on Artificial Intelligence
VL  - 2019-August
SP  - 2258
EP  - 2264
DO  - 10.24963/ijcai.2019/313
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85074957586&doi=10.24963%2fijcai.2019%2f313&partnerID=40&md5=0abe5555aedeaad531e706b15758a14b
AD  - Sharif University of Technology, Iran
AD  - Hong Kong Baptist University, Hong Kong
AB  - In public-private graphs, users share one public graph and have their own private graphs. A private graph consists of personal private contacts that only can be visible to its owner, e.g., hidden friend lists on Facebook and secret following on Sina Weibo. However, existing public-private analytic algorithms have not yet investigated the dense subgraph discovery of k-truss, where each edge is contained in at least k − 2 triangles. This paper aims at finding k-truss efficiently in public-private graphs. The core of our solution is a novel algorithm to update k-truss with node insertions. We develop a classification-based hybrid strategy of node insertions and edge insertions to incrementally compute k-truss in public-private graphs. Extensive experiments validate the superiority of our proposed algorithms against state-of-the-art methods on real-world datasets. © 2019 International Joint Conferences on Artificial Intelligence. All rights reserved.
A2  - Kraus S.
PB  - International Joint Conferences on Artificial Intelligence
SN  - 10450823 (ISSN); 978-099924114-1 (ISBN)
LA  - English
J2  - IJCAI Int. Joint Conf. Artif. Intell.
M3  - Conference paper
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 17
ER  -

TY  - CONF
AU  - Ma, J.
AU  - Zheng, X.
AU  - Liu, Y.
AU  - Chen, Z.
TI  - KBP: Mining Block Access Pattern for I/O Prediction with K-Truss
PY  - 2021
T2  - 19th IEEE International Symposium on Parallel and Distributed Processing with Applications, 11th IEEE International Conference on Big Data and Cloud Computing, 14th IEEE International Conference on Social Computing and Networking and 11th IEEE International Conference on Sustainable Computing and Communications, ISPA/BDCloud/SocialCom/SustainCom 2021
SP  - 167
EP  - 176
DO  - 10.1109/ISPA-BDCloud-SocialCom-SustainCom52081.2021.00035
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85124143426&doi=10.1109%2fISPA-BDCloud-SocialCom-SustainCom52081.2021.00035&partnerID=40&md5=4fbc781d4bd76d8546bf88c0078eb6bd
AD  - Sun Yat-sen University, School of Computer Science and Engineering, Guangdong, Guangzhou, 510006, China
AB  - Block prefetching is a technology widely used to improve the I/O efficiency of storage systems. Block access pattern prediction is a key part of the prefetching algorithm. However, existing block access pattern prediction methods cannot achieve the goals of low overhead, real-time, and self- adaptability at the same time. In this paper, we propose a real-time prediction method, called KBP (K-Truss-based Block access pattern Prediction). KBP uses SA (Sequential Access) Filter to identify and filter sequential access patterns to distinguish different patterns. Then, KBP uses K-Truss dense subgraph algorithm to detect compound access patterns, so as to use the time and space advantages of the K-Truss algorithm to reduce the overhead of access pattern recognition and make it possible for KBP to run in real time. Furthermore, KBP uses online reinforcement learning to achieve the goal of self- adaptability. We evaluate KBP in real-world workloads and the results show that KBP can improve the hit rate of 11.2% compared to the state-of-the-art prefetching algorithms on average. © 2021 IEEE.
KW  - Access pattern
KW  - Block storage
KW  - K-Truss dense sub-graph
KW  - Prefetching
KW  - Filtration
KW  - Reinforcement learning
KW  - Trusses
KW  - Access patterns
KW  - Block storage
KW  - Dense sub-graphs
KW  - K-truss dense sub-graph
KW  - Key parts
KW  - Prefetching
KW  - Prefetching algorithm
KW  - Self-adaptability
KW  - Sequential access
KW  - Storage systems
KW  - Forecasting
PB  - Institute of Electrical and Electronics Engineers Inc.
SN  - 978-166543574-1 (ISBN)
LA  - English
J2  - IEEE Int. Symp. Parallel Distrib. Process. Appl., IEEE Int. Conf. Big Data Cloud Comput., IEEE Int. Conf. Soc. Comput. Netw. IEEE Int. Conf. Sustain. Comput. Commun., ISPA/BDCloud/SocialCom/SustainCom
M3  - Conference paper
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 1; Correspondence Address: Z. Chen; Sun Yat-sen University, School of Computer Science and Engineering, Guangzhou, Guangdong, 510006, China; email: zhiguang.chen@nscc-gz.cn
ER  -

TY  - JOUR
AU  - Fei, R.
AU  - Wan, Y.
AU  - Hu, B.
AU  - Li, A.
AU  - Li, Q.
TI  - A novel network core structure extraction algorithm utilized variational autoencoder for community detection
PY  - 2023
T2  - Expert Systems with Applications
VL  - 222
C7  - 119775
DO  - 10.1016/j.eswa.2023.119775
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85150166039&doi=10.1016%2fj.eswa.2023.119775&partnerID=40&md5=0965ed509a0faba11d8a422768ffd01e
AD  - School of Computer Science and Engineering, Xi'an University of Technology, Shaanxi, Xi'an, China
AD  - Shaanxi Key Laboratory for Network Computing and Security Technology, Shaanxi, Xi'an, China
AD  - Hangzhou HollySys Automation Co., Ltd., Zhejiang, Hangzhou, China
AB  - Community detection technologies have the general research significance in complex networks, in which the topology information of network is worthy to be the focus for its widely application. It is the definition of community structure that the connection of nodes in the community is dense with the connection of nodes outside the community is sparse, which is corresponding to the core structure in the complex real networks is represented by a compact and dense set of connected nodes. While all the notes in the network are considered by the traditional topology, it is hard to extract the core structure with the continuous, exponential growth of community networks. In this paper, a novel network core structure extraction algorithm utilized variational autoencoder for community detection(CSEA) is proposed for finding the community structure more accurately. Firstly, the K-truss algorithm is used to find the core structure information in the network, and the similarity matrix is generated by similarity mapping combined with local information. Secondly, the variational autoencoder is used to extract and reduce the dimension of the similarity matrix containing the core structure of the network, and the low-dimensional feature matrix is obtained. Finally, the K-means clustering algorithm is utilized to obtain the community structure information. We compare CSEA algorithm with 18 different types of community detection algorithms using 4 evaluation metrics on 19 complex real networks. By extensively evaluating our algorithm on large real-world datasets, we show that CSEA algorithm has an excellent community division effect in dense complex real networks, especially in small and medium-sized networks, and it can accurately divide the complex real networks with unknown community structure. Simultaneously, CSEA algorithm also reveals some efficiency advantage in its on-line test. © 2023 Elsevier Ltd
KW  - Clustering
KW  - Community detection
KW  - Complex networks
KW  - Core structure
KW  - Variational autoencoder
KW  - Extraction
KW  - K-means clustering
KW  - Large dataset
KW  - Learning systems
KW  - Population dynamics
KW  - Topology
KW  - Auto encoders
KW  - Clusterings
KW  - Community detection
KW  - Community structures
KW  - Core structure
KW  - Extraction algorithms
KW  - Network core
KW  - Real networks
KW  - Structure extraction
KW  - Variational autoencoder
KW  - Complex networks
PB  - Elsevier Ltd
SN  - 09574174 (ISSN)
LA  - English
J2  - Expert Sys Appl
M3  - Article
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 3; Correspondence Address: R. Fei; School of Computer Science and Engineering, Xi'an University of Technology, Xi'an, Shaanxi, China; email: annyfei@xaut.edu.cn; B. Hu; Hangzhou HollySys Automation Co., Ltd., Hangzhou, Zhejiang, China; email: jobobo@outlook.com; CODEN: ESAPE
ER  -

TY  - CONF
AU  - Davis, T.A.
TI  - Graph algorithms via SuiteSparse: GraphBLAS: triangle counting and K-truss
PY  - 2018
T2  - 2018 IEEE High Performance Extreme Computing Conference, HPEC 2018
C7  - 8547538
DO  - 10.1109/HPEC.2018.8547538
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85059458258&doi=10.1109%2fHPEC.2018.8547538&partnerID=40&md5=0b8d5f1ccc38c56dcd266ec4babae8ba
AD  - Dept. of Computer Science and Engineering, Texas AandM University, College Station, TX, United States
AB  - SuiteSparse: GraphBLAS is a full implementation of the GraphBLAS standard, which defines a set of sparse matrix operations on an extended algebra of semirings using an almost unlimited variety of operators and types. When applied to sparse adjacency matrices, these algebraic operations are equivalent to computations on graphs. GraphBLAS provides a powerful and expressive framework for creating graph algorithms based on the elegant mathematics of sparse matrix operations on a semiring. To illustrate GraphBLAS, two graph algorithms are constructed in GraphBLAS and compared with efficient implementations without GraphBLAS: triangle counting and constructing the k-truss of a graph. © 2018 IEEE.
KW  - Graph algorithms
KW  - Sparse matrix computations
KW  - Graph theory
KW  - Trusses
KW  - Adjacency matrices
KW  - Algebraic operations
KW  - Efficient implementation
KW  - Graph algorithms
KW  - Semirings
KW  - Sparse matrices
KW  - Sparse matrix computations
KW  - Two-graphs
KW  - Matrix algebra
PB  - Institute of Electrical and Electronics Engineers Inc.
SN  - 978-153865989-2 (ISBN)
LA  - English
J2  - IEEE High Perform. Extrem. Comput. Conf., HPEC
M3  - Conference paper
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 37; Correspondence Address: T.A. Davis; Dept. of Computer Science and Engineering, Texas AandM University, College Station, United States; email: davis@tamu.edu
ER  -

TY  - CONF
AU  - Ghalmane, Z.
AU  - El Hassouni, M.
AU  - Cherifi, C.
AU  - Cherifi, H.
TI  - K-Truss Decomposition for Modular Centrality
PY  - 2018
T2  - 9th International Symposium on Signal, Image, Video and Communications, ISIVC 2018 - Proceedings
C7  - 8709196
SP  - 241
EP  - 248
DO  - 10.1109/ISIVC.2018.8709196
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85065990138&doi=10.1109%2fISIVC.2018.8709196&partnerID=40&md5=36272a031039c691e5611408388c2bdb
AD  - LRIT, Faculty of Sciences, Rabat IT Center, Mohammed V University, Rabat, Morocco
AD  - DISP Lab, University of Lyon 2, Lyon, France
AD  - LIB, University of Burgundy, Dijon, France
AB  - There is currently much interest in identifying influential spreaders in complex networks due to many applications concerned, such as controlling the outbreak of epidemics and conducting advertisements for commercial products, and so on. A plethora of centrality measures have been proposed over the years based on the topological properties of networks. However, most of these classical centrality measures fail to select the most influential nodes in networks with a modular structure despite that it is an omnipresent property in real-world networks. Few authors have introduced centrality measures tailored to networks with community structure. In a recent work, we have shown that, in this case, the centrality of a node should be represented by a two-dimensional vector. The first component quantifies the local influence of the node in its community, while the second component quantifies the global influence of the node on the communities which it is linked to. In order to compute the so-called modular centrality, one needs to know the community structure of the network. Unfortunately, in most cases, it is unknown and a community detection algorithm must be used. The majority of these algorithms are computationally intensive and sometimes they are inappropriate for large networks. In this paper, a community detection method based on the k-truss decomposition is used. Thanks to its nice structural and computational properties, it is well-adapted to large networks. Furthermore, we present a new ranking measure based on the weighted combination of both components of the modular centrality. Using the Susceptible-Infected-Recovered (SIR) model in epidemic spreading simulations, we show that substantial improvements can be gained in order to identify the influential spreaders with significantly less computational cost and complexity. © 2018 IEEE.
KW  - Population dynamics
KW  - Spreaders
KW  - Topology
KW  - Trusses
KW  - Centrality measures
KW  - Commercial products
KW  - Community detection algorithms
KW  - Community structures
KW  - Computational costs
KW  - Computational properties
KW  - Susceptible-infected-recovered model
KW  - Topological properties
KW  - Complex networks
A2  - Laanaya H.
A2  - Lotfi D.
A2  - Minaoui K.
A2  - Mouline S.
A2  - Rivenq A.
A2  - El Hassouni M.
A2  - Ouadou M.
A2  - Rziza M.
A2  - Saoudi S.
PB  - Institute of Electrical and Electronics Engineers Inc.
SN  - 978-153868173-2 (ISBN)
LA  - English
J2  - Int. Symp. Signal, Image, Video Commun., ISIVC - Proc.
M3  - Conference paper
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 8
ER  -

TY  - JOUR
AU  - Luo, Q.
AU  - Yu, D.
AU  - Cheng, X.
AU  - Sheng, H.
AU  - Lyu, W.
TI  - Exploring Truss Maintenance in Fully Dynamic Graphs: A Mixed Structure-Based Approach
PY  - 2023
T2  - IEEE Transactions on Computers
VL  - 72
IS  - 3
SP  - 707
EP  - 718
DO  - 10.1109/TC.2022.3174594
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85132535733&doi=10.1109%2fTC.2022.3174594&partnerID=40&md5=9f87c4a123874f11f49e3613b912ad91
AD  - Shandong University, School of Computer Science and Technology, Qingdao, 266237, China
AD  - Beihang University, School of Computer Science and Engineering, Beijing, 100190, China
AB  - Graphs are widely employed in complex system modeling, VLSI design, and social analysis. Mining cohesive subgraphs is a fundamental problem in graph analysis, while implementing cohesive subgraphs requires analysts to not only ensure cohesiveness but also consider the computational intractability. Among a variety of diverse cohesive structures, k-truss exhibits a perfect trade-off between structure tightness and computational efficiency. In a k-truss, each edge is present in at least k-2 triangles. This study aims to contribute to this growing area of truss maintenance in fully dynamic graphs by avoiding expensive re-computation. Specifically, we consider the challenging scenario of batch processing of edge and vertex insertion/deletion and propose efficient algorithms that can maintain the trusses by only searching a very small range of affected edges. Also, our algorithms allow parallel implementations to further improve the efficiency of maintenance. Extensive experiments on both real-world static and temporal graphs illustrate the efficiency and scalability of our algorithms.  © 1968-2012 IEEE.
KW  - Graph analysis
KW  - mixed structure
KW  - truss maintenance
KW  - Batch data processing
KW  - Computational efficiency
KW  - Economic and social effects
KW  - Job analysis
KW  - Maintenance
KW  - Online systems
KW  - Social networking (online)
KW  - Trusses
KW  - Batch production
KW  - Batch production system
KW  - Collaboration
KW  - Graph analysis
KW  - Heuristics algorithm
KW  - Mixed structure
KW  - Production system
KW  - Social networking (online)
KW  - Task analysis
KW  - Truss maintenance
KW  - Verylarge-scale integrations (VLSI)
KW  - Heuristic algorithms
PB  - IEEE Computer Society
SN  - 00189340 (ISSN)
LA  - English
J2  - IEEE Trans Comput
M3  - Article
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 2; Correspondence Address: D. Yu; Shandong University, School of Computer Science and Technology, Qingdao, 266237, China; email: dxyu@sdu.edu.cn; CODEN: ITCOB
ER  -

TY  - CONF
AU  - Liu, Q.
AU  - Zhu, Y.
AU  - Zhao, M.
AU  - Huang, X.
AU  - Xu, J.
AU  - Gao, Y.
TI  - VAC: Vertex-centric attributed community search
PY  - 2020
T2  - Proceedings - International Conference on Data Engineering
VL  - 2020-April
C7  - 9101813
SP  - 937
EP  - 948
DO  - 10.1109/ICDE48307.2020.00086
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85085863364&doi=10.1109%2fICDE48307.2020.00086&partnerID=40&md5=adad584af8cff31b2314a581cad2ac55
AD  - Hong Kong Baptist University, Department of Computer Science, Hong Kong
AD  - Zhejiang University, College of Computer Science, Hangzhou, China
AD  - AlibabaZhejiang University Joint Institute of Frontier Technologies, Hangzhou, China
AB  - Attributed community search aims to find the community with strong structure and attribute cohesiveness from attributed graphs. However, existing works suffer from two major limitations: (i) it is not easy to set the conditions on query attributes; (ii) the queries support only a single type of attributes. To make up for these deficiencies, in this paper, we study a novel attributed community search called vertex-centric attributed community (VAC) search. Given an attributed graph and a query vertex set, the VAC search returns the community which is densely connected (ensured by the k-truss model) and has the best attribute score. We show that the problem is NP-hard. To answer the VAC search, we develop both exact and approximate algorithms. Specifically, we develop two exact algorithms. One searches the community in a depth-first manner and the other is in a best-first manner. We also propose a set of heuristic strategies to prune the unqualified search space by exploiting the structure and attribute properties. In addition, to further improve the search efficiency, we propose a 2-approximation algorithm. Comprehensive experimental studies on various realworld attributed graphs demonstrate the effectiveness of the proposed model and the efficiency of the developed algorithms. © 2020 IEEE.
KW  - Efficiency
KW  - Graph structures
KW  - Approximate algorithms
KW  - Attributed graphs
KW  - Depth first
KW  - Exact algorithms
KW  - Heuristic strategy
KW  - Search efficiency
KW  - Search spaces
KW  - Truss model
KW  - Graph algorithms
PB  - IEEE Computer Society
SN  - 10844627 (ISSN); 978-172812903-7 (ISBN)
LA  - English
J2  - Proc Int Conf Data Eng
M3  - Conference paper
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 44; Correspondence Address: Y. Gao; Zhejiang University, College of Computer Science, Hangzhou, China; email: gaoyj@zju.edu.cn
ER  -

TY  - JOUR
AU  - Sun, F.
AU  - Chen, W.
AU  - Lin, T.
TI  - Improved Voting Algorithm Based on K-truss for Influence Maximization Problem
PY  - 2022
T2  - Jisuanji Gongcheng/Computer Engineering
VL  - 48
IS  - 11
SP  - 291
EP  - 298
DO  - 10.19678/j.issn.1000-3428.0063033
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85143346303&doi=10.19678%2fj.issn.1000-3428.0063033&partnerID=40&md5=bde1b64cada335c00e163eb8b6e111bc
AD  - School of Computer Science, South China Normal University, Guangzhou, 510631, China
AB  - In the Influence Maximization(IM) problem of social networks, approximation algorithms are used to calculate the impact range of node sets via a significant amount of Monte-Carlo simulations, thus resulting in an increase in time complexity.Most heuristic algorithms exhibit unsatisfactory stability on graphs with different topological structures.This study proposes an improved voting algorithm, TrussVote, which is based on K-truss.In the voting stage, the effective voting ability of a node is defined by introducing the relevant theory and algorithm of K-truss, which is used to represent the voting tendency of a node to its different neighbors.Additionally, the propagation probability of edges is considered when calculating the voting score to improve the efficiency of the algorithm in solving IM problems.After each round of voting, the node with the highest voting score is selected as the seed node.In the update phase, the attenuation factor is defined based on the similarity index between nodes to effectively distinguish the weakening degree of neighboring nodes' voting ability.In addition, based on the original propagation results under the IC model, the Diffusion Difference(DD) is proposed as an analysis index equivalent to the propagation range.Experimental results on real network datasets of different scales show that compared with RNR, VoteRank++, and other algorithms, the proposed algorithm not only effectively reduces the time complexity, but also infects more nodes in the shortest duration and has a wider range of influence. © 2022, Editorial Office of Computer Engineering. All rights reserved.
KW  - IC model
KW  - Influence Maximization(IM)
KW  - K-truss decomposition
KW  - SIR model
KW  - Social network
KW  - voting algorithm
PB  - Editorial Office of Computer Engineering
SN  - 10003428 (ISSN)
LA  - Chinese
J2  - Jisuanji Gongcheng
M3  - Article
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 0; Correspondence Address: F. Sun; School of Computer Science, South China Normal University, Guangzhou, 510631, China; email: 1258305030@qq.com; CODEN: JISGE
ER  -

TY  - JOUR
AU  - Che, Y.
AU  - Lai, Z.
AU  - Sun, S.
AU  - Wang, Y.
AU  - Luo, Q.
TI  - Accelerating truss decomposition on heterogeneous processors
PY  - 2020
T2  - Proceedings of the VLDB Endowment
VL  - 13
IS  - 10
SP  - 1751
EP  - 1764
DO  - 10.14778/3401960.3401971
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85091157110&doi=10.14778%2f3401960.3401971&partnerID=40&md5=a358e022b58b56aabeb4dd50cc8ef890
AD  - Hong Kong University of Science and Technology, Hong Kong
AD  - National University of Singapore, Singapore
AD  - Shenzhen Institute of Computing Sciences, Shenzhen University, China
AB  - Truss decomposition is to divide a graph into a hierarchy of subgraphs, or trusses. A subgraph is a k-truss (k ≥ 2) if each edge is in at least k-2 triangles in the subgraph. Existing algorithms work by first counting the number of triangles each edge is in and then iteratively incrementing k to peel off the edges that will not appear in (k + 1)-truss. Due to the data and computation intensity, truss decomposition on billion-edge graphs takes hours to complete on a commodity computer. We propose to accelerate in-memory truss decomposition by (1) compacting intermediate results to optimize memory access, (2) dynamically adjusting the computation based on data characteristics, and (3) parallelizing the algorithm on both the multicore CPU and the GPU. In particular, we optimize the triangle enumeration with data skew handling, and determine at runtime whether to pursue peeling or direct triangle counting to obtain a certain k-truss. We further develop a CPU-GPU co-processing strategy in which the CPU first computes intermediate results and sends the compacted results to the GPU for further computation. Our experiments on real-world datasets show that our implementations outperform the state of the art by up to an order of magnitude. Our source code is publicly available at https: //github.com/RapidsAtHKUST/AccTrussDecomposition. © 2020 VLDB Endowment.
KW  - Data handling
KW  - Graphics processing unit
KW  - Iterative methods
KW  - CPU-GPU co-processing
KW  - Data characteristics
KW  - Heterogeneous processors
KW  - Intermediate results
KW  - Multi-core cpus
KW  - Number of triangles
KW  - Real-world datasets
KW  - State of the art
KW  - Trusses
PB  - VLDB Endowment
SN  - 21508097 (ISSN)
LA  - English
J2  - Proc. VLDB Endow.
M3  - Article
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 20
ER  -

TY  - JOUR
AU  - Habib, W.M.A.
AU  - Mokhtar, H.M.O.
AU  - El-Sharkawi, M.E.
TI  - Discovering top-weighted k-truss communities in large graphs
PY  - 2022
T2  - Journal of Big Data
VL  - 9
IS  - 1
C7  - 36
DO  - 10.1186/s40537-022-00588-1
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85127501572&doi=10.1186%2fs40537-022-00588-1&partnerID=40&md5=7aeb7dbb5e1e2e0c0241f7b82eca0ae8
AD  - Information Systems Department, Faculty of Computers and Artificial Intelligence, Cairo University, Cairo, Egypt
AD  - Faculty of Computing and Information Sciences, Egypt University of Informatics, Cairo, Egypt
AB  - Community Search is the problem of querying networks in order to discover dense subgraphs-communities-that satisfy given query parameters. Most community search models consider link structure and ignore link weight while answering the required queries. Given the importance of link weight in different networks, this paper considers both link structure and link weight to discover top-r weighted k-truss communities via community search. The top-weighted k-truss communities are those communities with the highest weight and the highest cohesiveness within the network. All recent studies that considered link weight discover top-weighted communities via global search and index-based search techniques. In this paper three different algorithms are proposed to scale-up the existing approaches of weighted community search via local search. The performance evaluation shows that the proposed algorithms significantly outperform the existing state-of-the-art algorithms over different datasets in terms of search time by several orders of magnitude. © 2022, The Author(s).
KW  - Community search
KW  - k-truss community detection model
KW  - Weighted graph
PB  - Springer Science and Business Media Deutschland GmbH
SN  - 21961115 (ISSN)
LA  - English
J2  - J. Big Data
M3  - Article
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 0; Correspondence Address: W.M.A. Habib; Information Systems Department, Faculty of Computers and Artificial Intelligence, Cairo University, Cairo, Egypt; email: w.momen@fci-cu.edu.eg
ER  -

TY  - CONF
AU  - Almasri, M.
AU  - Anjum, O.
AU  - Pearson, C.
AU  - Qureshi, Z.
AU  - Mailthody, V.S.
AU  - Nagi, R.
AU  - Xiong, J.
AU  - Hwu, W.-M.
TI  - Update on k-truss Decomposition on GPU
PY  - 2019
T2  - 2019 IEEE High Performance Extreme Computing Conference, HPEC 2019
C7  - 8916285
DO  - 10.1109/HPEC.2019.8916285
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85076685026&doi=10.1109%2fHPEC.2019.8916285&partnerID=40&md5=b0ba60c8348483705921d5cc375a05cb
AD  - University of Illinois at Urbana-Champaign, ECE, Urbana, 61801, IL, United States
AD  - University of Illinois at Urbana-Champaign, CS, Urbana, 61801, IL, United States
AD  - University of Illinois at Urbana-Champaign, ISE, Urbana, 61801, IL, United States
AD  - IBM Thomas J. Watson Research Center, Cognitive Computing Systems Research, Yorktown Heights, 10598, NY, United States
AB  - In this paper, we present an update to our previous submission on k-truss decomposition from Graph Challenge 2018. For single k k-truss implementation, we propose multiple algorithmic optimizations that significantly improve performance by up to 35.2x (6.9x on average) compared to our previous GPU implementation. In addition, we present a scalable multi-GPU implementation in which each GPU handles a different 'k' value. Compared to our prior multi-GPU implementation, the proposed approach is faster by up to 151.3x (78.8x on average). In case when the edges with only maximal k-truss are sought, incrementing the 'k' value in each iteration is inefficient particularly for graphs with large maximum k-truss. Thus, we propose binary search for the 'k' value to find the maximal k-truss. The binary search approach on a single GPU is up to 101.5 (24.3x on average) faster than our 2018 k-truss submission. Lastly, we show that the proposed binary search finds the maximum k-truss for 'Twitter' graph dataset having 2.8 billion bidirectional edges in just 16 minutes on a single V100 GPU. © 2019 IEEE.
KW  - Binary search
KW  - CUDA
KW  - GPU
KW  - K-truss decomposition
KW  - Multi-GPU
KW  - Multi-node
KW  - Graphics processing unit
KW  - Iterative methods
KW  - Algorithmic optimization
KW  - Bidirectional edges
KW  - Binary search
KW  - CUDA
KW  - GPU implementation
KW  - Improve performance
KW  - Multi-gpu
KW  - Multi-nodes
KW  - Trusses
PB  - Institute of Electrical and Electronics Engineers Inc.
SN  - 978-172815020-8 (ISBN)
LA  - English
J2  - IEEE High Perform. Extrem. Comput. Conf., HPEC
M3  - Conference paper
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 15
ER  -

TY  - CONF
AU  - Gou, X.
AU  - Xu, X.
AU  - Wu, X.
AU  - Chen, R.
AU  - Wang, Y.
AU  - Wu, T.
AU  - Ke, X.
TI  - Effective and Efficient Community Search with Graph Embeddings
PY  - 2023
T2  - Frontiers in Artificial Intelligence and Applications
VL  - 372
SP  - 891
EP  - 898
DO  - 10.3233/FAIA230358
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85175807643&doi=10.3233%2fFAIA230358&partnerID=40&md5=2cab8a125b640ef3efcb53aca78b5bf6
AD  - Hangzhou Dianzi University, School of Computer Science, China
AD  - Southeast University, School of Computer Science and Engineering, China
AD  - Zhejiang University, School of Software Technology, China
AB  - Given a graph G and a query node q, community search (CS) seeks a cohesive subgraph from G that contains q. CS has gained much research interests recently. In the database research community, researchers aim to find the most cohesive subgraph satisfying a specific community model (e.g., k-core or k-truss) via graph traversal. These works obtain good precision, however suffering from the low efficiency issue. In the AI research community, a new thought of using the deep learning model to support CS without relying on graph traversal emerges. Supervised end-to-end models using GCN are presented, which perform efficiently, but leave a large room for precision improvement. None of them can achieve a good balance between the efficiency and effectiveness. This motivates our solution: First, we present an offline community-injected graph embedding method to preserve the community's cohesiveness features into the learned node representations. Second, we resort to a proximity graph (PG) built from node representations, to quickly return the community online. Moreover, we develop a self-augmented method based on KL divergence to further optimize node representations. Extensive experiments on seven real-world graphs show our solution's superiority on effectiveness (at least 39.3% improvement) and efficiency (one to two orders of magnitude faster). © 2023 The Authors.
KW  - Deep learning
KW  - Graph embeddings
KW  - Graph theory
KW  - Query processing
KW  - Community model
KW  - Database research
KW  - Graph embeddings
KW  - Graph G
KW  - Graph traversals
KW  - K-cores
KW  - Query nodes
KW  - Research communities
KW  - Research interests
KW  - Subgraphs
KW  - Efficiency
A2  - Gal K.
A2  - Gal K.
A2  - Nowe A.
A2  - Nalepa G.J.
A2  - Fairstein R.
A2  - Radulescu R.
PB  - IOS Press BV
SN  - 09226389 (ISSN); 978-164368436-9 (ISBN)
LA  - English
J2  - Front. Artif. Intell. Appl.
M3  - Conference paper
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 0; Correspondence Address: Y. Wang; Hangzhou Dianzi University, School of Computer Science, China; email: lsswyx@hdu.edu.cn
ER  -

TY  - CONF
AU  - Zhang, F.
AU  - Liu, B.
AU  - Fang, Q.
TI  - Core decomposition, maintenance and applications
PY  - 2020
T2  - Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)
VL  - 12000 LNCS
SP  - 205
EP  - 218
DO  - 10.1007/978-3-030-41672-0_12
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85081117531&doi=10.1007%2f978-3-030-41672-0_12&partnerID=40&md5=0432aa2d0185ea22618691e08bdc9df9
AD  - School of Mathematical Sciences, Ocean University of China, Qingdao, 266100, Shandong, China
AB  - Structures of large graphs have attracted much attention in recent years, including k-clique, k-core, k-truss, k-club, to name just a few. These structures can help detect the most cohesive or most influential subgraphs of social networks and other massive graphs. In this survey, we summarize the research on k-core, which is the maximal connected subgraph of a graph and the degree for each vertex is equal to or greater than k. We will address the core decomposition problem, the core maintenance problem, and a few applications of k-core. © Springer Nature Switzerland AG 2020.
KW  - Core decomposition
KW  - Core maintenance
KW  - K-core
KW  - Complex networks
KW  - Maintenance
KW  - Connected Subgraph
KW  - Decomposition problems
KW  - K-clique
KW  - K-cores
KW  - Large graphs
KW  - Maintenance Problem
KW  - Massive graph
KW  - Subgraphs
KW  - Graph structures
A2  - Du D.-Z.
A2  - Wang J.
PB  - Springer
SN  - 03029743 (ISSN); 978-303041671-3 (ISBN)
LA  - English
J2  - Lect. Notes Comput. Sci.
M3  - Conference paper
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 0; Correspondence Address: B. Liu; School of Mathematical Sciences, Ocean University of China, Qingdao, 266100, China; email: binliu@ouc.edu.cn
ER  -

TY  - JOUR
AU  - Yang, L.
AU  - Song, Y.-R.
AU  - Jiang, G.-P.
AU  - Xia, L.-L.
TI  - Identifying influential spreaders based on diffusion K-truss decomposition
PY  - 2018
T2  - International Journal of Modern Physics B
VL  - 32
IS  - 22
C7  - 1850238
DO  - 10.1142/S0217979218502387
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85050262521&doi=10.1142%2fS0217979218502387&partnerID=40&md5=d8e8adfccf8ebc4727bebf7a1ed7af22
AD  - College of Automation, Nanjing University of Posts and Telecommunications, No. 9 Wenyuan Road, Nanjing, 210023, China
AD  - Department of Computer Information and Cyber Security, Jiangsu Police Institute, No. 48 SangongShifosi, Pukou District, Nanjing, 210031, China
AB  - Identifying the most influential spreaders is important in optimizing the network structure or disseminating information through networks. Recent study showed that the K-truss decomposition could filter out the nodes that performed a worse spreading behavior in the maximal K-shell subgraph. The spreaders belonging to the maximal K-truss subgraph show better performance compared to previously used importance criteria. However, the accuracy of the K-truss or the K-shell in determining node coreness is largely susceptible to core-like group. In this paper, we propose an improved diffusion K-truss decomposition method by considering both the diffusion and clustering of edges to eliminate the impact of core-like group on identifying influential nodes. To validate the effectiveness of the proposed method, we compare it with five typical methods by carrying out Monte-Carlo simulations over six real complex networks. Simulation results demonstrate that the proposed method can effectively disintegrate the core-like group and accurately identify the influential nodes. © 2018 World Scientific Publishing Company.
KW  - complex networks
KW  - edge clustering
KW  - edge diffusion
KW  - K-truss decomposition
PB  - World Scientific Publishing Co. Pte Ltd
SN  - 02179792 (ISSN)
LA  - English
J2  - Int. J. Mod. Phys. B
M3  - Article
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 1; Correspondence Address: G.-P. Jiang; College of Automation, Nanjing University of Posts and Telecommunications, Nanjing, No. 9 Wenyuan Road, 210023, China; email: jianggp@njupt.edu.cn; CODEN: IJPBE
ER  -

TY  - CONF
AU  - Akbas, E.
TI  - Index Based Efficient Algorithms for Closest Community Search
PY  - 2019
T2  - Proceedings - 2019 IEEE International Conference on Big Data, Big Data 2019
C7  - 9005956
SP  - 701
EP  - 710
DO  - 10.1109/BigData47090.2019.9005956
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85081361591&doi=10.1109%2fBigData47090.2019.9005956&partnerID=40&md5=a411a6cae3d8cfde0214f43fd4ee958e
AD  - Oklahoma State University, Department of Computer Science, Stillwater, OK, United States
AB  - The community search problem is defined as finding densely connected subgraphs in a large graph containing a given set of query nodes. One of the limitations of many current community search models is that detected communities may include irrelevant nodes, called the 'free riders'. In this paper, we study the community search problem in the truss-based closest community model aimed to discover community for a given query set with avoiding the free rider effect. The Closest Truss Community (CTC) is a densely connected k-truss subgraph that contains the query nodes and has the smallest diameter. We use a greedy approach and propose a Truss EQuivalence based index graph (TEQ) that supports the search of closest trust community. To further improve the efficiency of the search, we create a maximum spanning tree of TEQ, as an index tree. We also propose an early pruning algorithm to improve the efficiency of free rider elimination. Extensive experiments on large real-world networks validate the efficiency and effectiveness of our algorithms over the state-of-the-art methods. © 2019 IEEE.
KW  - Community Search
KW  - Graph Indexing
KW  - MST
KW  - Query Processing
KW  - Big data
KW  - Efficiency
KW  - Indexing (materials working)
KW  - Query processing
KW  - Trusses
KW  - Community Search
KW  - Connected subgraphs
KW  - Graph indexing
KW  - Greedy approaches
KW  - Maximum spanning tree
KW  - Real-world networks
KW  - State-of-the-art methods
KW  - Trust communities
KW  - Graph theory
A2  - Baru C.
A2  - Huan J.
A2  - Khan L.
A2  - Hu X.T.
A2  - Ak R.
A2  - Tian Y.
A2  - Barga R.
A2  - Zaniolo C.
A2  - Lee K.
A2  - Ye Y.F.
PB  - Institute of Electrical and Electronics Engineers Inc.
SN  - 978-172810858-2 (ISBN)
LA  - English
J2  - Proc. - IEEE Int. Conf. Big Data, Big Data
M3  - Conference paper
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 1; Correspondence Address: E. Akbas; Oklahoma State University, Department of Computer Science, Stillwater, United States; email: eakbas@okstate.edu
ER  -

TY  - CONF
AU  - Mehrafsa, A.
AU  - Chester, S.
AU  - Thomo, A.
TI  - Vectorising k-Truss Decomposition for Simple Multi-Core and SIMD Acceleration
PY  - 2022
T2  - 13th International Conference on Information, Intelligence, Systems and Applications, IISA 2022
DO  - 10.1109/IISA56318.2022.9904350
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85141071993&doi=10.1109%2fIISA56318.2022.9904350&partnerID=40&md5=f739adc770b37256ff0c90ab06e3d882
AD  - University of Victoria, Department of Computer Science, Victoria, BC, Canada
AB  - In this paper we tackle truss decomposition of large graphs, which is one of the popular tools for discovering dense hierarchical subgraphs in social and web networks; such subgraphs form the basis of community discovery, one of the cornerstones of modern graph analytics. Our goal is to offer a simple vectorisation approach which can be easily implemented in widely popular Python vector libraries, such as NumPy. This way has two advantages: (1) non-experts with basic knowledge of Python can implement our algorithm, and (2) they can obtain multi-threaded and SIMD parallelism 'for free' without them needing to know about computer architecture or sophisticated C++ libraries for multi-threaded processing. We believe this is an important paradigm setting approach that opens the way for applying similar techniques to other problems that might seem at first remote to vectorisation and/or parallelisation.  © 2022 IEEE.
KW  - graph analytics
KW  - k-truss decomposition
KW  - Numpy
KW  - parallel algorithms
KW  - Python
KW  - SIMD
KW  - vectorization
KW  - C++ (programming language)
KW  - Computer architecture
KW  - Libraries
KW  - Trusses
KW  - Graph-analytic
KW  - K-truss decomposition
KW  - Large graphs
KW  - Multi-cores
KW  - Multithreaded
KW  - Numpy
KW  - SIMD
KW  - Simple++
KW  - Subgraphs
KW  - Vectorization
KW  - Python
PB  - Institute of Electrical and Electronics Engineers Inc.
SN  - 978-166546390-4 (ISBN)
LA  - English
J2  - Int. Conf. Inf., Intell., Syst. Appl., IISA
M3  - Conference paper
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 0
ER  -

TY  - CONF
AU  - Kabir, H.
AU  - Madduri, K.
TI  - Parallel k-truss decomposition on multicore systems
PY  - 2017
T2  - 2017 IEEE High Performance Extreme Computing Conference, HPEC 2017
C7  - 8091052
DO  - 10.1109/HPEC.2017.8091052
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85041212454&doi=10.1109%2fHPEC.2017.8091052&partnerID=40&md5=0058d246b868ac1f02966cf6c94e03cf
AD  - Computer Science and Engineering, Pennsylvania State University, University Park, 16802, PA, United States
AB  - We discuss our submission to the HPEC 2017 Static Graph Challenge on k-truss decomposition and triangle counting. Our results use an algorithm called PKT (Parallel k-truss) designed for multicore systems. We are able to process almost all Graph Challenge datasets in under a minute on a 24-core server with 128 GB memory. For a synthetic Graph500 graph with 17 million vertices and 523 million edges, triangle counting takes 16 seconds and truss decomposition takes 29 minutes on the 24-core server. © 2017 IEEE.
KW  - Computer programming
KW  - Computer science
KW  - Graph500
KW  - Multi-core systems
KW  - Trusses
PB  - Institute of Electrical and Electronics Engineers Inc.
SN  - 978-153863472-1 (ISBN)
LA  - English
J2  - IEEE High Perform. Extrem Comput. Conf., HPEC
M3  - Conference paper
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 26
ER  -

TY  - CONF
AU  - Xia, Z.
AU  - Yan, Y.
AU  - Li, Y.
TI  - Mining of Attribute Network Community based on Structure and Node Similarity
PY  - 2019
T2  - 2019 IEEE International Conference on Power Data Science, ICPDS 2019
C7  - 9017174
SP  - 19
EP  - 22
DO  - 10.1109/ICPDS47662.2019.9017174
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85082497429&doi=10.1109%2fICPDS47662.2019.9017174&partnerID=40&md5=32b016b2485f3e505aacef459a86403c
AD  - Heilongjiang University, Department of Computer Science and Technology, Harbin, China
AB  - Mining cohesive subgraphs from a network is an important direction in network analysis. Most of the existing methods are based on the topology of common networks, which ignores the rich information of the nodes in the real network. The k-truss model which is proposed by user engagement and tie strength, captures the degree of strong connection among users who participate in the network with other users actively. However, this model does not consider the attributes of users. In order to find the cohesive subgraphs on social networks efficiently and accurately, this paper proposes a new model (k, r)-truss on the attribute network community based on k-truss, and finds the cohesive subgraphs on the social network from the perspective of strong connection and similarity between users. The problem of enumerating all maximal (k, r)-truss is NP-hard, so in order to speed up the calculation, this paper proposes new pruning algorithms AdvEnumH and AdvEnumHC, which reduces the search space of the mining process significantly. Finally, the experiments are carried out on the real data set to evaluate the performance of the proposed algorithm. The results of experiments demonstrate that our algorithm has significantly improved in efficiency and timeliness compared with the current best method. © 2019 IEEE.
KW  - (k
KW  - Attribute Network Community
KW  - r)-Truss
KW  - Similarity
KW  - Common networks
KW  - In-network analysis
KW  - Mining process
KW  - Network communities
KW  - Node similarities
KW  - Pruning algorithms
KW  - Similarity
KW  - User engagement
KW  - Trusses
PB  - Institute of Electrical and Electronics Engineers Inc.
SN  - 978-172813775-9 (ISBN)
LA  - English
J2  - IEEE Int. Conf. Power Data Sci., ICPDS
M3  - Conference paper
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 0
ER  -

TY  - CHAP
AU  - Moscato, P.
TI  - Business Network Analytics: From Graphs to Supernetworks
PY  - 2019
T2  - Business and Consumer Analytics: New Ideas
SP  - 307
EP  - 400
DO  - 10.1007/978-3-030-06222-4_7
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85085541448&doi=10.1007%2f978-3-030-06222-4_7&partnerID=40&md5=f69f70b13ece120927c464014b1f1f57
AD  - School of Electrical Engineering and Computing, The University of Newcastle, Callaghan, NSW, Australia
AB  - A large number of problems in business and consumer analytics have input graphs or networks. These mathematical entities have a long standing tradition in discrete applied mathematics and computer science. In many cases, they are the most natural means to represent some type of relationships in data. Consequently, a large number of solution methods based on heuristics and exact algorithms exist for problems that have graphs and/or networks as part of their input. While the number of possible applications of these techniques is not limited to problems in business and customer analytics, we have chosen to present some of them in a survey that would allow newcomers to the field of data science to create some familiarity with the key questions that motivate the area. We have also provided a survey on recent applications and new algorithmic approaches for data analytics. In addition we discuss issues related to the computational complexity of some problems associated with them. Other chapters of this section complement the discussion in this chapter with specific examples of interest or that could motivate new novel research direction and application. © Springer Nature Switzerland AG 2019. All rights are reserved.
KW  - (α
KW  - Cartel formation
KW  - Community detection
KW  - Data analytics
KW  - Graph theory
KW  - K-Truss decomposition of a graph
KW  - Marketing
KW  - Music recommendation
KW  - Network
KW  - Network alignment
KW  - News recommendation
KW  - Operations research
KW  - Ranking topic
KW  - Supernetworks
KW  - Viral marketing
KW  - β)-k-feature set
PB  - Springer International Publishing
SN  - 978-303006222-4 (ISBN); 978-303006221-7 (ISBN)
LA  - English
J2  - Bus. and Consumer Analytics: New Ideas
M3  - Book chapter
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 2; Correspondence Address: P. Moscato; School of Electrical Engineering and Computing, The University of Newcastle, Callaghan, Australia; email: Pablo.Moscato@newcastle.edu.au
ER  -

TY  - JOUR
AU  - Zhu, C.-X.
AU  - Lin, L.-L.
AU  - Yuan, P.-P.
AU  - Jin, H.
TI  - Discovering Cohesive Temporal Subgraphs with Temporal Density Aware Exploration
PY  - 2022
T2  - Journal of Computer Science and Technology
VL  - 37
IS  - 5
SP  - 1068
EP  - 1085
DO  - 10.1007/s11390-022-2431-z
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85140241806&doi=10.1007%2fs11390-022-2431-z&partnerID=40&md5=db6751ffdb9c5bf357a798d8011837a0
AD  - National Engineering Research Center for Big Data Technology and System, Huazhong University of Science and Technology, Wuhan, 430074, China
AD  - Service Computing Technology and System Laboratory, Huazhong University of Science and Technology, Wuhan, 430074, China
AD  - Cluster and Grid Computing Laboratory, Huazhong University of Science and Technology, Wuhan, 430074, China
AD  - School of Computer Science and Technology, Huazhong University of Science and Technology, Wuhan, 430074, China
AB  - Real-world networks, such as social networks, cryptocurrency networks, and e-commerce networks, always have occurrence time of interactions between nodes. Such networks are typically modeled as temporal graphs. Mining cohesive subgraphs from temporal graphs is practical and essential in numerous data mining applications, since mining cohesive subgraphs gets insights into the time-varying nature of temporal graphs. However, existing studies on mining cohesive subgraphs, such as Densest-Exact and k-truss, are mainly tailored for static graphs (whose edges have no temporal information). Therefore, those cohesive subgraph models cannot indicate both the temporal and the structural characteristics of subgraphs. To this end, we explore the model of cohesive temporal subgraphs by incorporating both the evolving and the structural characteristics of temporal subgraphs. Unfortunately, the volume of time intervals in a temporal network is quadratic. As a result, the time complexity of mining temporal cohesive subgraphs is high. To efficiently address the problem, we first mine the temporal density distribution of temporal graphs. Guided by the distribution, we can safely prune many unqualified time intervals with the linear time cost. Then, the remaining time intervals where cohesive temporal subgraphs fall in are examined using the greedy search. The results of the experiments on nine real-world temporal graphs indicate that our model outperforms state-of-the-art solutions in efficiency and quality. Specifically, our model only takes less than two minutes on a million-vertex DBLP and has the highest overall average ranking in EDB and TC metrics. © 2022, Institute of Computing Technology, Chinese Academy of Sciences.
KW  - cohesive subgraph
KW  - convex property
KW  - temporal feature distribution
KW  - temporal network
KW  - Data mining
KW  - Graph algorithms
KW  - Cohesive subgraph
KW  - Convex property
KW  - Feature distribution
KW  - Property
KW  - Subgraphs
KW  - Temporal feature distribution
KW  - Temporal features
KW  - Temporal graphs
KW  - Temporal networks
KW  - Time interval
KW  - Graphic methods
PB  - Springer
SN  - 10009000 (ISSN)
LA  - English
J2  - J Comput Sci Technol
M3  - Article
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 0; Correspondence Address: P.-P. Yuan; National Engineering Research Center for Big Data Technology and System, Huazhong University of Science and Technology, Wuhan, 430074, China; email: ppyuan@hust.edu.cn; CODEN: JCTEE
ER  -

TY  - CONF
AU  - Luo, Q.
AU  - Yu, D.
AU  - Sheng, H.
AU  - Yu, J.
AU  - Cheng, X.
TI  - Distributed Algorithm for Truss Maintenance in Dynamic Graphs
PY  - 2021
T2  - Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)
VL  - 12606 LNCS
SP  - 104
EP  - 115
DO  - 10.1007/978-3-030-69244-5_9
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85104487159&doi=10.1007%2f978-3-030-69244-5_9&partnerID=40&md5=8055204590776582c3f44e0f7eaccc84
AD  - School of Computer Science and Technology, Shandong University, Qingdao, China
AD  - School of Computer Science and Engineering, Beihang University, Beijing, China
AD  - School of Computer Science and Technology, Qilu University of Technology, Jinan, China
AB  - Cohesive subgraphs are applied in various fields. Mining cohesive components such as k-truss have attracted a lot of effort to improve time efficiency in large-scale graphs. The k-truss is a subgraph where each edge is contained in at least k- 2 triangles and the problem of truss decomposition is computing the k-trusses of a graph for all k. However, most graphs in real scenarios are usually changing over time. The previous studies take the static graphs as input, and the truss maintenance in dynamic graphs receives little attention. This paper focuses on distributed algorithms for truss maintenance. We present a distributed model underlying the real distributed processing model Pregel. Based on the model, we propose truss decomposition and truss maintenance algorithms. To confirm the effectiveness and efficiency of the proposed algorithms, we conduct extensive experiments over both real-world and synthetic graphs. © 2021, Springer Nature Switzerland AG.
KW  - Distributed algorithm
KW  - Dynamic graph
KW  - Graph analytics
KW  - k-truss
KW  - Efficiency
KW  - Graphic methods
KW  - Maintenance
KW  - Trusses
KW  - Distributed modeling
KW  - Distributed processing
KW  - Dynamic graph
KW  - Effectiveness and efficiencies
KW  - Maintenance algorithms
KW  - Real-world
KW  - Synthetic graphs
KW  - Time efficiencies
KW  - Graph algorithms
A2  - Zhang Y.
A2  - Xu Y.
A2  - Tian H.
PB  - Springer Science and Business Media Deutschland GmbH
SN  - 03029743 (ISSN); 978-303069243-8 (ISBN)
LA  - English
J2  - Lect. Notes Comput. Sci.
M3  - Conference paper
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 4; Correspondence Address: D. Yu; School of Computer Science and Technology, Shandong University, Qingdao, China; email: dxyu@sdu.edu.cn
ER  -

TY  - CONF
AU  - Wu, Y.
AU  - Sun, R.
AU  - Chen, C.
AU  - Wang, X.
AU  - Zhu, Q.
TI  - Maximum Signed (k,r)-Truss Identification in Signed Networks
PY  - 2020
T2  - International Conference on Information and Knowledge Management, Proceedings
SP  - 3337
EP  - 3340
DO  - 10.1145/3340531.3417457
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85095866075&doi=10.1145%2f3340531.3417457&partnerID=40&md5=5a1dce87cf75f67a23e067a7aeb2ccbc
AD  - Zhejiang Gongshang University, Hangzhou, China
AB  - Mining cohesive subgraphs is a fundamental problem in social network analysis. The k-truss model has been widely used to measure the cohesiveness of subgraphs. Most existing studies about k-truss focus on unsigned graphs. However, in real applications, the edges in the networks can be either positive or negative, e.g., friend or foe relationships, which represents more information than unsigned networks. Therefore, the traditional k-truss model is not applicable for the signed networks. Motivated by this, in this paper, we propose a novel model, named signed (k,r)-truss, which leverages the property of balanced triangle in singed network analysis. Specifically, a signed (k,r)-truss is a subgraph where each edge has no less than k balanced support and no more than r unbalanced support. We prove that the problem of identifying the maximum signed (k,r)-truss is NP-hard. Due to the hardness of the problem, we tend to the heuristic strategies. A trivial algorithm is first presented. Then, two greedy algorithms are developed to enhance the processing. Finally, we conduct comprehensive experiments on real-world signed networks to verify the performance of proposed techniques. © 2020 ACM.
KW  - balanced theory
KW  - k-truss
KW  - signed graph
KW  - support
KW  - Knowledge management
KW  - NP-hard
KW  - Greedy algorithms
KW  - Heuristic strategy
KW  - Real applications
KW  - Real-world
KW  - Signed networks
KW  - Subgraphs
KW  - Truss model
KW  - Unbalanced support
KW  - Trusses
PB  - Association for Computing Machinery
SN  - 978-145036859-9 (ISBN)
LA  - English
J2  - Int Conf Inf Knowledge Manage
M3  - Conference paper
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 5
ER  -

TY  - JOUR
AU  - Sun, H.
AU  - Zhang, Y.
AU  - Jia, X.
AU  - Wang, P.
AU  - Huang, R.
AU  - Huang, J.
AU  - He, L.
AU  - Sun, Z.
TI  - A truss-based approach for densest homogeneous subgraph mining in node-attributed graphs
PY  - 2021
T2  - Computational Intelligence
VL  - 37
IS  - 2
SP  - 1035
EP  - 1050
DO  - 10.1111/coin.12448
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85104303175&doi=10.1111%2fcoin.12448&partnerID=40&md5=9febc842aaeab012dc464296f34debb8
AD  - School of Journalism and New Media, Xi'an Jiaotong University, Xi'an, China
AD  - School of Computer Science and Technology, Xi'an Jiaotong University, Xi'an, China
AD  - School of Computer Science and Technology, Xidian University, Xi'an, China
AD  - School of Computer Science and Technology, China University of Mining and Technology, Xuzhou, China
AB  - In a wide range of graph analysis tasks such as community detection and event detection, densest subgraph mining is important and primitive. With the development of social network, densest subgraph mining not only need to consider the structural data but also the attributes information, which descripts the features of nodes or edges. However, there are few researches on densest subgraph mining with attribute description. In this article, we only focus on the node-attributed graph. According to the properties of structure and attribute in node-attributed graphs, we define a novel dense subgraph pattern, called hybridized k-truss in attribute-augmented graph. A hybridized k-truss is a subgraph that consists of structural nodes and attribute nodes, of which there are at least (k − 2) common neighbors between any two connected nodes. We introduce the densest hybridized truss problem, and the densest hybridized truss mapping to a densely connected subgraph with homogenous attributes in the original graph. We propose a densest hybridized truss extraction (DHTE) algorithm for node-attributed graphs, to automatically find the densest subgraph with high density and homogenous attributes at the same time. Extensive experimental results of 21 real world datasets demonstrate the effectiveness and efficiency of DHTE over state-of-the-art methods, through comparison about structural cohesiveness and attributive homogeneity. © 2021 Wiley Periodicals LLC.
KW  - attribute description
KW  - densest subgraph
KW  - hybridized k-truss
KW  - Jaccard support
KW  - node-attributed graph
KW  - Graph algorithms
KW  - Trusses
KW  - Attributed graphs
KW  - Community detection
KW  - Connected Subgraph
KW  - Effectiveness and efficiencies
KW  - Event detection
KW  - Real-world datasets
KW  - State-of-the-art methods
KW  - Subgraph mining
KW  - Graph theory
PB  - Blackwell Publishing Inc.
SN  - 08247935 (ISSN)
LA  - English
J2  - Comput Intell
M3  - Article
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 1; Correspondence Address: H. Sun; School of Journalism and New Media, Xi'an Jiaotong University, Xi'an, China; email: hlsun@xjtu.edu.cn; J. Huang; School of Computer Science and Technology, Xidian University, Xi'an, China; email: lhe@mail.xjtu.edu.cn; CODEN: COMIE
ER  -

TY  - CONF
AU  - Wang, R.
AU  - Yu, L.
AU  - Wang, Q.
AU  - Xin, J.
AU  - Zheng, L.
TI  - Productive High-Performance k-Truss Decomposition on GPU Using Linear Algebra
PY  - 2021
T2  - 2021 IEEE High Performance Extreme Computing Conference, HPEC 2021
DO  - 10.1109/HPEC49654.2021.9622792
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85123490768&doi=10.1109%2fHPEC49654.2021.9622792&partnerID=40&md5=8f76ea8814c29d7cf3dd982609177446
AD  - Huazhong University of Science and Technology, School of Cyber Science and Engineering, China
AB  - The k-Truss decomposition algorithm aims to find the cohesive subgraphs in a graph. It includes a two-step procedure of triangle counting and weak edge deletion. Due to the significant differences of graph typologies, the best performer appearing in the last year's MIT/IEEE/Amazon GraphChallenge presents to manually explore a well-optimized combination from many k-Truss techniques for each graph dataset, but this requires expertise from multiple disciplines. Linear algebra provides a unified framework to write parallel and scalable k-Truss decomposition algorithm easily. However, the work imbalance and low memory efficiency remain. In this work, we propose a productive yet efficient k-Truss decomposition implementation on GPU based on the fine-grained linear algebra. We propose a preprocessing method that renumbers the vertices to eliminate the longest adjacency list to balance the workloads and putting the adjacency list of the same source vertex into shared memory that exploits the shared memory effectively to improve memory access efficiency. Results show that our approach outperforms a linear algebra based implementation-eager (a champion in 2019) by up to 24.81× and a manual optimization KTRUSSEXPLORER by up to 2.69×.  © 2021 IEEE.
KW  - Efficiency
KW  - Graphics processing unit
KW  - Linear algebra
KW  - Trusses
KW  - Adjacency lists
KW  - Decomposition algorithm
KW  - Multiple disciplines
KW  - Optimized combinations
KW  - Performance
KW  - Shared memory
KW  - Subgraphs
KW  - Two-step procedure
KW  - Unified framework
KW  - Weak edge
KW  - Memory architecture
PB  - Institute of Electrical and Electronics Engineers Inc.
SN  - 978-166542369-4 (ISBN)
LA  - English
J2  - IEEE High Perform. Extrem. Comput. Conf., HPEC
M3  - Conference paper
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 0
ER  -

TY  - CONF
AU  - Wang, X.
AU  - Chen, Y.
AU  - Zhang, Z.
AU  - Qiao, P.P.
AU  - Wang, G.
TI  - Efficient Truss Computation for Large Hypergraphs
PY  - 2022
T2  - Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)
VL  - 13724 LNCS
SP  - 290
EP  - 305
DO  - 10.1007/978-3-031-20891-1_21
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85142682599&doi=10.1007%2f978-3-031-20891-1_21&partnerID=40&md5=556a1da569dd813977793a2738db392d
AD  - Beijing Institute of Technology, Beijing, China
AD  - Beihang University, Beijing, China
AB  - Cohesive subgraph mining has been applied in many areas, including social networks, cooperation networks, and biological networks. The k-truss of a graph is the maximal subgraph in which each edge is contained in at least k triangles. Existing k-truss models are defined solely in pairwise graphs and are hence unsuitable for hypergraphs. In this paper, we propose a novel problem, named (k, α, β) -truss computation in hypergraphs. We then propose two hypergraph conversions. The first converts a hypergraph into a pairwise graph, while the second converts it into a projected graph. We further propose two algorithms for computing (k, α, β) -truss in hypergraphs based on these two types of conversions. Experiments show that our (k, α, β) -truss model is effective and our algorithms are efficient in large hypergraphs. © 2022, The Author(s), under exclusive license to Springer Nature Switzerland AG.
KW  - Cohesive subgraph
KW  - Hypergraph
KW  - Truss computation
KW  - Graph algorithms
KW  - Biological networks
KW  - Cohesive subgraph
KW  - Cooperation networks
KW  - Hyper graph
KW  - Network cooperation
KW  - Subgraph mining
KW  - Subgraphs
KW  - Truss computation
KW  - Truss model
KW  - Trusses
A2  - Chbeir R.
A2  - Huang H.
A2  - Silvestri F.
A2  - Manolopoulos Y.
A2  - Zhang Y.
A2  - Zhang Y.
PB  - Springer Science and Business Media Deutschland GmbH
SN  - 03029743 (ISSN); 978-303120890-4 (ISBN)
LA  - English
J2  - Lect. Notes Comput. Sci.
M3  - Conference paper
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 0; Correspondence Address: Z. Zhang; Beijing Institute of Technology, Beijing, China; email: zwzhang@bit.edu.cn
ER  -

TY  - CONF
AU  - Zhang, Z.
AU  - Ren, L.
AU  - You, Y.
AU  - Zhang, K.
AU  - Huang, J.
TI  - Dense Subgraph Mining Kmax-truss Optimization Algorithm
PY  - 2022
T2  - Proceedings of SPIE - The International Society for Optical Engineering
VL  - 12348
C7  - 1234821
DO  - 10.1117/12.2641426
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85142480389&doi=10.1117%2f12.2641426&partnerID=40&md5=506e623e71d9ffde35f72dfc49b549be
AD  - Computer Technology and Application Department, Qinghai University, Qinghai, Xining, 810016, China
AD  - Informationization Technology Center, Qinghai University, Qinghai, Xining, 810016, China
AB  - k-truss is a dense subgraph based on clique. Finding the largest k-truss in a graph is an important problem in graph analysis. The truss decomposition algorithm is widely used in finding k-truss because of its simplicity and ease of implementation. With the explosive growth of graph data scale, the traditional truss decomposition algorithm causes a lot of redundant computation and is no longer applicable. The kmax search strategy that combines large, medium and small steps, realizes subgraph prediction through k-core, reduces the data size, uses large, medium and small steps to retrieve, reduces the number of iterations, and eliminates some redundant calculations. However, the middle step and small step use fixed values, and the number of iterations is too many on some scale graphs. This paper proposes a dynamic adaptive step size method, and uses the clique to analyze the intermediate results, ending the iterative process early and improving the execution efficiency. The experimental results show that compared with the existing kmax search strategy combining large, medium and small steps, 30% iterations can be reduced. © 2022 SPIE. All rights reserved.
KW  - clique
KW  - dynamic adaptive step size
KW  - k-core
KW  - k-truss
KW  - Trusses
KW  - Adaptive step size
KW  - Clique
KW  - Decomposition algorithm
KW  - Dense sub-graphs
KW  - Dynamic adaptive step size
KW  - Dynamic-adaptive
KW  - K-cores
KW  - K-truss
KW  - Number of iterations
KW  - Search strategies
KW  - Iterative methods
A2  - Zhu L.
PB  - SPIE
SN  - 0277786X (ISSN); 978-151065771-7 (ISBN)
LA  - English
J2  - Proc SPIE Int Soc Opt Eng
M3  - Conference paper
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 0; Correspondence Address: L. Ren; Computer Technology and Application Department, Qinghai University, Xining, Qinghai, 810016, China; email: Renl@qhu.edu.cn; J. Huang; Computer Technology and Application Department, Qinghai University, Xining, Qinghai, 810016, China; email: hjqxaly@163.com; CODEN: PSISD
ER  -

TY  - CONF
AU  - Voegele, C.
AU  - Lu, Y.-S.
AU  - Pai, S.
AU  - Pingali, K.
TI  - Parallel triangle counting and k-truss identification using graph-centric methods
PY  - 2017
T2  - 2017 IEEE High Performance Extreme Computing Conference, HPEC 2017
C7  - 8091037
DO  - 10.1109/HPEC.2017.8091037
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85041214203&doi=10.1109%2fHPEC.2017.8091037&partnerID=40&md5=fd90f9a8ca6dda8a535f7eb5b74c19c4
AD  - University of Texas, Austin, TX, United States
AB  - We describe CPU and GPU implementations of parallel triangle-counting and k-truss identification in the Galois and IrGL systems. Both systems are based on a graph-centric abstraction called the operator formulation of algorithms. Depending on the input graph, our implementations are two to three orders of magnitude faster than the reference implementations provided by the IEEE HPEC static graph challenge. © 2017 IEEE.
KW  - Computer programming
KW  - Computer science
KW  - GPU implementation
KW  - Input graphs
KW  - Reference implementation
KW  - Three orders of magnitude
KW  - Trusses
PB  - Institute of Electrical and Electronics Engineers Inc.
SN  - 978-153863472-1 (ISBN)
LA  - English
J2  - IEEE High Perform. Extrem Comput. Conf., HPEC
M3  - Conference paper
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 35
ER  -

TY  - JOUR
AU  - Guo, W.
AU  - Wang, Z.
AU  - Han, F.
TI  - Multifeature Fusion Keyword Extraction Algorithm Based on TextRank
PY  - 2022
T2  - IEEE Access
VL  - 10
SP  - 71805
EP  - 71813
DO  - 10.1109/ACCESS.2022.3188861
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85134206835&doi=10.1109%2fACCESS.2022.3188861&partnerID=40&md5=e2dfb19e37a1d9e06c7d424a7c294b9a
AD  - Beijing University of Posts and Telecommunications, School of Computer Science (National Pilot Software Engineering School), Beijing, 100876, China
AD  - Ministry of Education, Key Laboratory of Trustworthy Distributed Computing and Service (BUPT), Beijing, 100876, China
AD  - Xinjiang Institute of Engineering, Ürümqi, 830023, China
AB  - Keyword extraction is the predecessor of many tasks, and its results directly affect search, recommendation, classification, and other tasks. In this study, we take Chinese text as the research object and propose a multi-feature fusion keyword extraction algorithm combined with BERT semantics and K-Truss graph(BSKT). The BSKT algorithm is based on the TextRank algorithm, which combines BERT semantic features, K-Truss features, and other features. First, the BSKT algorithm obtains the word vectors from the BERT pretraining model to calculate the semantic difference, which is used to optimize the iterative process of the TextRank word graph. Then, the BSKT algorithm obtains its K-Truss graph by decomposing the TextRank word graph and obtains the truss level feature of the word. Finally, by combining the word IDF and truss level features, the BSKT algorithm scores the words to extract keywords. Experimental results show that the BSKT algorithm achieves better performance than the latest keyword extraction algorithm SCTR in the task of extracting 1-10 keywords. Furthermore, the increment in F1 increased by 11.2% when the BSKT algorithm was used to extract three keywords from the Sensor dataset.  © 2013 IEEE.
KW  - BERT word vector
KW  - K-Truss graph
KW  - Keyword extraction
KW  - semantics
KW  - TextRank
KW  - Bit error rate
KW  - Data mining
KW  - Extraction
KW  - Feature extraction
KW  - Iterative methods
KW  - Job analysis
KW  - Trusses
KW  - BERT word vector
KW  - Bit-error rate
KW  - Extraction algorithms
KW  - Features extraction
KW  - Graph algorithms
KW  - K-truss graph
KW  - Keywords extraction
KW  - Task analysis
KW  - Textrank
KW  - Word vectors
KW  - Semantics
PB  - Institute of Electrical and Electronics Engineers Inc.
SN  - 21693536 (ISSN)
LA  - English
J2  - IEEE Access
M3  - Article
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 1; Correspondence Address: Z. Wang; Beijing University of Posts and Telecommunications, School of Computer Science (National Pilot Software Engineering School), Beijing, 100876, China; email: wangzihao2020@bupt.edu.cn
ER  -

TY  - CONF
AU  - Ghafouri, M.
AU  - Wang, K.
AU  - Zhang, F.
AU  - Zhang, Y.
AU  - Lin, X.
TI  - Efficient graph hierarchical decomposition with user engagement and tie strength
PY  - 2020
T2  - Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)
VL  - 12113 LNCS
SP  - 448
EP  - 465
DO  - 10.1007/978-3-030-59416-9_27
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85092113560&doi=10.1007%2f978-3-030-59416-9_27&partnerID=40&md5=322e23e5a1c8b3582e73be94e0b55cd3
AD  - The University of New South Wales, Sydney, Australia
AD  - Guangzhou University, Guangzhou, China
AD  - The University of Technology Sydney, Ultimo, Australia
AB  - Graph decomposition methods using k-core and k-truss hierarchically group vertices and edges from external to internal by degrees of vertices or tie strength of edges. As both the user engagement of nodes and the strength of relationships are important, the (k,s)-core model is proposed in the literature to discover strong communities. Nevertheless, the decomposition algorithm regarding (k,s)-core is not yet investigated. In this paper, we propose (k,s)-core algorithms to decompose a graph into its hierarchical structures considering both user engagement and tie strength. We first present the basic (k,s)-core decomposition methods. Then, we propose the advanced algorithms DES and DEK which index the support of edges to enable higher-level cost-sharing in the peeling process. In addition, effective pruning strategies are applied to DES/DEK to further enhance performance. Moreover, we build a novel index based on the decomposition result and investigate an efficient (k,s)-core query algorithm based on our index. Extensive experimental evaluations on 12 real-world datasets verify the efficiency of our proposed decomposition algorithms and show that our index-based query algorithm can speed up the state-of-the-art query algorithms by up to three orders of magnitude. © Springer Nature Switzerland AG 2020.
KW  - Cohesive subgraph
KW  - Graph decomposition
KW  - Index
KW  - Query
KW  - Cost effectiveness
KW  - Database systems
KW  - Query processing
KW  - Decomposition algorithm
KW  - Decomposition methods
KW  - Experimental evaluation
KW  - Graph decompositions
KW  - Hierarchical decompositions
KW  - Hierarchical structures
KW  - Real-world datasets
KW  - Three orders of magnitude
KW  - Graph algorithms
A2  - Nah Y.
A2  - Cui B.
A2  - Lee S.-W.
A2  - Yu J.X.
A2  - Moon Y.-S.
A2  - Whang S.E.
PB  - Springer Science and Business Media Deutschland GmbH
SN  - 03029743 (ISSN); 978-303059415-2 (ISBN)
LA  - English
J2  - Lect. Notes Comput. Sci.
M3  - Conference paper
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 11; Correspondence Address: K. Wang; The University of New South Wales, Sydney, Australia; email: kai.wang@unsw.edu.au
ER  -

TY  - CONF
AU  - Zhang, Y.
AU  - Yu, J.X.
TI  - Unboundedness and efficiency of truss maintenance in evolving graphs
PY  - 2019
T2  - Proceedings of the ACM SIGMOD International Conference on Management of Data
SP  - 1024
EP  - 1041
DO  - 10.1145/3299869.3300082
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85069442142&doi=10.1145%2f3299869.3300082&partnerID=40&md5=c71e920a602fd95edacee43caad9a27c
AD  - Chinese University of Hong Kong, Hong Kong
AB  - Due to the ubiquity of graphs, graph analytics has attracted much attention from both research and industry communities. The notion of k-truss is widely used in graph analytics. Since graphs are continuously evolving in real applications and it is costly to compute trusses from scratch, we study the problem of truss maintenance which aims at designing efficient incremental algorithms to update trusses when graphs are updated with changes. An incremental algorithm is desired to be bounded; that is, its cost is of O(f (kCHANGEDkc )) for some polynomial function f and some positive integer c, where CHANGED comprises the changes to both the graph and the result and kCHANGEDkc is the size of the c-hop neighborhood of CHANGED. An incremental problem is bounded if it has a bounded incremental algorithm and is unbounded otherwise. Under the model of locally persistent algorithms, we prove that truss maintenance is bounded under edge removals but is unbounded even for unit edge insertions. To address the unboundedness, we formulate a new notion AFF which, as a practically effective alternative to CHANGED, represents a set of edges affected by the changes to the graph, and devise an insertion algorithm that is bounded with respect to AFF, while retaining the boundedness for edge removals. More specifically, our insertion algorithm runs in O(f (kAFF kc )) time for some polynomial function f and some positive integer c with kAFF kc being the size of the c-hop neighborhood of AFF. Our extensive performance studies show that our new algorithms can significantly outperform the state-of-the-art by up to 3 orders of magnitude for the 12 large real graphs tested and are more efficient than computing trusses from scratch even for changes of non-trivial size. We report our findings in this paper. © 2019 Association for Computing Machinery.
KW  - Boundedness
KW  - Incremental Computation
KW  - K-Truss
KW  - Functions
KW  - Graphic methods
KW  - Industrial research
KW  - Maintenance
KW  - Boundedness
KW  - Incremental algorithm
KW  - Incremental computation
KW  - Insertion algorithms
KW  - Orders of magnitude
KW  - Performance study
KW  - Polynomial functions
KW  - Real applications
KW  - Trusses
PB  - Association for Computing Machinery
SN  - 07308078 (ISSN); 978-145035643-5 (ISBN)
LA  - English
J2  - Proc. ACM SIGMOD Int. Conf. Manage. Data
M3  - Conference paper
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 35
ER  -

TY  - CONF
AU  - Pearce, R.
AU  - Sanders, G.
TI  - K-truss decomposition for Scale-Free Graphs at Scale in Distributed Memory
PY  - 2018
T2  - 2018 IEEE High Performance Extreme Computing Conference, HPEC 2018
C7  - 8547572
DO  - 10.1109/HPEC.2018.8547572
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85060109153&doi=10.1109%2fHPEC.2018.8547572&partnerID=40&md5=5dd36b7f1fc5cb218490133e3866a592
AD  - Center for Applied Scientific Computing, Lawrence Livermore National Laboratory, United States
AB  - We update our prior 2017 Graph Challenge submission [11] on large scale triangle counting in distributed memory by extending it to compute the full k-truss decomposition [6] of large scale-free graphs. We build on heuristics to minimize 'wedge checks', by operating on an ordered directed graph, and describe an algorithm to 'unroll' triangle counts when they are scheduled for pruning by the k-truss decomposition. Our k-truss algorithm is implemented using HavoqGT, an asynchronous vertex-centric graph analytics framework for distributed memory. We present a brief experimental evaluation on two large, real-world, scale-free graphs: a 128B edge web-graph and a 1.4B edge twitter follower graph. To our knowledge, the 128B edge web-graph is the largest real-world graph to have its k-truss decomposition computed. © 2018 IEEE.
KW  - Memory architecture
KW  - Trusses
KW  - Distributed Memory
KW  - Experimental evaluation
KW  - Graph analytics
KW  - Real-world
KW  - Real-world graphs
KW  - Scale free graph
KW  - Web graphs
KW  - Directed graphs
PB  - Institute of Electrical and Electronics Engineers Inc.
SN  - 978-153865989-2 (ISBN)
LA  - English
J2  - IEEE High Perform. Extrem. Comput. Conf., HPEC
M3  - Conference paper
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 13
ER  -

TY  - JOUR
AU  - Alemi, M.
AU  - Haghighi, H.
TI  - KTMiner: Distributed k-truss detection in big graphs
PY  - 2019
T2  - Information Systems
VL  - 83
SP  - 195
EP  - 216
DO  - 10.1016/j.is.2019.03.014
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85064328212&doi=10.1016%2fj.is.2019.03.014&partnerID=40&md5=258bc3541f0d41df28e1b76a3327e856
AD  - Faculty of Computer Science and Engineering, Shahid Beheshti University, G. C., Tehran, Iran
AB  - Discovering cohesive subgraphs is an important issue in the analysis of massive graphs. A new type of cohesive subgraphs, k-truss, has gained a lot of attentions in recent years. Although different methods have been proposed to extract k-truss subgraphs, they are unable to deal with big graphs, and they suffer from the lack of efficiency. To deal with the problem of finding k-truss subgraphs in big graphs, we propose a novel efficient distributed algorithm, called KTMiner, based on the MapReduce paradigm and the key–value structure. KTMiner is deployed on the Spark platform, a big data framework. Given a specific k value, KTMiner finds edges belonging to the k-truss subgraphs. It includes three consequent phases. First, a novel distributed k-core routine is employed to prune unnecessary vertices from the input graph. Then, the triangle information per edge in the form of a new data structure, called Triangle Set (TSet), is produced. Finally, using a distributed iterative procedure, the desired k-truss subgraphs are detected. KTMiner perfectly caches the reusable data in the distributed memory. In addition, it forms an efficient load balancing mechanism by designing appropriate data structures. This results in a fine-grained parallelism. The superiority of our solution over the state-of-the-art methods is shown by the experiments on real-world graphs. © 2019 Elsevier Ltd
KW  - Big graphs
KW  - Cohesive subgraphs
KW  - Distributed algorithm
KW  - K-core
KW  - K-truss
KW  - Triangle counting
KW  - Data structures
KW  - Graphic methods
KW  - Iterative methods
KW  - Parallel algorithms
KW  - Big graphs
KW  - Distributed Memory
KW  - Fine-grained parallelism
KW  - K-cores
KW  - Load-balancing mechanisms
KW  - State-of-the-art methods
KW  - Subgraphs
KW  - Triangle counting
KW  - Trusses
PB  - Elsevier Ltd
SN  - 03064379 (ISSN)
LA  - English
J2  - Inf. Syst.
M3  - Article
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 3; Correspondence Address: H. Haghighi; Faculty of Computer Science and Engineering, Shahid Beheshti University, G. C., Tehran, Iran; email: h_haghighi@sbu.ac.ir; CODEN: INSYD
ER  -

TY  - CONF
AU  - Ye, J.
AU  - Zhu, Y.
AU  - Chen, L.
TI  - Top-r keyword-based community search in attributed graphs
PY  - 2023
T2  - Proceedings - International Conference on Data Engineering
VL  - 2023-April
SP  - 1652
EP  - 1664
DO  - 10.1109/ICDE55515.2023.00130
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85167706074&doi=10.1109%2fICDE55515.2023.00130&partnerID=40&md5=bc7295a7d9c28d88bf4695d17753a95c
AD  - Wuhan University, School of Computer Science, China
AD  - Zhejiang University, College of Computer Science and Technology, China
AB  - Community search on attributed graphs has been widely studied recently. Most earlier works aim to retrieve communities relevant to the query nodes QU and query keywords QW , and some recent works begin to focus on keyword-based attributed community search (KACS) with only query keywords QW , aiming to return a structural cohesive community with the highest score relevant to QW. However, these scores only consider the semantic similarity between user attributes and QW and neglect the semantic similarity between users in the community. Thus, we propose a new community model which considers both semantic similarities and uses triangle-connected k-truss to ensure structural cohesiveness, and study the top-r keyword-based attributed community search (rKACS) problem for a given QW to provide more candidates for users to choose the preferred communities. To find the top-r communities, we first propose the Basic algorithm, which gradually finds the communities with large scores through maximal clique enumerations. Then, we further propose an improved algorithm Incremental based on two novel optimization techniques, which can significantly reduce the search space and find the maximal cliques incrementally. Extensive experimental studies on four real-world datasets validated the effectiveness and efficiency of our methods.  © 2023 IEEE.
KW  - community search, keyword search, attributed graph
KW  - Search engines
KW  - Attributed graphs
KW  - Community model
KW  - Community search, keyword search, attributed graph
KW  - Keyword search
KW  - Keyword-based
KW  - Maximal clique enumerations
KW  - Query nodes
KW  - Search keyword
KW  - Search problem
KW  - Semantic similarity
KW  - Semantics
PB  - IEEE Computer Society
SN  - 10844627 (ISSN); 979-835032227-9 (ISBN)
LA  - English
J2  - Proc Int Conf Data Eng
M3  - Conference paper
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 0; Correspondence Address: Y. Zhu; Wuhan University, School of Computer Science, China; email: yyzhu@whu.edu.cn
ER  -

TY  - CONF
AU  - Adeyl, K.
AU  - Kmimech, M.
AU  - Mhadhbi, N.
AU  - Raddaoui, B.
TI  - Cohesive subgraph models for overlapping community search over networks
PY  - 2020
T2  - Frontiers in Artificial Intelligence and Applications
VL  - 327
SP  - 282
EP  - 293
DO  - 10.3233/FAIA200573
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85092728981&doi=10.3233%2fFAIA200573&partnerID=40&md5=be31ee45ed4afc2364aacbdf3f513235
AD  - ISIMM Monastir, Tunisia
AD  - CRIL - CNRS UMR 8188, University of Artois, Lens, France
AD  - SAMOVAR, Télécom SudParis, Institut Polytechnique de Paris, Évry, France
AB  - There has been significant interest in the study of the problem of community search in large networks. Given one or more query nodes, this problem aims to discover densely connected subgroups containing these nodes. Various algorithms have been proposed to solve this challenging problem using different measures or a variety of cohesive subgraphs. In this paper, given an undirected graph and a set of query nodes, we study the community search using novel several cohesive subgraph models. More precisely, we propose to exploit several cohesive structures in a unified framework to find densely communities for query nodes in large complex networks. First, we review some existing cohesive structures. Next, to make these structures more effective models of communities, we focus on interesting configurations that are larger and more cohesive by fulfilling some constraints. The new structures obtained allow to ensure a larger density on the discovered communities and overcome some weaknesses of existing models. Finally, empirical results show the effectiveness of our framework to find communities for query nodes in a variety of real graphs.  © 2020 The authors and IOS Press. All rights reserved.
KW  - Cliques
KW  - Community search
KW  - K-edge-connected
KW  - K-truss
KW  - Real-world graphs
KW  - Complex networks
KW  - Large networks
KW  - Overlapping communities
KW  - Query nodes
KW  - Subgraphs
KW  - Undirected graph
KW  - Unified framework
KW  - Graph theory
A2  - Fujita H.
A2  - Selamat A.
A2  - Omatu S.
PB  - IOS Press BV
SN  - 09226389 (ISSN); 978-164368114-6 (ISBN)
LA  - English
J2  - Front. Artif. Intell. Appl.
M3  - Conference paper
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 0; Correspondence Address: K. Adeyl; ISIMM Monastir, University of Monastir, Tunisia; email: khaled.adeyl@gmail.com
ER  -

TY  - CONF
AU  - Wu, J.
AU  - Goshulak, A.
AU  - Srinivasan, V.
AU  - Thomo, A.
TI  - K-truss decomposition of large networks on a single consumer-grade machine
PY  - 2018
T2  - Proceedings of the 2018 IEEE/ACM International Conference on Advances in Social Networks Analysis and Mining, ASONAM 2018
C7  - 8508642
SP  - 873
EP  - 880
DO  - 10.1109/ASONAM.2018.8508642
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85057308202&doi=10.1109%2fASONAM.2018.8508642&partnerID=40&md5=57edb4c68dcbda0a1ddab92f41ae38e4
AD  - Department of Computer Science, University of Victoria, Victoria, V8P 5C2, BC, Canada
AB  - k-truss decomposition of a graph is a method to discover cohesive subgraphs and to study the hierarchical structure among them. The existing algorithms for computing k-truss of today's massive networks mainly focus on reducing the runtime using parallel computation on a powerful multi-core server. Our focus, by contrast, is to investigate the feasibility of computing the k-truss on a single consumer-grade machine within a reasonable amount of time. We engineer two efficient k-truss decomposition algorithms: The edge-peeling algorithm proposed by J. Wang and J. Cheng and the asynchronous h-index-updating algorithm proposed by A. E. Sariyuce, C. Seshadhri, and A. Pinar. We reduce their memory usage significantly by optimizing the underlying data structures and by using WebGraph, an efficient framework for graph compression. With our optimized implementation, we show that we can efficiently compute k-truss decomposition of large networks (e.g., a graph with 1.2 billion edges) on a single consumer-grade machine. © 2018 IEEE.
KW  - graph analytics
KW  - k-core
KW  - k-truss
KW  - Computer networks
KW  - Information systems
KW  - Decomposition algorithm
KW  - Graph analytics
KW  - Graph compressions
KW  - Hierarchical structures
KW  - K-cores
KW  - Multi-core servers
KW  - Optimized implementation
KW  - Parallel Computation
KW  - Trusses
A2  - Tagarelli A.
A2  - Reddy C.
A2  - Brandes U.
PB  - Institute of Electrical and Electronics Engineers Inc.
SN  - 978-153866051-5 (ISBN)
LA  - English
J2  - Proc. IEEE/ACM Int. Conf. Adv. Soc. Networks Anal. Mining, ASONAM
M3  - Conference paper
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 7; Correspondence Address: J. Wu; Department of Computer Science, University of Victoria, Victoria, V8P 5C2, Canada; email: wujian@uvic.ca
ER  -

TY  - CONF
AU  - Blanco, M.
AU  - Low, T.M.
AU  - Kim, K.
TI  - Exploration of fine-grained parallelism for load balancing eager K-truss on GPU and CPU
PY  - 2019
T2  - 2019 IEEE High Performance Extreme Computing Conference, HPEC 2019
C7  - 8916473
DO  - 10.1109/HPEC.2019.8916473
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85076736216&doi=10.1109%2fHPEC.2019.8916473&partnerID=40&md5=f118f38fe9a3c92a0923444ae129a9d6
AD  - Carnegie Mellon University, Dept. of Electrical and Computer Engineering, Pittsburgh, United States
AD  - Center for Computing Research Sandia National Laboratories, Albuquerque, United States
AB  - In this work we present a performance exploration on Eager K-truss, a linear-algebraic formulation of the K-truss graph algorithm. We address performance issues related to load imbalance of parallel tasks in symmetric, triangular graphs by presenting a fine-grained parallel approach to executing the support computation. This approach also increases available parallelism, making it amenable to GPU execution. We demonstrate our fine-grained parallel approach using implementations in Kokkos and evaluate them on an Intel Skylake CPU and an Nvidia Tesla V100 GPU. Overall, we observe between a 1.261. 48x improvement on the CPU and a 9.97-16.92x improvement on the GPU due to our fine-grained parallel formulation. © 2019 IEEE.
KW  - CPU
KW  - Eager Ktruss
KW  - GPU
KW  - Graph Algorithms
KW  - High Performance
KW  - K-truss
KW  - Kokkos
KW  - Linear Algebra
KW  - Parallelism
KW  - Performance Portability
KW  - Graphics processing unit
KW  - Linear algebra
KW  - Program processors
KW  - Eager Ktruss
KW  - Graph algorithms
KW  - High Performance
KW  - Kokkos
KW  - Parallelism
KW  - Performance portability
KW  - Trusses
PB  - Institute of Electrical and Electronics Engineers Inc.
SN  - 978-172815020-8 (ISBN)
LA  - English
J2  - IEEE High Perform. Extrem. Comput. Conf., HPEC
M3  - Conference paper
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 13
ER  -

TY  - CONF
AU  - Zhao, J.
AU  - Sun, R.
AU  - Zhu, Q.
AU  - Wang, X.
AU  - Chen, C.
TI  - Community Identification in Signed Networks: A K-Truss Based Model
PY  - 2020
T2  - International Conference on Information and Knowledge Management, Proceedings
SP  - 2321
EP  - 2324
DO  - 10.1145/3340531.3412117
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85095864308&doi=10.1145%2f3340531.3412117&partnerID=40&md5=8de2908e6892a8f98a3937b7a0b16a75
AD  - Zhejiang Gongshang University, Hangzhou, China
AB  - Community detection is a fundamental problem in social network analysis, and most existing studies focus on unsigned graphs, i.e., treating all relationships as positive. However, friend and foe relationships naturally exist in many real-world applications. Ignoring the signed information may lead to unstable communities. To better describe the communities, we propose a novel model, named signed k-truss, which leverages the properties of k-truss and balanced triangle. We prove that the problem of identifying the maximum signed k-truss is NP-hard. To deal with large graphs, novel pruning strategies and algorithms are developed. Finally, we conduct comprehensive experiments on real-world signed networks to evaluate the performance of proposed techniques. © 2020 ACM.
KW  - balanced triangle
KW  - k-truss
KW  - signed graph
KW  - Graph algorithms
KW  - Knowledge management
KW  - NP-hard
KW  - Community detection
KW  - Community identification
KW  - Large graphs
KW  - Pruning strategy
KW  - Real-world
KW  - Signed networks
KW  - Truss-based model
KW  - Trusses
PB  - Association for Computing Machinery
SN  - 978-145036859-9 (ISBN)
LA  - English
J2  - Int Conf Inf Knowledge Manage
M3  - Conference paper
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 13
ER  -

TY  - JOUR
AU  - Guan, Y.
AU  - Lu, R.
AU  - Zhang, S.
AU  - Zheng, Y.
AU  - Shao, J.
AU  - Wei, G.
TI  - <inline-formula><tex-math notation="LaTeX">$k$</tex-math></inline-formula>TCQ: Achieving Privacy-Preserving <inline-formula><tex-math notation="LaTeX">$k$</tex-math></inline-formula>-Truss Community Queries Over Outsourced Data
PY  - 2023
T2  - IEEE Transactions on Dependable and Secure Computing
SP  - 1
EP  - 16
DO  - 10.1109/TDSC.2023.3317401
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85173010303&doi=10.1109%2fTDSC.2023.3317401&partnerID=40&md5=f8c05c1de9ed55b134e91c24a017a920
AD  - Faculty of Computer Science, University of New Brunswick, Fredericton, Canada
AD  - State Key Laboratory of Integrated Services Networks, Xidian University, Xi&#x0027;an, China
AD  - Zhejiang Gongshang University, Hangzhou, China
AB  - Community search over graphs, which is believed as a powerful tool for locating subgraphs of closely related vertices, has received considerable attention in recent years, and <inline-formula><tex-math notation="LaTeX">$k$</tex-math></inline-formula>-truss is such a popular community search metric to obtain subgraphs in which every edge forms <inline-formula><tex-math notation="LaTeX">$(k-2)$</tex-math></inline-formula> triangles. In this paper, we particularly consider <inline-formula><tex-math notation="LaTeX">$k$</tex-math></inline-formula>-truss community query services, which will return all <inline-formula><tex-math notation="LaTeX">$k$</tex-math></inline-formula>-truss communities containing a given query vertex. As is known, when the size of graph grows, for achieving better performance, it is natural for a service provider to outsource the services to a powerful cloud. However, this stresses the need for privacy-preserving <inline-formula><tex-math notation="LaTeX">$k$</tex-math></inline-formula>-truss community query services, as the cloud server is not fully trustable. Over the past years, many schemes focusing on privacy-preserving graph computation have been put forth, but none of them can well support privacy-preserving <inline-formula><tex-math notation="LaTeX">$k$</tex-math></inline-formula>-truss community queries. Aiming at this challenge, we first propose a privacy-preserving <inline-formula><tex-math notation="LaTeX">$k$</tex-math></inline-formula>-truss community query scheme (<inline-formula><tex-math notation="LaTeX">$k$</tex-math></inline-formula>TCQ) by constructing boolean circuits with homomorphic encryption technique and a table-based index. After that, we also design an efficiency-enhanced version (<inline-formula><tex-math notation="LaTeX">$k$</tex-math></inline-formula>TCQ+) based on a stream cipher scheme to reduce the encrypted index&#x0027;s size and improve the query efficiency. Detailed security analysis shows that both <inline-formula><tex-math notation="LaTeX">$k$</tex-math></inline-formula>TCQ and <inline-formula><tex-math notation="LaTeX">$k$</tex-math></inline-formula>TCQ+ can well preserve data privacy and access pattern privacy, and extensive experimental results also demonstrate that <inline-formula><tex-math notation="LaTeX">$k$</tex-math></inline-formula>TCQ+ can observably reduce the size of encrypted index and the query time by <inline-formula><tex-math notation="LaTeX">$12\times$</tex-math></inline-formula> and <inline-formula><tex-math notation="LaTeX">$5.9\times$</tex-math></inline-formula>, respectively. IEEE
KW  - <inline-formula xmlns:ali="http://www.niso.org/schemas/ali/1.0/" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"> <tex-math notation="LaTeX">$k$</tex-math> </inline-formula>-truss
KW  - community search
KW  - Cryptography
KW  - Data privacy
KW  - Homomorphic encryption
KW  - homomorphic encryption
KW  - Indexes
KW  - outsourced graph data
KW  - Privacy
KW  - privacy-preserving
KW  - Servers
KW  - Social networking (online)
KW  - Privacy-preserving techniques
KW  - Servers
KW  - Social networking (online)
KW  - <inline-formula xmlns:ali="
KW  - > <tex-math notation="LaTeX">$k$</tex-math> </inline-formula>-truss
KW  - Community search
KW  - Graph data
KW  - Ho-momorphic encryptions
KW  - Homomorphic-encryptions
KW  - Index
KW  - Outsourced graph data
KW  - Privacy
KW  - Privacy preserving
KW  - Social networking (online)
KW  - Xmlns:mml="
KW  - Xmlns:xlink="
KW  - Xmlns:xsi="
KW  - Trusses
PB  - Institute of Electrical and Electronics Engineers Inc.
SN  - 15455971 (ISSN)
LA  - English
J2  - IEEE Trans. Dependable Secure Comput.
M3  - Article
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 0
ER  -

TY  - CONF
AU  - Liu, P.
AU  - Sariyuce, A.E.
TI  - Characterizing and Utilizing the Interplay between Core and Truss Decompositions
PY  - 2020
T2  - Proceedings - 2020 IEEE International Conference on Big Data, Big Data 2020
C7  - 9378497
SP  - 957
EP  - 962
DO  - 10.1109/BigData50022.2020.9378497
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85103813868&doi=10.1109%2fBigData50022.2020.9378497&partnerID=40&md5=398d7b341b1fee9bb5c52045884b1bb6
AD  - University at Buffalo, Buffalo, United States
AB  - Finding the dense regions in a graph is an important problem in network analysis. Core decomposition and truss decomposition address this problem from two different perspectives. The former is a vertex-driven approach that assigns density indicators for vertices whereas the latter is an edge-driven technique that put density quantifiers on edges. Despite the algorithmic similarity between these two approaches, it is not clear how core and truss decompositions in a network are related. In this work, we introduce the vertex interplay (VI) and edge interplay (EI) plots to characterize the interplay between core and truss decompositions. Based on our observations, we devise Core-TrussDD, an anomaly detection algorithm to identify the discrepancies between core and truss decompositions. We analyze a large and diverse set of real-world networks, and demonstrate how our approaches can be effective tools to characterize the patterns and anomalies in the networks. Through VI and EI plots, we observe distinct behaviors for graphs from different domains, and identify two anomalous behaviors driven by specific real-world structures. Our algorithm provides an efficient solution to retrieve the outliers in the networks, which correspond to the two anomalous behaviors. We believe that investigating the interplay between core and truss decompositions is important and can yield surprising insights regarding the dense subgraph structure of real-world networks. © 2020 IEEE.
KW  - dense subgraph discovery
KW  - k-core decomposition
KW  - k-truss decomposition
KW  - Anomaly detection
KW  - Big data
KW  - Anomalous behavior
KW  - Anomaly-detection algorithms
KW  - Dense region
KW  - Dense subgraph
KW  - Different domains
KW  - Effective tool
KW  - In-network analysis
KW  - Real-world networks
KW  - Trusses
A2  - Wu X.
A2  - Jermaine C.
A2  - Xiong L.
A2  - Hu X.T.
A2  - Kotevska O.
A2  - Lu S.
A2  - Xu W.
A2  - Aluru S.
A2  - Zhai C.
A2  - Al-Masri E.
A2  - Chen Z.
A2  - Saltz J.
PB  - Institute of Electrical and Electronics Engineers Inc.
SN  - 978-172816251-5 (ISBN)
LA  - English
J2  - Proc. - IEEE Int. Conf. Big Data, Big Data
M3  - Conference paper
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 1
ER  -

TY  - CONF
AU  - Conte, A.
AU  - De Sensi, D.
AU  - Grossi, R.
AU  - Marino, A.
AU  - Versari, L.
TI  - Discovering k-Trusses in Large-Scale Networks
PY  - 2018
T2  - 2018 IEEE High Performance Extreme Computing Conference, HPEC 2018
C7  - 8547735
DO  - 10.1109/HPEC.2018.8547735
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85060095077&doi=10.1109%2fHPEC.2018.8547735&partnerID=40&md5=ec40ab06a107781f666a332da33f3c24
AD  - National Institute of Informatics, Tokyo, Japan
AD  - Università di Pisa, Pisa, Italy
AB  - A k-truss is a subgraph where every edge belongs to at least k-2 triangles in the subgraph. The truss decomposition assigns each edge the maximum k for which the edge belongs to a k-truss, and the trussness of a graph is the maximum among its edges. Discovery algorithms for k-trusses and truss decomposition provide useful insight for graph analytics (such as community detection). Even though they take polynomial time, on massive networks they suffer from handling a potentially cubic number of wedges: algorithms either need a long time to recompute triangles several times, have high memory usage, or rely on the large number of cores on graphic units. In this paper we describe EXTRUSS, a highly optimized algorithm for truss decomposition which outperforms existing algorithms. We then introduce a faster algorithm, HYBTRUSS, which finds the trussness of a graph using less time and space than EXTRUSS. Our algorithms take the best of existing approaches having good performance, low memory usage, and no need for sophisticated hardware systems. We compare our algorithms with the state-of-the-art on a set of real-world and synthetic networks. EXTRUSS processes graphs with over a billion edges, which seems difficult for the competitors, and our HYBTRUSS is the first algorithm able to find the trussness of a graph with over 25 billion edges. © 2018 IEEE.
KW  - Graph algorithms
KW  - HPEC 2018 graph challenge
KW  - K-trusses
KW  - Truss decomposition
KW  - Polynomial approximation
KW  - Community detection
KW  - Discovery algorithm
KW  - Graph algorithms
KW  - HPEC 2018 graph challenge
KW  - Large-scale network
KW  - Massive networks
KW  - Optimized algorithms
KW  - Synthetic networks
KW  - Trusses
PB  - Institute of Electrical and Electronics Engineers Inc.
SN  - 978-153865989-2 (ISBN)
LA  - English
J2  - IEEE High Perform. Extrem. Comput. Conf., HPEC
M3  - Conference paper
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 8
ER  -

TY  - CHAP
AU  - Ravichandran, K.
AU  - Subramaniasivam, A.
AU  - Aishwarya, P.S.
AU  - Kumar, N.S.
TI  - Fast exact triangle counting in large graphs using SIMD acceleration
PY  - 2023
T2  - Advances in Computers
VL  - 128
SP  - 233
EP  - 250
DO  - 10.1016/bs.adcom.2021.10.003
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85125487272&doi=10.1016%2fbs.adcom.2021.10.003&partnerID=40&md5=2646e0bc83f1957836cb28ed60479b32
AD  - Department of Computer Science and Engineering, PES University, Bangalore, India
AB  - Triangle counting is a cornerstone operation used in large graph analytics. Hash-based algorithms for triangle counting fail to take advantage of available vectorization in modern processors. Linear algebraic-based methods often involve sparse matrix multiplication which is inherently expensive. Nonlinear algebraic methods have a slow implementation and count each triangle multiple times which is then rescaled to obtain the exact triangle count. We propose a fast vector instruction implementation of a set operation-based triangle counting algorithm, which avoids matrix multiplication and finds the exact triangle count directly. Our implementation outperforms reference implementations proposed by the MIT graph challenge and miniTri when tried on about 40 graphs from the SNAP large network dataset, giving a speedup ranging from 41× to more than 1500×. A comparison against existing state-of-the-art techniques gave a speedup of 3× on average. We additionally show that this algorithm can easily be plugged into graph frameworks that either use or can be modified to use compressed sparse row like representation, to give faster compute times. We also propose an optimization to the k truss decomposition algorithm that can be used with the optimized triangle counting algorithm to give better performance. © 2023 Elsevier Inc.
KW  - Exact triangle counting
KW  - Graphs
KW  - Set operations
KW  - SIMD
KW  - SNAP
KW  - Vector instructions
A2  - Patgiri R.
A2  - Department of Computer Science and Engineering, National Institute of Technology Silchar, Assam, Silchar, Cachar
A2  - Deka G.C.
A2  - Ministry of Skill Development and Entrepreneurship, New Delhi
A2  - Biswas A.
A2  - Department of Computer Science and Engineering, National Institute of Technology Silchar, Assam, Silchar
PB  - Academic Press Inc.
SN  - 00652458 (ISSN); 978-032389810-2 (ISBN)
LA  - English
J2  - Adv. Comput.
M3  - Book chapter
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 0
ER  -

TY  - CONF
AU  - Yu, S.
AU  - Liu, Y.
AU  - Ren, J.
AU  - Bedru, H.D.
AU  - Bekele, T.M.
AU  - Wan, L.
AU  - Xia, F.
TI  - Mining key scholars via collapsed core and truss
PY  - 2019
T2  - Proceedings - IEEE 17th International Conference on Dependable, Autonomic and Secure Computing, IEEE 17th International Conference on Pervasive Intelligence and Computing, IEEE 5th International Conference on Cloud and Big Data Computing, 4th Cyber Science and Technology Congress, DASC-PiCom-CBDCom-CyberSciTech 2019
C7  - 8890469
SP  - 305
EP  - 308
DO  - 10.1109/DASC/PiCom/CBDCom/CyberSciTech.2019.00063
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85075142205&doi=10.1109%2fDASC%2fPiCom%2fCBDCom%2fCyberSciTech.2019.00063&partnerID=40&md5=17609467f4ad83602444bee2cbe94168
AD  - School of Software, Dalian University of Technology, Dalian, 116620, China
AB  - Mining key scholars is an important task in various scenes such as experts finding, collaborator recommendation, etc. With the generalization of collaboration, the co-authorship network has extremely enlarged, which makes this task more difficult to be handled. In this work, we propose two algorithms to mine key scholars based on collapsed k-core/k-truss and closeness centrality. The proposed algorithms mine key scholars mainly from two perspectives, i.e., component segmentation calculation and auxiliary decision metric. The proposed algorithms are irrelevant to network connectivity, which performs with high efficiency. We employ closeness centrality to avoid the derivation of greedy strategy. By comparing with other baseline methods, we find that the two proposed algorithms outperform with higher efficiency and better effectiveness. © 2019 IEEE.
KW  - Closeness centrality
KW  - Collapsed k-core
KW  - Collapsed k-truss
KW  - Key scholars
KW  - Network component
KW  - Big data
KW  - Efficiency
KW  - Network components
KW  - Baseline methods
KW  - Closeness centralities
KW  - Co-authorship networks
KW  - Greedy strategies
KW  - Higher efficiency
KW  - K-cores
KW  - Key scholars
KW  - Network connectivity
KW  - Trusses
PB  - Institute of Electrical and Electronics Engineers Inc.
SN  - 978-172813024-8 (ISBN)
LA  - English
J2  - Proc. - IEEE Int. Conf. Dependable, Auton. Secur. Comput., IEEE Int. Conf. Pervasive Intell. Comput., IEEE Int. Conf. Cloud Big Data Compu., Cyber Sci. Technol. Congr., DASC-PiCom-CBDCom-CyberSciTech
M3  - Conference paper
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 2
ER  -

TY  - CONF
AU  - Zhang, F.
AU  - Yuan, L.
AU  - Zhang, Y.
AU  - Qin, L.
AU  - Lin, X.
AU  - Zhou, A.
TI  - Discovering strong communities with user engagement and tie strength
PY  - 2018
T2  - Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)
VL  - 10827 LNCS
SP  - 425
EP  - 441
DO  - 10.1007/978-3-319-91452-7_28
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85048034929&doi=10.1007%2f978-3-319-91452-7_28&partnerID=40&md5=7549d7ee9261b001aa47c4930291154b
AD  - University of New South Wales, Sydney, Australia
AD  - Centre for AI, University of Technology Sydney, Sydney, Australia
AD  - University of Queensland, Brisbane, Australia
AB  - In this paper, we propose and study a novel cohesive subgraph model, named (k,s)-core, which requires each user to have at least k familiars or friends (not just acquaintances) in the subgraph. The model considers both user engagement and tie strength to discover strong communities. We compare the (k,s)-core model with k-core and k-truss theoretically and experimentally. We propose efficient algorithms to compute the (k,s)-core and decompose the graph by a particular sub-model k-fami. Extensive experiments show (1) our (k,s)-core and k-fami are effective cohesive subgraph models and (2) the (k,s)-core computation and k-fami decomposition are efficient on various real-life social networks. © Springer International Publishing AG, part of Springer Nature 2018.
KW  - Artificial intelligence
KW  - Computer science
KW  - Computers
KW  - Core computation
KW  - Core model
KW  - K-cores
KW  - Subgraphs
KW  - Submodels
KW  - Tie strengths
KW  - User engagement
KW  - Database systems
A2  - Manolopoulos Y.
A2  - Li J.
A2  - Sadiq S.
A2  - Pei J.
PB  - Springer Verlag
SN  - 03029743 (ISSN); 978-331991451-0 (ISBN)
LA  - English
J2  - Lect. Notes Comput. Sci.
M3  - Conference paper
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 21; Correspondence Address: L. Yuan; University of New South Wales, Sydney, Australia; email: longyuan@cse.unsw.edu.au
ER  -

TY  - JOUR
AU  - Mo, Z.
AU  - Luo, Q.
AU  - Yu, D.
AU  - Sheng, H.
AU  - Yu, J.
AU  - Cheng, X.
TI  - Distributed Truss Computation in Dynamic Graphs
PY  - 2023
T2  - Tsinghua Science and Technology
VL  - 28
IS  - 5
SP  - 873
EP  - 887
DO  - 10.26599/TST.2022.9010019
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85160788635&doi=10.26599%2fTST.2022.9010019&partnerID=40&md5=6a58fcf556e170c65c4aadca35fc09df
AD  - School of Computer Science and Technology, Shandong University, Qingdao, 266200, China
AD  - School of Computer Science and Engineering, Beijing Advanced Innovation Center for Big Data and Brain Computing, Beihang University, State Key Laboratory of Software Development Environment, Beijing, 100191, China
AD  - Big Data Institute, Qilu University of Technology (Shandong Academy of Sciences), Jinan, 250353, China
AB  - Large-scale graphs usually exhibit global sparsity with local cohesiveness, and mining the representative cohesive subgraphs is a fundamental problem in graph analysis. The k-truss is one of the most commonly studied cohesive subgraphs, in which each edge is formed in at least k-2 triangles. A critical issue in mining a k-truss lies in the computation of the trussness of each edge, which is the maximum value of k that an edge can be in a k-truss. Existing works mostly focus on truss computation in static graphs by sequential models. However, the graphs are constantly changing dynamically in the real world. We study distributed truss computation in dynamic graphs in this paper. In particular, we compute the trussness of edges based on the local nature of the k-truss in a synchronized node-centric distributed model. Iteratively decomposing the trussness of edges by relying only on local topological information is possible with the proposed distributed decomposition algorithm. Moreover, the distributed maintenance algorithm only needs to update a small amount of dynamic information to complete the computation. Extensive experiments have been conducted to show the scalability and efficiency of the proposed algorithm.  © 1996-2012 Tsinghua University Press.
KW  - cohesive subgraph
KW  - distributed algorithm
KW  - dynamic graph
KW  - graph mining
KW  - k-truss
KW  - Graphic methods
KW  - Iterative methods
KW  - Cohesive subgraph
KW  - Critical issues
KW  - Dynamic graph
KW  - Graph analysis
KW  - Graph mining
KW  - K-truss
KW  - Large-scales
KW  - Real-world
KW  - Sequential modeling
KW  - Subgraphs
KW  - Trusses
PB  - Tsinghua University
SN  - 10070214 (ISSN)
LA  - English
J2  - Tsinghua Sci. Tech.
M3  - Article
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 0; Correspondence Address: Q. Luo; School of Computer Science and Technology, Shandong University, Qingdao, 266200, China; email: luoqi2018@mail.sdu.edu.cn; CODEN: TSTEF
ER  -

TY  - CONF
AU  - Li, L.
AU  - Luo, S.
AU  - Zhao, Y.
AU  - Shan, C.
AU  - Wang, Z.
AU  - Qin, L.
TI  - COCLEP: Contrastive Learning-based Semi-Supervised Community Search
PY  - 2023
T2  - Proceedings - International Conference on Data Engineering
VL  - 2023-April
SP  - 2483
EP  - 2495
DO  - 10.1109/ICDE55515.2023.00191
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85165701535&doi=10.1109%2fICDE55515.2023.00191&partnerID=40&md5=a424d88422e61b579893ef34e84b526a
AD  - Northeastern University, China
AD  - Nanyang Technological University, Singapore
AD  - Microsoft Research Asia, China
AD  - Singapore Institute of Technology, Singapore
AD  - University of Technology Sydney, Sydney, Australia
AB  - Community search is a fundamental graph processing task that aims to find a community containing the given query node. Recent studies show that machine learning (ML)-based community search can return higher-quality communities than the classic methods such as k-core and k-truss. However, the state-of-the-art ML-based models require a large number of labeled data (i.e., nodes in ground-truth communities) for training that are difficult to obtain in real applications, and incur unaffordable memory costs or query time for large datasets. To address these issues, in this paper, we present the community search based on contrastive learning with partition, namely COCLEP, which only requires a few labels and is both memory and query efficient. In particular, given a small collection of query nodes and a few (e.g., three) corresponding ground-truth community nodes for each query, COCLEP learns a query-dependent model through the proposed graph neural network and the designed label-aware contrastive learner. The former perceives query node information, low-order neighborhood information, and high-order hypergraph structure information, the latter contrasts low-order intra-view, high-order intra-view, and low-high-order inter-view representations of the nodes. Further, we theoretically prove that COCLEP can be scalable to large datasets with the min-cut over the graph. To the best of our knowledge, this is the first attempt to adopt contrastive learning for community search task that is nontrivial. Extensive experiments on real-world datasets show that COCLEP simultaneously achieves better community effectiveness and comparably high query efficiency while using fewer labels compared with the-state-of-the-art approaches and is scalable for large datasets.  © 2023 IEEE.
KW  - Graph algorithms
KW  - Graph neural networks
KW  - Graph processing
KW  - Ground truth
KW  - High quality
KW  - High-order
KW  - Higher-order
KW  - Large datasets
KW  - Low order
KW  - Machine-learning
KW  - Query nodes
KW  - Semi-supervised
KW  - Large dataset
PB  - IEEE Computer Society
SN  - 10844627 (ISSN); 979-835032227-9 (ISBN)
LA  - English
J2  - Proc Int Conf Data Eng
M3  - Conference paper
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 0; Correspondence Address: Y. Zhao; Northeastern University, China; email: zhaoyuhai@mail.neu.edu.cn; S. Luo; Nanyang Technological University, Singapore; email: siqiang.luo@ntu.edu.sg
ER  -

TY  - CONF
AU  - McCulloh, I.
AU  - Savas, O.
TI  - K-Truss Network Community Detection
PY  - 2020
T2  - Proceedings of the 2020 IEEE/ACM International Conference on Advances in Social Networks Analysis and Mining, ASONAM 2020
C7  - 9381328
SP  - 590
EP  - 593
DO  - 10.1109/ASONAM49781.2020.9381328
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85103692838&doi=10.1109%2fASONAM49781.2020.9381328&partnerID=40&md5=fa5ef59ef17a77922c62fbf5c4f60252
AD  - Accenture, Washington, DC, United States
AB  - We review the k-Truss algorithm for community detection in networks. The k-Truss is an efficient clustering algorithm that holds advantageous properties for many network applications. In this paper, we compare the k-Truss performance against other, more well-known community detection algorithms. The k-Truss is uniformly more computationally efficient than the Louvain and Clauset-Newman-Moore algorithms in terms of speed and memory with comparable modularity. Potential applications are discussed. © 2020 IEEE.
KW  - Clustering
KW  - Community Detection
KW  - Louvain
KW  - Modularity
KW  - Newman
KW  - Truss
KW  - Population dynamics
KW  - Trusses
KW  - Community detection
KW  - Community detection algorithms
KW  - Computationally efficient
KW  - In networks
KW  - Moore algorithm
KW  - Network applications
KW  - Truss networks
KW  - Clustering algorithms
A2  - Atzmuller M.
A2  - Coscia M.
A2  - Missaoui R.
PB  - Institute of Electrical and Electronics Engineers Inc.
SN  - 978-172811056-1 (ISBN)
LA  - English
J2  - Proc. IEEE/ACM Int. Conf. Adv. Soc. Networks Anal. Min., ASONAM
M3  - Conference paper
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 2
ER  -

TY  - JOUR
AU  - Shin, K.
AU  - Eliassi-Rad, T.
AU  - Faloutsos, C.
TI  - Patterns and anomalies in k-cores of real-world graphs with applications
PY  - 2018
T2  - Knowledge and Information Systems
VL  - 54
IS  - 3
SP  - 677
EP  - 710
DO  - 10.1007/s10115-017-1077-6
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85025083406&doi=10.1007%2fs10115-017-1077-6&partnerID=40&md5=4eb88bbd6229784f3665f07a7114c1f3
AD  - Computer Science Department, Carnegie Mellon University, Pittsburgh, 15213, PA, United States
AD  - Network Science Institute, Northeastern University, Boston, MA, United States
AB  - How do the k-core structures of real-world graphs look like? What are the common patterns and the anomalies? How can we exploit them for applications? A k-core is the maximal subgraph in which all vertices have degree at least k. This concept has been applied to such diverse areas as hierarchical structure analysis, graph visualization, and graph clustering. Here, we explore pervasive patterns related to k-cores and emerging in graphs from diverse domains. Our discoveries are: (1) Mirror Pattern: coreness (i.e., maximum k such that each vertex belongs to the k-core) is strongly correlated with degree. (2) Core-Triangle Pattern: degeneracy (i.e., maximum k such that the k-core exists) obeys a 3-to-1 power-law with respect to the count of triangles. (3) Structured Core Pattern: degeneracy–cores are not cliques but have non-trivial structures such as core–periphery and communities. Our algorithmic contributions show the usefulness of these patterns. (1) Core-A, which measures the deviation from Mirror Pattern, successfully spots anomalies in real-world graphs, (2) Core-D, a single-pass streaming algorithm based on Core-Triangle Pattern, accurately estimates degeneracy up to 12× faster than its competitor. (3) Core-S, inspired by Structured Core Pattern, identifies influential spreaders up to 17× faster than its competitors with comparable accuracy. © 2017, Springer-Verlag London Ltd.
KW  - Anomaly detection
KW  - Degeneracy
KW  - Graph
KW  - Influential node
KW  - k-core
KW  - k-truss
KW  - Anomaly detection
KW  - Graph algorithms
KW  - Graph theory
KW  - Graphic methods
KW  - Hierarchical clustering
KW  - Mirrors
KW  - Degeneracy
KW  - Graph
KW  - Graph visualization
KW  - Hierarchical structures
KW  - Influential nodes
KW  - K-cores
KW  - Real-world graphs
KW  - Streaming algorithm
KW  - Graph structures
PB  - Springer London
SN  - 02191377 (ISSN)
LA  - English
J2  - Knowl. Inf. Systems. Syst.
M3  - Article
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 50; Correspondence Address: K. Shin; Computer Science Department, Carnegie Mellon University, Pittsburgh, 15213, United States; email: kijungs@cs.cmu.edu
ER  -

TY  - CONF
AU  - Bisson, M.
AU  - Fatica, M.
TI  - Static graph challenge on GPU
PY  - 2017
T2  - 2017 IEEE High Performance Extreme Computing Conference, HPEC 2017
C7  - 8091034
DO  - 10.1109/HPEC.2017.8091034
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85041191888&doi=10.1109%2fHPEC.2017.8091034&partnerID=40&md5=8c850fca45ba184bcadcbef63ad043fe
AD  - NVIDIA Corporation, Santa Clara, 95050, CA, United States
AB  - This paper presents the details of a CUDA implementation of the Subgraph Isomorphism Graph Challenge, a new effort aimed at driving progress in the graph analytics field. challenge consists of two graph analytics: Triangle counting and k-truss. We present our CUDA implementation of the graph triangle counting operation and of the k-truss subgraph decomposition. Both implementations share the same codebase taking advantage of a set intersection operation implemented via bitmaps. The analytics are implemented in four kernels optimized for different types of graphs. At runtime, lightweight heuristics are used to select the kernel to run based on the specific graph taken as input. © 2017 IEEE.
KW  - Trusses
KW  - Bit maps
KW  - Graph analytics
KW  - Runtimes
KW  - Set intersection
KW  - Subgraph isomorphism
KW  - Subgraphs
KW  - Two-graphs
KW  - Graphics processing unit
PB  - Institute of Electrical and Electronics Engineers Inc.
SN  - 978-153863472-1 (ISBN)
LA  - English
J2  - IEEE High Perform. Extrem Comput. Conf., HPEC
M3  - Conference paper
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 31
ER  -

TY  - CONF
AU  - Jiang, Y.
AU  - Huang, X.
AU  - Cheng, H.
AU  - Yu, J.X.
TI  - Vizcs: Online searching and visualizing communities in dynamic graphs
PY  - 2018
T2  - Proceedings - IEEE 34th International Conference on Data Engineering, ICDE 2018
C7  - 8509403
SP  - 1585
EP  - 1588
DO  - 10.1109/ICDE.2018.00182
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85057077849&doi=10.1109%2fICDE.2018.00182&partnerID=40&md5=52f8bb4da36b4af5eda0c0f14f11af04
AD  - Chinese University of Hong Kong, Hong Kong
AD  - Hong Kong Baptist University, Hong Kong
AB  - Given a query vertex in a graph, the task of community search is to find all meaningful communities containing the query vertex in an online manner. In this demonstration, we propose a novel query processing system for searching and visualizing communities in graphs, called VizCS. It exhibits three key innovative features. First, VizCS adopts several community models and supports community search on dynamic graphs where nodes/edges undergo frequently insertions/deletions. Second, VizCS offers a user-friendly visual interface to formulate queries and a real-Time response query processing engine. Last but not least, VizCS generates a community exploration wall by offering interactive community visualization, which facilitates users to in-depth understanding of the data. Furthermore, VizCS becomes a community search platform that can visualize and compare different community results by various state-of-The-Art algorithms and user-uploaded approaches. © 2018 IEEE.
KW  - COMMUNITY SEARCH
KW  - K-TRUSS
KW  - ONLINE SEARCH
KW  - Data visualization
KW  - Online searching
KW  - Query processing
KW  - Community model
KW  - COMMUNITY SEARCH
KW  - In-depth understanding
KW  - Query processing engine
KW  - Query processing system
KW  - Real time response
KW  - State-of-the-art algorithms
KW  - Visual Interface
KW  - Graph theory
PB  - Institute of Electrical and Electronics Engineers Inc.
SN  - 978-153865520-7 (ISBN)
LA  - English
J2  - Proc. - IEEE Int. Conf. Data Eng., ICDE
M3  - Conference paper
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 9
ER  -

TY  - CONF
AU  - Bisson, M.
AU  - Fatica, M.
TI  - Update on Static Graph Challenge on GPU
PY  - 2018
T2  - 2018 IEEE High Performance Extreme Computing Conference, HPEC 2018
C7  - 8547514
DO  - 10.1109/HPEC.2018.8547514
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85060080913&doi=10.1109%2fHPEC.2018.8547514&partnerID=40&md5=31f2fb60eff00df3594ccde441d8acbe
AD  - NVIDIA Corporation, Santa Clara, 95050, CA, United States
AB  - This paper presents an updated CUDA implementation of the triangle counting and k-truss decomposition, the two analytics of the Subgraph Isomorphism Graph Challenge. Algorithmic improvements and a new GPU architecture (Volta) resulted in an order of magnitude speedup. © 2018 IEEE.
KW  - Computer programming
KW  - Computer science
KW  - Subgraph isomorphism
KW  - Graphics processing unit
PB  - Institute of Electrical and Electronics Engineers Inc.
SN  - 978-153865989-2 (ISBN)
LA  - English
J2  - IEEE High Perform. Extrem. Comput. Conf., HPEC
M3  - Conference paper
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 24
ER  -

TY  - CONF
AU  - Du, Z.
AU  - Patchett, J.
AU  - Rodriguez, O.A.
AU  - Li, F.
AU  - Bader, D.A.
TI  - High-Performance Truss Analytics in Arkouda
PY  - 2022
T2  - Proceedings - 2022 IEEE 29th International Conference on High Performance Computing, Data, and Analytics, HiPC 2022
SP  - 105
EP  - 114
DO  - 10.1109/HiPC56025.2022.00026
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85158144691&doi=10.1109%2fHiPC56025.2022.00026&partnerID=40&md5=72805e664665a195a195d93b9a73dacf
AD  - New Jersey Institute of Technology, Department of Data Science, Newark, United States
AB  - In graph analytics, a truss is a cohesive subgraph based on the number of triangles supporting each edge. It is widely used for community detection applications such as social networks and security analysis, and the performance of truss analytics highly depends on its triangle counting method. This paper proposes a novel triangle counting kernel named Minimum Search (MS). Minimum Search can select two smaller adjacency lists out of three and uses fine-grained parallelism to improve the performance of triangle counting. Then, two basic algorithms, MS-based triangle counting, and MS-based support updating are developed. Based on the novel triangle counting kernel and the two basic algorithms above, three fundamental parallel truss analytics algorithms are designed and implemented to enable different kinds of graph truss analysis. These truss algorithms include an optimized K-Truss algorithm, a Max-Truss algorithm, and a Truss Decomposition algorithm. Moreover, all proposed algorithms have been implemented in the parallel language Chapel and integrated into an open-source framework, Arkouda. Through Arkouda, data scientists can efficiently con-duct graph analysis through an easy-to-use Python interface and handle large-scale graph data in powerful back-end computing resources. Experimental results show that the proposed methods can significantly improve the performance of truss analysis on real-world graphs compared with the existing and widely adopted list intersection-based method. The implemented code is publicly available from GitHub (https://github.com/Bears-R-Us/arkouda-njit).  © 2022 IEEE.
KW  - Graph Analytics
KW  - K-Truss
KW  - Parallel Algorithm
KW  - Triangle Counting
KW  - Community detection
KW  - Graph-analytic
KW  - K-truss
KW  - Number of triangles
KW  - Performance
KW  - Search-based
KW  - Social Network Analysis
KW  - Subgraphs
KW  - Triangle counting
KW  - Truss analysis
KW  - Trusses
PB  - Institute of Electrical and Electronics Engineers Inc.
SN  - 978-166549423-6 (ISBN)
LA  - English
J2  - Proc. - IEEE Int. Conf. High Perform. Comput., Data, Anal., HiPC
M3  - Conference paper
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 0; Correspondence Address: Z. Du; New Jersey Institute of Technology, Department of Data Science, Newark, United States; email: zhihui.du@njit.edu
ER  -

TY  - CONF
AU  - Gabert, K.
AU  - Pinar, A.
AU  - Çatalyürek, Ü.V.
TI  - A Unifying Framework to Identify Dense Subgraphs on Streams: Graph Nuclei to Hypergraph Cores
PY  - 2021
T2  - WSDM 2021 - Proceedings of the 14th ACM International Conference on Web Search and Data Mining
SP  - 689
EP  - 697
DO  - 10.1145/3437963.3441790
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85103069962&doi=10.1145%2f3437963.3441790&partnerID=40&md5=212d9308c299eeaeed68827099990e74
AD  - Georgia Institute of Technology, Atlanta, GA, United States
AD  - Sandia National Laboratories, Livermore, CA, United States
AB  - Finding dense regions of graphs is fundamental in graph mining. We focus on the computation of dense hierarchies and regions with graph nuclei - -a generalization of k-cores and trusses. Static computation of nuclei, namely through variants of 'peeling', are easy to understand and implement. However, many practically important graphs undergo continuous change. Dynamic algorithms, maintaining nucleus computations on dynamic graph streams, are nuanced and require significant effort to port between nuclei, e.g., from k-cores to trusses. We propose a unifying framework to maintain nuclei in dynamic graph streams. First, we show no dynamic algorithm can asymptotically beat re-computation, highlighting the need to experimentally understand variability. Next, we prove equivalence between k-cores on a special hypergraph and nuclei. Our algorithm splits the problem into maintaining the special hypergraph and maintaining k-cores on it. We implement our algorithm and experimentally demonstrate improvements up to 108 x over re-computation. We show algorithmic improvements on k-cores apply to trusses and outperform truss-specific implementations. © 2021 ACM.
KW  - dynamic algorithms
KW  - k-core
KW  - k-truss
KW  - nucleus decomposition
KW  - Graph algorithms
KW  - Information retrieval
KW  - Trusses
KW  - Websites
KW  - Dense region
KW  - Dense sub-graphs
KW  - Dynamic algorithm
KW  - Dynamic graph
KW  - Graph mining
KW  - Hypergraph
KW  - K-cores
KW  - ON dynamics
KW  - Data mining
PB  - Association for Computing Machinery, Inc
SN  - 978-145038297-7 (ISBN)
LA  - English
J2  - WSDM - Proc. ACM Int. Conf. Web Search Data Min.
M3  - Conference paper
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 5
ER  -

TY  - JOUR
AU  - Yang, Z.
AU  - Li, X.
AU  - Zhang, X.
AU  - Luo, W.
AU  - Li, K.
TI  - K-truss community most favorites query based on top-t
PY  - 2022
T2  - World Wide Web
VL  - 25
IS  - 2
SP  - 949
EP  - 969
DO  - 10.1007/s11280-021-00947-7
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85117604331&doi=10.1007%2fs11280-021-00947-7&partnerID=40&md5=64264806c1ee85d9aa06420da2a89577
AD  - College of Computer Engineering and Applied Mathematics, Changsha University, Hunan, Changsha, 410003, China
AD  - College of Information Science and Engineering, Hunan University, Hunan, Changsha, 410082, China
AB  - Top-t queries, which return t results with the highest scores according to the user’s preferences, have been extensively studied. However, many studies often fail to take into account the social relationships among users, and close social relationships usually guarantee the consistency of users’ preferences. Many real-world applications, such as community-based product recommendation services, require such queries. In this paper, we propose a new problem: the k-truss community most favorites querying problem based on user top-t favorites. Specifically, both the k-truss community and the corresponding most favorite object are retrieved. We first present the baseline solution to the problem. The main idea is to find the same object in the top-t favorites of the users in the social network and build the k-truss community for these users with the same preferences. Furthermore, we propose a reverse query algorithm to speed up the processing of the k − t CMF querying problem by filtering users in the social network. The experiment results on both real and synthetic datasets significantly demonstrate that the proposed solutions are efficient and scalable. © 2021, The Author(s), under exclusive licence to Springer Science+Business Media, LLC, part of Springer Nature.
KW  - K-truss community
KW  - Query processing
KW  - Top-t
KW  - Query processing
KW  - Social aspects
KW  - Community-based
KW  - K-truss community
KW  - Problem-based
KW  - Product recommendation
KW  - Query algorithms
KW  - Real-world
KW  - Social relationships
KW  - Speed up
KW  - Top-t
KW  - User's preferences
KW  - Trusses
PB  - Springer
SN  - 1386145X (ISSN)
LA  - English
J2  - World Wide Web
M3  - Article
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 5; Correspondence Address: X. Li; College of Information Science and Engineering, Hunan University, Changsha, Hunan, 410082, China; email: xxue@hnu.edu.cn
ER  -

TY  - CONF
AU  - Rodriguez, O.A.
AU  - Du, Z.
AU  - Patchett, J.
AU  - Li, F.
AU  - Bader, D.A.
TI  - Arachne: An Arkouda Package for Large-Scale Graph Analytics
PY  - 2022
T2  - 2022 IEEE High Performance Extreme Computing Conference, HPEC 2022
VL  - 2022-January
DO  - 10.1109/HPEC55821.2022.9991947
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85145019373&doi=10.1109%2fHPEC55821.2022.9991947&partnerID=40&md5=45e5aac3045286f8a97e8b2576f46728
AD  - New Jersey Institute of Technology, Department of Data Science, Newark, NJ, United States
AB  - Due to the emergence of massive real-world graphs, whose sizes may extend to terabytes, new tools must be developed to enable data scientists to handle such graphs efficiently. These graphs may include social networks, computer networks, and genomes. In this paper, we propose a novel graph package Arachne to make large-scale graph analytics more effortless and more efficient based on the open-source Arkouda framework, which has been developed to allow users to perform massively parallel computations on distributed data with an interface similar to NumPy. In this package, we developed a fundamental sparse graph data structure and several useful graph algorithms around our data structure to build a basic algorithmic library. Benchmarks and tools have also been developed to evaluate and demonstrate the provided graph algorithms. The graph algorithms we have implemented thus far include breadth-first search (BFS), connected components (CC), k-Truss (KT), Jaccard coefficients (JC), triangle counting (TC), and triangle centrality (TCE). Their corresponding experimental results based on realworld and synthetic graphs are presented. © 2022 IEEE.
KW  - graph analytics
KW  - large-scale data
KW  - open-source framework
KW  - parallel algorithm
KW  - Graph algorithms
KW  - Graphic methods
KW  - Graph algorithms
KW  - Graph-analytic
KW  - Large scale data
KW  - Large-scales
KW  - Massively parallels
KW  - Network computers
KW  - Open source frameworks
KW  - Open-source
KW  - Parallel Computation
KW  - Real-world graphs
KW  - Data structures
PB  - Institute of Electrical and Electronics Engineers Inc.
SN  - 978-166549786-2 (ISBN)
LA  - English
J2  - IEEE High Perform. Extrem. Comput. Conf., HPEC
M3  - Conference paper
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 1
ER  -

TY  - CONF
AU  - Sun, X.
AU  - Huang, X.
AU  - Sun, Z.
AU  - Jin, D.
TI  - Budget-constrained Truss Maximization over Large Graphs: A Component-based Approach
PY  - 2021
T2  - International Conference on Information and Knowledge Management, Proceedings
SP  - 1754
EP  - 1763
DO  - 10.1145/3459637.3482324
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85119169965&doi=10.1145%2f3459637.3482324&partnerID=40&md5=5679f5beefeabc6e3a86def3638c8f6f
AD  - Tianjin University, Tianjin, China
AD  - Hong Kong Baptist University, Hong Kong, Hong Kong
AB  - Cohesive substructure identification is one fundamental task of graph analytics. Recently, a useful problem of dense subgraph maximization has attracted significant attentions, which aims at enlarging a dense subgraph pattern using a few new edge insertions, e.g., k-core maximization. As a more cohesive subgraph of k-core, k-truss requires that each edge has at least k-2 triangles within this subgraph. However, the problem of k-truss maximization has not been studied yet. In this paper, we motivate and formulate a new problem of budget-constrained k-truss maximization. Given a budget of b edges and an integer k≥2, the problem is to find and insert b new edges into a graph G such that the resulted k-truss of G is maximized. We theoretically prove the NP-hardness of k-truss maximization problem. To efficiently tackle it, we analyze non-submodular property of k-truss newcomers function and develop non-conventional heuristic strategies for edge insertions. We first identify high-quality candidate edges with regard to (k-1)-light subgraphs and propose a greedy algorithm using per-edge insertion. Besides further improving the efficiency by pruning disqualified candidate edges, we finally develop a component-based dynamic programming algorithm for enlarging k-truss mostly, which makes a balance of budget assignment and inserts multiple edges simultaneously into all (k-1)-light components. Extensive experiments on nine real-world graphs demonstrate the efficiency and effectiveness of our proposed methods. © 2021 ACM.
KW  - edge insertions
KW  - k-truss
KW  - subgraph maximization
KW  - Budget control
KW  - Dynamic programming
KW  - Efficiency
KW  - Component based approach
KW  - Dense sub-graphs
KW  - Edge insertion
KW  - Graph G
KW  - Graph-analytic
KW  - K-cores
KW  - K-truss
KW  - Large graphs
KW  - Subgraph maximization
KW  - Subgraphs
KW  - Trusses
PB  - Association for Computing Machinery
SN  - 978-145038446-9 (ISBN)
LA  - English
J2  - Int Conf Inf Knowledge Manage
M3  - Conference paper
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 4
ER  -

TY  - CONF
AU  - SarlyA¼ce, A.E.
TI  - Motif-driven dense subgraph discovery in directed and labeled networks
PY  - 2021
T2  - The Web Conference 2021 - Proceedings of the World Wide Web Conference, WWW 2021
SP  - 379
EP  - 390
DO  - 10.1145/3442381.3450055
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85107950130&doi=10.1145%2f3442381.3450055&partnerID=40&md5=1e681f800188f45954e7d3e0e0dca07e
AD  - University at Buffalo, United States
AB  - Dense regions in networks are an indicator of interesting and unusual information. However, most existing methods only consider simple, undirected, unweighted networks. Complex networks in the real-world often have rich information though: edges are asymmetrical and nodes/edges have categorical and numerical attributes. Finding dense subgraphs in such networks in accordance with this rich information is an important problem with many applications. Furthermore, most existing algorithms ignore the higher-order relationships (i.e., motifs) among the nodes. Motifs are shown to be helpful for dense subgraph discovery but their wide spectrum in heterogeneous networks makes it challenging to utilize them effectively. In this work, we propose quark decomposition framework to locate dense subgraphs that are rich with a given motif. We focus on networks with directed edges and categorical attributes on nodes/edges. For a given motif, our framework builds subgraphs, called quarks, in varying quality and with hierarchical relations. Our framework is versatile, efficient, and extendible. We discuss the limitations and practical instantiations of our framework as well as the role confusion problem that needs to be considered in directed networks. We give an extensive evaluation of our framework in directed, signed-directed, and node-labeled networks. We consider various motifs and evaluate the quark decomposition using several real-world networks. Results show that quark decomposition performs better than the state-of-the-art techniques. Our framework is also practical and scalable to networks with up to 101M edges.  Â© 2021 ACM.
KW  - Dense subgraph discovery
KW  - Graph motif
KW  - K-core
KW  - K-truss
KW  - Complex networks
KW  - Heterogeneous networks
KW  - World Wide Web
KW  - Categorical attributes
KW  - Dense sub-graphs
KW  - Directed network
KW  - Hierarchical relations
KW  - Numerical attributes
KW  - Real-world networks
KW  - Role confusions
KW  - State-of-the-art techniques
KW  - Elementary particles
PB  - Association for Computing Machinery, Inc
SN  - 978-145038312-7 (ISBN)
LA  - English
J2  - Web Conf. - Proc. World Wide Web Conf., WWW
M3  - Conference paper
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 4; Correspondence Address: A.E. SarlyA¼ce; University at Buffalo, United States; email: erdem@buffalo.edu
ER  -

TY  - JOUR
AU  - Conte, A.
AU  - De Sensi, D.
AU  - Grossi, R.
AU  - Marino, A.
AU  - Versari, L.
TI  - Truly scalable K-Truss and max-truss algorithms for community detection in graphs
PY  - 2020
T2  - IEEE Access
VL  - 8
C7  - 9146824
SP  - 139096
EP  - 139109
DO  - 10.1109/ACCESS.2020.3011667
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85090383001&doi=10.1109%2fACCESS.2020.3011667&partnerID=40&md5=e16c4e01b40bde1c40ca40abf17aefb3
AD  - Dipartimento di Informatica, University of Pisa, Pisa, 56126, Italy
AD  - Dipartimento di Statistica, Informatica, Applicazioni, University of Florence, Florence, 50121, Italy
AD  - Dipartimento di Informatica, Google Research, Zurich, 8002, Switzerland
AB  - The notion of k-truss has been introduced a decade ago in social network analysis and security for community detection, as a form of cohesive subgraphs less stringent than a clique (set of pairwise linked nodes), and more selective than a k-core (induced subgraph with minimum degree k). A k-truss is an inclusion-maximal subgraph Hin which each edge belongs to at least k-2triangles inside H. The truss decomposition establishes, for each edge e, the maximum kfor which ebelongs to a k-truss. Analogously to the largest clique and to the maximum k-core, the strongest community for k-truss is the max-truss, which corresponds to the k-truss having the maximum k. Even though the computation of truss decomposition and of the max-truss takes polynomial time, on a large scale, it suffers from handling a potentially cubic number of wedges. In this paper, we provide a new algorithm FMT, which advances the state of the art on different sides: lower execution time, lower memory usage, and no need for expensive hardware. We compare FMT experimentally with the most recent state-of-the-art algorithms on a set of large real-world and synthetic networks with over a billion edges. The massive improvement allows FMT to compute the max-truss of networks of tens of billions of edges on a single standard server machine. © 2013 IEEE.
KW  - Community detection
KW  - graph algorithms
KW  - in-memory computation
KW  - k-trusses
KW  - social network analysis
KW  - truss decomposition
KW  - Graph algorithms
KW  - Polynomial approximation
KW  - Population dynamics
KW  - Community detection
KW  - Expensive hardware
KW  - Induced subgraphs
KW  - Minimum degree
KW  - Polynomial-time
KW  - Server machines
KW  - State of the art
KW  - Synthetic networks
KW  - Trusses
PB  - Institute of Electrical and Electronics Engineers Inc.
SN  - 21693536 (ISSN)
LA  - English
J2  - IEEE Access
M3  - Article
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 6; Correspondence Address: A. Conte; Dipartimento di Informatica, University of Pisa, Pisa, 56126, Italy; email: conte@di.unipi.it
ER  -

TY  - JOUR
AU  - Smani, G.I.
AU  - Megalooikonomou, V.
TI  - Maximization influence in dynamic social networks and graphs
PY  - 2022
T2  - Array
VL  - 15
C7  - 100226
DO  - 10.1016/j.array.2022.100226
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85134353646&doi=10.1016%2fj.array.2022.100226&partnerID=40&md5=244bdbfa3c7a8c8520ce231adf73b20d
AD  - Department of Computer Engineering and Informatics, University of Patras, 26504, Greece
AB  - Social influence and influence diffusion have been extensively studied in social networks. However, most existing works on influence diffusion focus on static networks. In this paper, we study the problem of maximizing influence diffusion in dynamic social networks, i.e. networks that change over time. We propose the following algorithms under the Linear Threshold (LT) and Independent Cascade (IC) models: (a) the DM algorithm which is an extension of MATI algorithm and solves the Influence Maximization (IM) problem in dynamic networks, (b) the DM-C algorithm which is a latter version of DM and solves the IM problem using k-core decomposition and the core number information, (c) the DM-T algorithm which is another version of DM, that uses K-truss decomposition and the truss number information in order to solve the IM problem. Experimental results show that our proposed algorithms increase diffusion performance by 2 times compared with several state of the art algorithms and achieve comparable results in diffusion with the Greedy algorithm. Also, the proposed algorithms are 8.5 times faster in computational time compared with previous methods. © 2022
KW  - Diffusion
KW  - Dynamic social networks
KW  - Graphs
KW  - Maximization influence
KW  - Social influence
KW  - Economic and social effects
KW  - Trusses
KW  - Dynamic social networks
KW  - Graph
KW  - Influence maximizations
KW  - Maximization influence
KW  - Maximization problem
KW  - Networks and graphs
KW  - Number information
KW  - Social graphs
KW  - Social influence
KW  - Static networks
KW  - Diffusion
PB  - Elsevier B.V.
SN  - 25900056 (ISSN)
LA  - English
J2  - Array.
M3  - Article
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 0; Correspondence Address: G.I. Smani; Department of Computer Engineering and Informatics, University of Patras, 26504, Greece; email: gsmani@upatras.gr
ER  -

TY  - CONF
AU  - Zheng, X.
AU  - Liu, Q.
AU  - Gupta, A.
TI  - Scalable community detection over geo-social network
PY  - 2019
T2  - Proceedings of the 3rd ACM SIGSPATIAL International Workshop on Analytics for Local Events and News, LENS 2019
C7  - a2
DO  - 10.1145/3356473.3365189
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85076757650&doi=10.1145%2f3356473.3365189&partnerID=40&md5=db388fd945a515699df341ff47c60ac6
AD  - San Diego Supercomputer Center, University of California San Diego, San Diego, CA, United States
AD  - Hong Kong University of Science and Technology, Hong Kong, Hong Kong
AB  - We consider a community finding problem called Co-located Community Detection (CCD) over geo-social networks, which retrieves communities that satisfy both high structural tightness and spatial closeness constraints. To provide a solution that benefits from existing studies on community detection, we decouple the spatial constraint from graph structural constraint and propose a uniform CCD framework which gives users the freedom to choose customized measurements for social cohesiveness (e.g., k-core or k-Truss). For the spatial closeness constraint, we apply the bounded radius spatial constraint and develop an exact algorithm together with effective pruning rules. To further improve the efficiency and make our framework scale to a very large scale of data, we propose a near-linear time approximation algorithm with a constant approximation ratio (2). We conduct extensive experiments on both synthetic and real-world datasets to demonstrate the efficiency and effectiveness of our algorithms. © Proceedings of the 3rd ACM SIGSPATIAL International Workshop on Analytics for Local Events and News, LENS 2019. All rights reserved.
KW  - Big Spatial Data
KW  - Co-located Community Detection
KW  - Computational Geometry
KW  - Geo-Social Network
KW  - Computational geometry
KW  - Efficiency
KW  - Population dynamics
KW  - Approximation ratios
KW  - Community detection
KW  - Geo-social networks
KW  - Near-linear time
KW  - Real-world datasets
KW  - Spatial constraints
KW  - Spatial data
KW  - Structural constraints
KW  - Approximation algorithms
A2  - Chen H.
A2  - Iuricich F.
A2  - Magdy A.
PB  - Association for Computing Machinery, Inc
SN  - 978-145036958-9 (ISBN)
LA  - English
J2  - Proc. ACM SIGSPATIAL Int. Workshop Anal. Local Events News, LENS
M3  - Conference paper
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 0
ER  -

TY  - CONF
AU  - Mou, Z.
AU  - Xiao, N.
AU  - Chen, Z.
TI  - A NUMA-Aware Parallel Truss Decomposition Algorithm for Large Scale Graphs
PY  - 2022
T2  - Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)
VL  - 13156 LNCS
SP  - 193
EP  - 212
DO  - 10.1007/978-3-030-95388-1_13
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85126244639&doi=10.1007%2f978-3-030-95388-1_13&partnerID=40&md5=8c33f3edc2e74d0b819d0a80615e6a71
AD  - School of Computer Science and Engineering, Sun Yat-sen University, Guangzhou, China
AB  - Truss decomposition algorithm is to decompose a graph into a hierarchical subgraph structure. A k-truss (k≥ 2 ) is a subgraph that each edge is in at least k- 2 triangles. The existing algorithm is to first compute the number of triangles for each edge, and then iteratively increase k to peel off the edges that are not in the (k+ 1 )-truss. Due to the scale of the data and the intensity of computations, truss decomposition algorithm on the billion-side graph may take more than hours on a commodity server. In addition, today, more servers adopt NUMA architecture, which also affects the scalability of the algorithm. Therefore, we propose a NUMA-aware shared-memory parallel algorithm to accelerate the truss decomposition for NUMA systems by (1) computing different levels of k-truss between each NUMA nodes (2) dividing the range of k heuristically to ensure load balance (3) optimizing data structure and triangle counting method to reduce remote memory access, data contention and data skew. Our experiments show that on real-world datasets our OpenMP implementation can accelerate truss decomposition effectively on NUMA systems. © 2022, Springer Nature Switzerland AG.
KW  - Graph analysis
KW  - Multithread
KW  - NUMA
KW  - Triangle counting
KW  - Truss decomposition
KW  - Application programming interfaces (API)
KW  - Iterative methods
KW  - Memory architecture
KW  - Decomposition algorithm
KW  - Graph analysis
KW  - Large-scales
KW  - Multi-thread
KW  - NUMA
KW  - NUMA systems
KW  - Number of triangles
KW  - Subgraphs
KW  - Triangle counting
KW  - Truss decomposition
KW  - Trusses
A2  - Lai Y.
A2  - Wang T.
A2  - Jiang M.
A2  - Xu G.
A2  - Liang W.
A2  - Castiglione A.
PB  - Springer Science and Business Media Deutschland GmbH
SN  - 03029743 (ISSN); 978-303095387-4 (ISBN)
LA  - English
J2  - Lect. Notes Comput. Sci.
M3  - Conference paper
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 0; Correspondence Address: Z. Chen; School of Computer Science and Engineering, Sun Yat-sen University, Guangzhou, China; email: chenzhg29@mail.sysu.edu.cn
ER  -

TY  - CONF
AU  - Mailthody, V.S.
AU  - Date, K.
AU  - Qureshi, Z.
AU  - Pearson, C.
AU  - Nagi, R.
AU  - Xiong, J.
AU  - Hwu, W.-M.
TI  - Collaborative (CPU + GPU) Algorithms for Triangle Counting and Truss Decomposition
PY  - 2018
T2  - 2018 IEEE High Performance Extreme Computing Conference, HPEC 2018
C7  - 8547517
DO  - 10.1109/HPEC.2018.8547517
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85060097076&doi=10.1109%2fHPEC.2018.8547517&partnerID=40&md5=bc5bf4735a61770ed07d8de3b723bdbe
AD  - ECE, University of Illinois at Urbana-Champaign, Urbana, 61801, IL, United States
AD  - CS, University of Illinois at Urbana-Champaign, Urbana, 61801, IL, United States
AD  - ISE, University of Illinois at Urbana-Champaign, Urbana, 61801, IL, United States
AD  - Cognitive Computing Systems Research, IBM Thomas J. Watson Research Center, Yorktown Heights, 10598, NY, United States
AB  - In this paper, we present an update to our previous submission from Graph Challenge 2017. This work describes and evaluates new software algorithm optimizations undertaken for our 2018 year submission on Collaborative CPU+GPU Algorithms for Triangle Counting and Truss Decomposition. First, we describe four major optimizations for the triangle counting which improved performance by up to 117x over our prior submission. Additionally, we show that our triangle-counting algorithm is on average 151.7x faster than NVIDIA's NVGraph library (max 476x) for SNAP datasets. Second, we propose a novel parallel k-truss decomposition algorithm that is time-efficient and is up to 13.9x faster than our previous submission. Third, we evaluate the effect of generational hardware improvements between the IBM 'Minsky' (POWER8, P100, NVLink 1.0) and 'Newell' (POWER9, V100, NVLink 2.0) platforms. Lastly, the software optimizations presented in this work and the hardware improvements in the Newell platform enable analytics and discovery on large graphs with millions of nodes and billions of edges in less than a minute. In sum, the new algorithmic implementations are significantly faster and can handle much larger 'big' graphs. © 2018 IEEE.
KW  - Collaborative graph algorithms
KW  - CUDA
KW  - GPU
KW  - Triangle counting
KW  - Truss decomposition
KW  - Graphics processing unit
KW  - CUDA
KW  - Decomposition algorithm
KW  - GPU algorithms
KW  - Graph algorithms
KW  - Software algorithms
KW  - Software optimization
KW  - Time-efficient
KW  - Triangle counting
KW  - Trusses
PB  - Institute of Electrical and Electronics Engineers Inc.
SN  - 978-153865989-2 (ISBN)
LA  - English
J2  - IEEE High Perform. Extrem. Comput. Conf., HPEC
M3  - Conference paper
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 18
ER  -

TY  - JOUR
AU  - Yang, L.
AU  - Song, Y.-R.
AU  - Li, Y.-W.
TI  - Network structure optimization algorithm for information propagation considering edge clustering and diffusion characteristics
ST  - 考虑边聚类与扩散特性的信息传播网络结构优化算法
PY  - 2018
T2  - Wuli Xuebao/Acta Physica Sinica
VL  - 67
IS  - 19
C7  - 190502
DO  - 10.7498/aps.67.20180395
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85059745584&doi=10.7498%2faps.67.20180395&partnerID=40&md5=9608ee078aa9b1398f506740a0566e1a
AD  - School of Automation, Nanjing University of Posts and Telecommunications, Nanjing, 210023, China
AD  - Jiangsu Engineering Laboratory for IOT and Intelligent Robotics, Nanjing, 210023, China
AD  - School of Computer, Nanjing University of Posts and Telecommunications, Nanjing, 210023, China
AB  - Optimizing network structure to promote information propagation has been a key issue in the research field of complex network, and both clustering and diffusion characteristics of edges in a network play a very important role in information propagation. K-truss decomposition is an algorithm for identifying the most influential nodes in the network. We find that K-truss decomposition only considers edge clustering characteristics, without considering the diffusion characteristics, so it is easily affected by the local clustering structure in the network, such as core-like groups. There are mutually closely connected the core-like groups in the network, but the correlation between the core-like groups and the other parts of the network is less, so the information is easy to spread in the core-like groups, but not in the other parts of the network, nor over the whole network. For the reason, we propose an index to measure the edge diffusion characteristics in a network, and it is found that the diffusion characteristics of some edges in the periphery of the network are relatively high, but the clustering characteristics of these edges are relatively low, so they are not beneficial for rapid information propagation. In this paper, by considering the relationship between the clustering characteristics and diffusion characteristics of the edges, we propose a novel network structure optimization algorithm for information propagation. By measuring the comprehensive ability strength of the clustering characteristics and the diffusion characteristics of the edges, we can filter out the edges whose comprehensive ability is poor in the network, then determine whether the edges should be optimized according to the relative relationship between the clustering characteristics and the diffusion characteristics of the edges. To prove the effectiveness of the proposed algorithm, it is carried out to optimize the structures of four real networks, and verify the effective range of information propagation before and after the optimization of network structure from the classical independent cascade model. The results show that the network topology optimized by the proposed algorithm can effectively increase the range of information propagation. Moreover, the number of leaf nodes in the optimized network is reduced, and the clustering coefficient and the average path length are also reduced. © 2018 Chinese Physical Society.
KW  - Clustering characteristics of edges
KW  - Diffusion characteristics of edges
KW  - Information propagation
KW  - Optimization of network structure
KW  - Complex networks
KW  - Diffusion
KW  - Information dissemination
KW  - Shape optimization
KW  - Structural optimization
KW  - Trusses
KW  - Average path length
KW  - Clustering characteristics of edges
KW  - Clustering coefficient
KW  - Diffusion characteristics
KW  - Influential nodes
KW  - Information propagation
KW  - Network structures
KW  - Optimization of network
KW  - Clustering algorithms
PB  - Institute of Physics, Chinese Academy of Sciences
SN  - 10003290 (ISSN)
LA  - Chinese
J2  - Wuli Xuebao
M3  - Article
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 1; Correspondence Address: Y.-R. Song; School of Automation, Nanjing University of Posts and Telecommunications, Nanjing, 210023, China; email: songyr@njupt.edu.cn; CODEN: WLHPA
ER  -

TY  - JOUR
AU  - Burkhardt, P.
AU  - Faber, V.
AU  - Harris, D.G.
TI  - Bounds and algorithms for graph trusses
PY  - 2020
T2  - Journal of Graph Algorithms and Applications
VL  - 24
IS  - 3
SP  - 191
EP  - 214
DO  - 10.7155/jgaa.00527
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85083746525&doi=10.7155%2fjgaa.00527&partnerID=40&md5=5c56153fdc05f44671d8fd8dc6815a15
AD  - U.S. National Security Agency, Ft. Meade, 20755, MD, United States
AD  - IDA/Center for Computing Sciences, Bowie, 20707, MD, United States
AD  - Department of Computer Science, University of Maryland, College Park, 20742, MD, United States
AB  - The k-truss, introduced by Cohen (2005), is a graph where every edge is incident to at least k triangles. This is a relaxation of the clique. It has proved to be a useful tool in identifying cohesive subnetworks in a variety of real-world graphs. Despite its simplicity and its utility, the combinatorial and algorithmic aspects of trusses have not been thoroughly explored. We provide nearly-tight bounds on the edge counts of k-trusses. We also give two improved algorithms for finding trusses in large-scale graphs. First, we present a simplified and faster algorithm, based on approach discussed in Wang & Cheng (2012). Second, we present a theoretical algorithm based on fast matrix multiplication; this converts a triangle-generation algorithm of Björklund et al. (2014) into a dynamic data structure. © 2020, Brown University. All rights reserved.
KW  - Algorithmic aspects
KW  - Combinatorial aspect
KW  - Fast algorithms
KW  - Improved * algorithm
KW  - Large-scales
KW  - Real-world graphs
KW  - Simplified algorithms
KW  - Subnetworks
KW  - Theoretical algorithms
KW  - Tight bound
KW  - Trusses
PB  - Brown University
SN  - 15261719 (ISSN)
LA  - English
J2  - J. Graph Algorithms and Appl.
M3  - Article
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 0
ER  -

TY  - CHAP
AU  - Fang, Y.
AU  - Wang, K.
AU  - Lin, X.
AU  - Zhang, W.
TI  - Preliminaries
PY  - 2022
T2  - SpringerBriefs in Computer Science
SP  - 7
EP  - 9
DO  - 10.1007/978-3-030-97568-5_2
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85130090979&doi=10.1007%2f978-3-030-97568-5_2&partnerID=40&md5=93312d2903a1f46322fd1964ba8a6304
AD  - School of Data Science, The Chinese University of Hong Kong, Shenzhen, Guangdong, Shenzhen, China
AD  - Antai College of Economics & Management, Shanghai Jiao Tong University, Shanghai, China
AD  - Computer Science and Engineering, The University of New South Wales, Sydney, NSW, Australia
AB  - To formally introduce the research problem and solutions of CSS over HINs, people often follow some commonly-used notations and models to facilitate the presentation. Before reviewing the specific models and solutions in the following chapters, in this chapter we first formally introduce the data models of HINs and bipartite networks, and then review several typical classic CSMs on homogeneous networks, including k-core, k-truss, k-clique, k-edge-connectivity component (k-ECC), and the densest subgraphs. © 2022, The Author(s), under exclusive license to Springer Nature Switzerland AG.
KW  - Computer programming
KW  - Bipartite network
KW  - Connectivity components
KW  - Dense sub-graphs
KW  - Edge connectivity
KW  - Homogeneous network
KW  - K-clique
KW  - K-cores
KW  - Problems and Solutions
KW  - Research problems
KW  - Artificial intelligence
PB  - Springer
SN  - 21915768 (ISSN)
LA  - English
J2  - SpringerBriefs Comp. Sci.
M3  - Book chapter
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 0
ER  -

TY  - CONF
AU  - Fox, J.
AU  - Green, O.
AU  - Gabert, K.
AU  - An, X.
AU  - Bader, D.A.
TI  - Fast and Adaptive List Intersections on the GPU
PY  - 2018
T2  - 2018 IEEE High Performance Extreme Computing Conference, HPEC 2018
C7  - 8547759
DO  - 10.1109/HPEC.2018.8547759
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85060113609&doi=10.1109%2fHPEC.2018.8547759&partnerID=40&md5=802732bc7d72ad9b550dfa2296ccea11
AD  - Computational Science and Engineering, Georgia Institute of Technology, United States
AB  - List intersections are ubiquitous and can be found in a wide range of applications, including triangle counting and finding the maximal k-truss, both of which are part of the HPEC Static Graph Challenge. For many graph based problems it is necessary to find intersections for a very large number of lists-these lists tend to vary greatly in size and are difficult to efficiently load-balance. Numerous parallel algorithms on list intersections for triangle counting have been proposed, but load-balancing decisions are typically made at a global level. In this paper we present an efficient and adaptive approach to load-balancing at a finer granularity. Our approach assigns a different number of threads for different intersections in order to effectively utilize the resources of the GPU. We show the applicability of our load-balancing method to two different intersection methods, one search-based and one merge-based. Our algorithm outperforms several recent triangle counting algorithms, including recent HPEC Graph Challenge Champions. © 2018 IEEE.
KW  - Graphic methods
KW  - Adaptive approach
KW  - Graph-based
KW  - Intersection method
KW  - Load balance
KW  - Load balancing methods
KW  - Maximal k
KW  - Number of threads
KW  - Search-based
KW  - Graphics processing unit
PB  - Institute of Electrical and Electronics Engineers Inc.
SN  - 978-153865989-2 (ISBN)
LA  - English
J2  - IEEE High Perform. Extrem. Comput. Conf., HPEC
M3  - Conference paper
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 27
ER  -

TY  - CONF
AU  - Green, O.
AU  - Fox, J.
AU  - Kim, E.
AU  - Busato, F.
AU  - Bombieri, N.
AU  - Lakhotia, K.
AU  - Zhou, S.
AU  - Singapura, S.
AU  - Zeng, H.
AU  - Kannan, R.
AU  - Prasanna, V.
AU  - Bader, D.
TI  - Quickly finding a truss in a haystack
PY  - 2017
T2  - 2017 IEEE High Performance Extreme Computing Conference, HPEC 2017
C7  - 8091038
DO  - 10.1109/HPEC.2017.8091038
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85041212490&doi=10.1109%2fHPEC.2017.8091038&partnerID=40&md5=1443a637c69600cf7e51406cfcd92cbc
AD  - Computational Science and Engineering, Georgia Institute of Technology, United States
AD  - Department of Computer Science, University of Verona, United States
AD  - Department of Electrical Engineering, University of Southern, CA, United States
AB  - The k-truss of a graph is a subgraph such that each edge is tightly connected to the remaining elements in the k-truss. The k-truss of a graph can also represent an important community in the graph. Finding the k-truss of a graph can be done in a polynomial amount of time, in contrast finding other subgraphs such as cliques. While there are numerous formulations and algorithms for finding the maximal k-truss of a graph, many of these tend to be computationally expensive and do not scale well. Many algorithms are iterative and use static graph triangle counting in each iteration of the graph. In this work we present a novel algorithm for finding both the k-truss of the graph (for a given k), as well as the maximal k-truss using a dynamic graph formulation. Our algorithm has two main benefits. 1) Unlike many algorithms that rerun the static graph triangle counting after the removal of non-conforming edges, we use a new dynamic graph formulation that only requires updating the edges affected by the removal. As our updates are local, we only do a fraction of the work compared to the other algorithms. 2) Our algorithm is extremely scalable and is able to concurrently detect deleted triangles in contrast to past sequential approaches. While our algorithm is architecture independent, we show a CUDA based implementation for NVIDIA GPUs. In numerous instances, our new algorithm is anywhere from 100X-10000X faster than the Graph Challenge benchmark. Furthermore, our algorithm shows significant speedups, in some cases over 70X, over a recently developed sequential and highly optimized algorithm. © 2017 IEEE.
KW  - Program processors
KW  - Trusses
KW  - Dynamic graph
KW  - IS architecture
KW  - Maximal k
KW  - Novel algorithm
KW  - Optimized algorithms
KW  - Sequential approach
KW  - Subgraphs
KW  - Iterative methods
PB  - Institute of Electrical and Electronics Engineers Inc.
SN  - 978-153863472-1 (ISBN)
LA  - English
J2  - IEEE High Perform. Extrem Comput. Conf., HPEC
M3  - Conference paper
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 19
ER  -

TY  - JOUR
AU  - Zheng, Z.
AU  - Ye, F.
AU  - Li, R.-H.
AU  - Ling, G.
AU  - Jin, T.
TI  - Finding weighted k-truss communities in large networks
PY  - 2017
T2  - Information Sciences
VL  - 417
SP  - 344
EP  - 360
DO  - 10.1016/j.ins.2017.07.012
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85025688159&doi=10.1016%2fj.ins.2017.07.012&partnerID=40&md5=7c3deacc7bbb81f6ef12caece9283977
AD  - School of Data and Computer Science, Sun Yat-sen University, Guangzhou, China
AD  - Key Laboratory of Machine Intelligence and Advanced Computing (Sun Yat-sen University), Ministry of Education, China
AD  - Data Center of WeChat Group, Tencent Technology, Shenzhen, China
AD  - School of Foreign Languages, Sun Yat-sen University, Guangzhou, China
AB  - Community search is a fundamental problem in social network mining, which has attracted much attention in recent years. However, most previous community models only consider the link structure and ignore the link weights of the community, which may miss some useful properties of the community. In this paper, we propose a novel community model, called weighted k-truss community, based on the concept of k-truss. The proposed model takes the edge weight into consideration, thus can better characterize the properties of a community. Based on the new community model, we design a BFS-based online search algorithm to find the top-r weighted k-truss communities in O(m1.5) time, where m denotes the number of edges in a network. To speed up the online search algorithm, we devise a space-efficient index structure, namely KEP-Index, to support efficient community search. We propose two algorithms to construct the index structure in an offline manner. Based on KEP-Index, the time complexity for finding the top-r weighted k-truss communities is linear to the size of these communities, thus it is optimal. We conduct extensive experiments on six large real-world networks, as well as a case study over a co-authorship network. The results demonstrate the efficiency and effectiveness of the proposed community model and algorithms. © 2017 Elsevier Inc.
KW  - Community search
KW  - Weighted k-truss community
KW  - Weighted networks
KW  - Learning algorithms
KW  - Online searching
KW  - Trusses
KW  - Co-authorship networks
KW  - Community search
KW  - Real-world networks
KW  - Search Algorithms
KW  - Social network minings
KW  - Useful properties
KW  - Weighted k-truss community
KW  - Weighted networks
KW  - Complex networks
PB  - Elsevier Inc.
SN  - 00200255 (ISSN)
LA  - English
J2  - Inf Sci
M3  - Article
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 54; Correspondence Address: R.-H. Li; School of Data and Computer Science, Sun Yat-sen University, Guangzhou, China; email: lironghuascut@gmail.com; CODEN: ISIJB
ER  -

TY  - CONF
AU  - Low, T.M.
AU  - Spampinato, D.G.
AU  - Kutuluru, A.
AU  - Sridhar, U.
AU  - Popovici, D.T.
AU  - Franchetti, F.
AU  - McMillan, S.
TI  - Linear Algebraic Formulation of Edge-centric K-truss Algorithms with Adjacency Matrices
PY  - 2018
T2  - 2018 IEEE High Performance Extreme Computing Conference, HPEC 2018
C7  - 8547718
DO  - 10.1109/HPEC.2018.8547718
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85060087688&doi=10.1109%2fHPEC.2018.8547718&partnerID=40&md5=0f4457691dfca1f511fd8a8d834ae944
AD  - Electrical and Computer Engineering Department, Carnegie Mellon University, Pittsburgh, PA, United States
AD  - Software Engineering Institute, Carnegie Mellon University, Pittsburgh, PA, United States
AB  - Edge-centric algorithms using the linear algebraic approach typically require the use of both the incidence and adjacency matrices. Due to the two different data formats, the information contained in the graph is replicated, thereby incurring both time and space for the replication. Using K-truss as an example, we demonstrate that an edge-centric K-truss algorithm, the Eager K-truss algorithm, can be identified from a linear algebraic formulation using only the adjacency matrix. In addition, we demonstrate that our implementation of the linear algebraic edge-centric K-truss algorithm out-performs a Galois' K-truss implementation by an average (over 53 graphs) of more than 13 times, and up to 71 times. © 2018 IEEE.
KW  - Edge-centric Algorithms
KW  - Graph Algorithms
KW  - High Performance
KW  - K-truss
KW  - Linear Algebra
KW  - Linear algebra
KW  - Trusses
KW  - Adjacency matrices
KW  - Graph algorithms
KW  - High Performance
KW  - Linear-algebraic
KW  - Matrix algebra
PB  - Institute of Electrical and Electronics Engineers Inc.
SN  - 978-153865989-2 (ISBN)
LA  - English
J2  - IEEE High Perform. Extrem. Comput. Conf., HPEC
M3  - Conference paper
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 12
ER  -

TY  - CONF
AU  - Chen, F.
AU  - Yang, Y.
TI  - Attributed community search with forbidden nodes
PY  - 2019
T2  - Proceedings - 2019 4th International Conference on Mechanical, Control and Computer Engineering, ICMCCE 2019
C7  - 8969325
SP  - 760
EP  - 764
DO  - 10.1109/ICMCCE48743.2019.00175
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85079285684&doi=10.1109%2fICMCCE48743.2019.00175&partnerID=40&md5=73807dbfc184a287dc5250051507dc10
AD  - School of Computer Science and Technology, Heilongjiang University, Heilongjiang, China
AB  - The study of community search problems in large graphs has attracted more and more attention: given a query node q, it is required to return communities containing the query node. In recent years, some researchers have considered keyword information to make the attributed community search is gradually emerging, which is widely used in social network marketing and setting up of social events. However, some problems require that the query communities cannot contain certain forbidden nodes, which has not received any attention in previous work. Based on this, this paper proposes undirected attributed community search with forbidden nodes problem (FATQ), which not only avoids forbidden nodes from existing in the query communities, but also guarantees the structure cohesiveness of the query communities and the keyword cohesiveness of the communities. Finally, this paper proposes two different search algorithms for FATQ problem and evaluates our algorithms on multiple datasets. The results show that correctness and effectiveness of the proposed methods. © 2019 IEEE.
KW  - Attributed graphs
KW  - Community search
KW  - K-truss
KW  - Social circle discovery
KW  - Computer science
KW  - Control engineering
KW  - Engineering
KW  - Industrial engineering
KW  - Attributed graphs
KW  - Community search
KW  - Multiple data sets
KW  - Network marketing
KW  - Search Algorithms
KW  - Search problem
KW  - Social circles
KW  - Social events
KW  - Computers
PB  - Institute of Electrical and Electronics Engineers Inc.
SN  - 978-172814689-8 (ISBN)
LA  - English
J2  - Proc. - Int. Conf. Mech., Control Comput. Eng., ICMCCE
M3  - Conference paper
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 0
ER  -

TY  - JOUR
AU  - Jiang, Y.
AU  - Huang, X.
AU  - Cheng, H.
TI  - I/O efficient k-truss community search in massive graphs
PY  - 2021
T2  - VLDB Journal
VL  - 30
IS  - 5
SP  - 713
EP  - 738
DO  - 10.1007/s00778-020-00649-y
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85105020368&doi=10.1007%2fs00778-020-00649-y&partnerID=40&md5=a6b01018b91942d7135c77dbae3d77b6
AD  - The Chinese University of Hong Kong, Hong Kong
AD  - Hong Kong Baptist University, Hong Kong
AB  - Community detection that discovers all densely connected communities in a network has been studied a lot. In this paper, we study online communitysearch for query-dependent communities, which is a different but practically useful task. Given a query vertex in a graph, the problem is to find meaningful communities that the vertex belongs to in an online manner. We propose a community model based on the k-truss concept, which brings nice structural and computational properties. We design a compact and elegant index structure which supports the efficient search of k-truss communities with a linear cost with respect to the community size. We also investigate the k-truss community search problem in a dynamic graph setting with frequent insertions and deletions of graph vertices and edges. In addition, to support k-truss community search over massive graphs which cannot entirely fit in main memory, we propose I/O-efficient algorithms for query processing under the semi-external model. Extensive experiments on massive real-world networks demonstrate the effectiveness of our k-truss community model, the efficiency, and the scalability of our in-memory and semi-external community search algorithms. © 2021, The Author(s), under exclusive licence to Springer-Verlag GmbH, DE part of Springer Nature.
KW  - community search
KW  - dynamic graphs
KW  - k-truss
KW  - semi-external algorithms
KW  - Graph algorithms
KW  - Graph theory
KW  - Trusses
KW  - Community detection
KW  - Community model
KW  - Computational properties
KW  - External community
KW  - Index structure
KW  - Insertions and deletions
KW  - Real-world networks
KW  - Search Algorithms
KW  - Graph structures
PB  - Springer Science and Business Media Deutschland GmbH
SN  - 10668888 (ISSN)
LA  - English
J2  - VLDB J.
M3  - Article
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 8; Correspondence Address: X. Huang; Hong Kong Baptist University, Hong Kong; email: xinhuang@comp.hkbu.edu.hk
ER  -

TY  - CONF
TI  - 2017 IEEE High Performance Extreme Computing Conference, HPEC 2017
PY  - 2017
T2  - 2017 IEEE High Performance Extreme Computing Conference, HPEC 2017
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85041171152&partnerID=40&md5=204f2e4cf2be1d7d3f5b79ed65d04c04
AB  - The proceedings contain 78 papers. The topics discussed include: a quantitative and qualitative analysis of tensor decompositions on spatiotemporal data; a linear algebra approach to fast DNA mixture analysis using GPUs; static graph challenge on GPU; memory-efficient parallel tensor decompositions; lossy compression on IoT big data by exploiting spatiotemporal correlation; distributed-memory fast maximal independent set; GPU accelerated gigabit level BCH and LDPC concatenated coding system; performance challenges for heterogeneous distributed tensor decompositions; xDCI, a data science cyberinfrastructure for interdisciplinary research; mixed data layout kernels for vectorized complex arithmetic; application of convolutional neural networks on Intel® Xeon® processor with integrated FPGA; out of memory SVD solver for big data; efficient parallel streaming algorithms for large-scale inverse problems; towards numerical benchmark for half-precision floating point arithmetic; an ensemble framework for detecting community changes in dynamic networks; parallel triangle counting and k-truss identification using graph-centric methods; static graph challenge: subgraph isomorphism; and quickly finding a truss in a haystack.
PB  - Institute of Electrical and Electronics Engineers Inc.
SN  - 978-153863472-1 (ISBN)
LA  - English
J2  - IEEE High Perform. Extrem Comput. Conf., HPEC
M3  - Conference review
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 0
ER  -

TY  - CONF
AU  - Tang, J.
AU  - Liu, L.
AU  - Jia, J.
AU  - Wu, L.
AU  - Wang, X.
AU  - Huang, J.
TI  - A Two-stage Algorithm Based on Prediction and Search for Maxk-Truss Decomposition
PY  - 2023
T2  - Proceedings of the International Conference on Parallel and Distributed Systems - ICPADS
VL  - 2023-January
SP  - 491
EP  - 498
DO  - 10.1109/ICPADS56603.2022.00070
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85152929396&doi=10.1109%2fICPADS56603.2022.00070&partnerID=40&md5=41fe8b9f3b5263a55f51bf4faa4d249d
AD  - Qinghai University, Department of Computer Technology and Applications, Xining, China
AB  - The cohesive subgraph K-truss is often used to detect communities in large-scale social networks. The truss decomposition algorithm calculates the number of triangles formed by each edge, then peels off the edges with the number of triangles less than k-2 iteratively. The incremental maxk-truss algorithm must detect k-truss one by one making it inefficient. We propose a two-stage maxk-ktruss decomposition algorithm PSKT. The innovation points of PSKT are as follows: 1) The k-core structure is used to predict the maxk value, and the structure helps us avoid unnecessary mass calculations. 2) The characteristic that the k-truss of graph G must be included in the (k-l)-core of graph G is utilized to ensure that the proposed algorithm can safely prune in the graph. 3) A suitable triangle counting algorithm and the dynamic stream compression method are used to improve the algorithm efficiency. Comprehensive experiments demonstrate that PSKT is 15.26 times faster than the incremental algorithm FMT-dec and 3 times faster than the state-of-the-art maxk-truss algorithm FMT-max. © 2023 IEEE.
KW  - k-core
KW  - k-truss
KW  - triangle counting
KW  - truss decomposition
KW  - Graph theory
KW  - Trusses
KW  - Decomposition algorithm
KW  - Graph G
KW  - K-cores
KW  - K-truss
KW  - Large-scales
KW  - Number of triangles
KW  - Subgraphs
KW  - Triangle counting
KW  - Truss decomposition
KW  - Two-stage algorithm
KW  - Iterative methods
PB  - IEEE Computer Society
SN  - 15219097 (ISSN); 978-166547315-6 (ISBN)
LA  - English
J2  - Proc Int Conf Parallel Distrib Syst ICPADS
M3  - Conference paper
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 0; Correspondence Address: J. Huang; Qinghai University, Department of Computer Technology and Applications, Xining, China; email: hjq@qhu.edu.cn; CODEN: PIPSF
ER  -

TY  - CONF
AU  - Zhang, F.
AU  - Zhang, Y.
AU  - Qin, L.
AU  - Zhang, W.
AU  - Lin, X.
TI  - Efficiently reinforcing social networks over user engagement and tie strength
PY  - 2018
T2  - Proceedings - IEEE 34th International Conference on Data Engineering, ICDE 2018
C7  - 8509278
SP  - 557
EP  - 568
DO  - 10.1109/ICDE.2018.00057
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85057100880&doi=10.1109%2fICDE.2018.00057&partnerID=40&md5=02c28863841044e9a85d8b3596f9d53c
AD  - University of New South Wales, CAI, University of Technology Sydney, Australia
AB  - User engagement and tie strength are fundamental and important components in social networks. The model of k-Truss not only captures actively engaged users, but also ensures strong tie strength among these users. It motivates us to utilize the model of k-Truss in preventing network unraveling, which simultaneously considers both of the basic components. In this paper, we propose and investigate the anchored k-Truss problem to reinforce a network by anchoring critical users who can significantly stop the unraveling. We prove the problem is NP-hard for k ≥ 4. A fast edge deletion order based algorithm, named AKT, is proposed with efficient candidate exploration and pruning techniques based on the order. Comprehensive experiments on 10 real-life graphs demonstrate the effectiveness of our model and the efficiency of our methods. © 2018 IEEE.
KW  - K-Truss
KW  - social network
KW  - Tie strength
KW  - user engagement
KW  - Engineering
KW  - Industrial engineering
KW  - Social networking (online)
KW  - NP-hard
KW  - Pruning techniques
KW  - Tie strengths
KW  - User engagement
KW  - Trusses
PB  - Institute of Electrical and Electronics Engineers Inc.
SN  - 978-153865520-7 (ISBN)
LA  - English
J2  - Proc. - IEEE Int. Conf. Data Eng., ICDE
M3  - Conference paper
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 26
ER  -

TY  - JOUR
AU  - Zhang, F.
AU  - Li, C.
AU  - Zhang, Y.
AU  - Qin, L.
AU  - Zhang, W.
TI  - Finding Critical Users in Social Communities: The Collapsed Core and Truss Problems
PY  - 2020
T2  - IEEE Transactions on Knowledge and Data Engineering
VL  - 32
IS  - 1
C7  - 8532320
SP  - 78
EP  - 91
DO  - 10.1109/TKDE.2018.2880976
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85056340022&doi=10.1109%2fTKDE.2018.2880976&partnerID=40&md5=88f71f6ae1b914bd7e6d51f6e6c7f58f
AD  - School of Computer Science and Engineering, University of New South Wales, Sydney, 2052, NSW, Australia
AD  - Centre for Artificial Intelligence, University of Technology Sydney, Sydney, 2007, NSW, Australia
AB  - In social networks, the leave of critical users may significantly break network engagement, i.e., lead a large number of other users to drop out. A popular model to measure social network engagement is kk-core, the maximal subgraph in which every vertex has at least kk neighbors. To identify critical users, we propose the collapsed kk-core problem: given a graph GG, a positive integer kk and a budget bb, we aim to find bb vertices in GG such that the deletion of the bb vertices leads to the smallest kk-core. We prove the problem is NP-hard and inapproximate. An efficient algorithm is proposed, which significantly reduces the number of candidate vertices. We also study the user leave towards the model of kk-truss which further considers tie strength by conducting additional computation w.r.t. kk-core. We prove the corresponding collapsed kk-truss problem is also NP-hard and inapproximate. An efficient algorithm is proposed to solve the problem. The advantages and disadvantages of the two proposed models are experimentally compared. Comprehensive experiments on nine real-life social networks demonstrate the effectiveness and efficiency of our proposed methods. © 1989-2012 IEEE.
KW  - Cohesive subgraph
KW  - k-core
KW  - k-truss
KW  - tie strength
KW  - user engagement
KW  - Budget control
KW  - Fans
KW  - Heuristic algorithms
KW  - Proteins
KW  - Trusses
KW  - Complexity theory
KW  - Computational model
KW  - K-cores
KW  - Prediction algorithms
KW  - Social network services
KW  - Subgraphs
KW  - Tie strengths
KW  - User engagement
KW  - Graph theory
PB  - IEEE Computer Society
SN  - 10414347 (ISSN)
LA  - English
J2  - IEEE Trans Knowl Data Eng
M3  - Article
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 11; Correspondence Address: F. Zhang; School of Computer Science and Engineering, University of New South Wales, Sydney, 2052, Australia; email: fan.zhang3@unsw.edu.au; CODEN: ITKEE
ER  -

TY  - CONF
AU  - Chen, H.
AU  - Conte, A.
AU  - Grossi, R.
AU  - Loukides, G.
AU  - Pissis, S.P.
AU  - Sweering, M.
TI  - On Breaking Truss-Based Communities
PY  - 2021
T2  - Proceedings of the ACM SIGKDD International Conference on Knowledge Discovery and Data Mining
SP  - 117
EP  - 126
DO  - 10.1145/3447548.3467365
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85114911177&doi=10.1145%2f3447548.3467365&partnerID=40&md5=bf726d21e4888c6d95ecb0b2751a5fa7
AD  - King's College London, London, United Kingdom
AB  - A k-truss is a graph such that each edge is contained in at least k-2 triangles. This notion has attracted much attention, because it models meaningful cohesive subgraphs of a graph. We introduce the problem of identifying a smallest edge subset of a given graph whose removal makes the graph k-truss-free. We also introduce a problem variant where the identified subset contains only edges incident to a given set of nodes and ensures that these nodes are not contained in any k-truss. These problems are directly applicable in communication networks: the identified edges correspond to vital network connections; or in social networks: the identified edges can be hidden by users or sanitized from the output graph. We show that these problems are NP-hard. We thus develop exact exponential-time algorithms to solve them. To process large networks, we also develop heuristics sped up by an efficient data structure for updating the truss decomposition under edge deletions. We complement our heuristics with a lower bound on the size of an optimal solution to rigorously evaluate their effectiveness. Extensive experiments on 10 real-world graphs show that our heuristics are effective (close to the optimal or to the lower bound) and also efficient (up to two orders of magnitude faster than a natural baseline). © 2021 Owner/Author.
KW  - community detection
KW  - graph algorithm
KW  - k-truss
KW  - NP-hard
KW  - Optimization
KW  - Trusses
KW  - Efficient data structures
KW  - Exact exponential-time algorithms
KW  - Large networks
KW  - Lower bounds
KW  - Network connection
KW  - Optimal solutions
KW  - Orders of magnitude
KW  - Real-world graphs
KW  - Data mining
PB  - Association for Computing Machinery
SN  - 978-145038332-5 (ISBN)
LA  - English
J2  - Proc. ACM SIGKDD Int. Conf. Knowl. Discov. Data Min.
M3  - Conference paper
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 4
ER  -

TY  - CONF
AU  - Huang, X.
AU  - Lakshmanan, L.V.S.
TI  - Attribute-driven community search
PY  - 2017
T2  - Proceedings of the VLDB Endowment
VL  - 10
IS  - 9
SP  - 949
EP  - 960
DO  - 10.14778/3099622.3099626
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85026308910&doi=10.14778%2f3099622.3099626&partnerID=40&md5=888171466b2f48c1db6775ac871aa58b
AD  - Hong Kong Baptist University, Hong Kong, China
AD  - University of British Columbia, Vancouver, Canada
AB  - Recently, community search over graphs has gained significant interest. In applications such as analysis of protein-protein interaction (PPI) networks, citation graphs, and collaboration networks, nodes tend to have attributes. Unfortunately, most previous community search algorithms ignore attributes and result in communities with poor cohesion w.r.t. their node attributes. In this paper, we study the problem of attribute-driven community search, that is, given an undirected graph G where nodes are associated with attributes, and an input query Q consisting of nodes Vq and attributes Wq, find the communities containing Vq, in which most community members are densely inter-connected and have similar attributes. We formulate this problem as finding attributed truss communities (ATC), i.e., finding connected and close k-truss subgraphs containing Vq, with the largest attribute relevance score. We design a framework of desirable properties that good score function should satisfy. We show that the problem is NP-hard. However, we develop an efficient greedy algorithmic framework to iteratively remove nodes with the least popular attributes, and shrink the graph into an ATC. In addition, we also build an elegant index to maintain k-truss structure and attribute information, and propose efficient query processing algorithms. Extensive experiments on large real-world networks with ground-truth communities show that our algorithms significantly outperform the state of the art and demonstrates their efficiency and effectiveness. © 2017 VLDB Endowment.
KW  - Iterative methods
KW  - Proteins
KW  - Query languages
KW  - Trusses
KW  - Algorithmic framework
KW  - Attribute information
KW  - Collaboration network
KW  - Protein-protein interaction networks
KW  - Query processing algorithms
KW  - Real-world networks
KW  - Search Algorithms
KW  - Undirected graph
KW  - State of the art
KW  - Graph theory
PB  - Association for Computing Machinery
SN  - 21508097 (ISSN)
LA  - English
J2  - Proc. VLDB Endow.
M3  - Conference paper
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 164
ER  -

TY  - CHAP
AU  - Huangy, X.
AU  - Lakshmanany, L.V.S.
AU  - Yuz, J.X.
AU  - Chengz, H.
TI  - Approximate closest community search in networks
PY  - 2016
T2  - Proceedings of the VLDB Endowment
VL  - 9
IS  - 4
SP  - 276
EP  - 287
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-84976513391&partnerID=40&md5=18885e44f3aabc5370da14cac22e0106
AD  - University of British Columbia, Canada
AD  - The Chinese University of Hong Kong, Hong Kong
AB  - Recently, there has been significant interest in the study of the community search problem in social and information networks: given one or more query nodes, find densely connected communities containing the query nodes. However, most existing studies do not address the "free rider" issue, that is, nodes far away from query nodes and irrelevant to them are included in the detected community. Some state-of-the-art models have attempted to address this issue, but not only are their formulated problems NP-hard, they do not admit any approximations without restrictive assumptions, which may not always hold in practice. In this paper, given an undirected graph G and a set of query nodes Q, we study community search using the k-truss based community model. We formulate our problem of finding a closest truss community (CTC), as finding a connected k-truss subgraph with the largest k that contains Q, and has the minimum diameter among such subgraphs. We prove this problem is NP-hard. Furthermore, it is NP-hard to approximate the problem within a factor (2 - ε), for any ε > 0. However, we develop a greedy algorithmic framework, which first finds a CTC containing Q, and then iteratively removes the furthest nodes from Q, from the graph. The method achieves 2- approximation to the optimal solution. To further improve the efficiency, we make use of a compact truss index and develop efficient algorithms for k-truss identification and maintenance as nodes get eliminated. In addition, using bulk deletion optimization and local exploration strategies, we propose two more efficient algorithms. One of them trades some approximation quality for efficiency while the other is a very efficient heuristic. Extensive experiments on 6 real-world networks show the effectiveness and efficiency of our community model and search algorithms. © 2015 VLDB Endowment 21508097/15/12.
KW  - Algorithms
KW  - Efficiency
KW  - Graph theory
KW  - Information services
KW  - Iterative methods
KW  - Trusses
KW  - Algorithmic framework
KW  - Approximation quality
KW  - Effectiveness and efficiencies
KW  - Exploration strategies
KW  - Formulated problems
KW  - Information networks
KW  - Real-world networks
KW  - Search Algorithms
KW  - Optimization
PB  - Association for Computing Machinery
SN  - 21508097 (ISSN)
LA  - English
J2  - Proc. VLDB Endow.
M3  - Book chapter
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 127
ER  -

TY  - CONF
AU  - Shao, Y.
AU  - Chen, L.
AU  - Cui, B.
TI  - Efficient cohesive subgraphs detection in parallel
PY  - 2014
T2  - Proceedings of the ACM SIGMOD International Conference on Management of Data
SP  - 613
EP  - 624
DO  - 10.1145/2588555.2593665
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-84904353930&doi=10.1145%2f2588555.2593665&partnerID=40&md5=e028e4976e5d9a363c2e8816ced5cbe9
AD  - Key Lab of High Confidence Software Technologies (MOE), School of EECS, Peking University, China
AD  - Department of Computer Science and Engineering, HKUST, Hong Kong
AB  - A cohesive subgraph is a primary vehicle for massive graph analysis, and a newly introduced cohesive subgraph, κ-truss, which is motivated by a natural observation of social cohesion, has attracted more and more attention. However, the existing parallel solutions to identify the k-truss are inefficient for very large graphs, as they still suffer from huge communication cost and large number of iterations during the computation. In this paper, we propose a novel parallel and efficient truss detection algorithm, called PETA. The PETA produces a triangle complete subgraph (TC-subgraph) for every computing node. Based on the TC-subgraphs, PETA can detect the local k-truss in parallel within a few iterations. We theoretically prove, within this new paradigm, the communication cost of PETA is bounded by three times of the number of triangles, the total computation complexity of PETA is the same order as the best known serial algorithm and the number of iterations for a given partition scheme is minimized as well. Furthermore, we present a subgraph-oriented model to efficiently express PETA in parallel graph computing systems. The results of comprehensive experiments demonstrate, compared with the existing solutions, PETA saves 2X to 19X in communication cost, reduces 80% to 95% number of iterations and improves the overall performance by 80% across various real-world graphs.
KW  - Cohesive subgraph
KW  - Graph algorithm
KW  - Subgraph-oriented
KW  - Truss
KW  - Communication
KW  - Costs
KW  - Computation complexity
KW  - Detection algorithm
KW  - Graph algorithms
KW  - Number of iterations
KW  - Number of triangles
KW  - Parallel solutions
KW  - Subgraph-oriented
KW  - Subgraphs
KW  - Trusses
PB  - Association for Computing Machinery
SN  - 07308078 (ISSN); 978-145032376-5 (ISBN)
LA  - English
J2  - Proc. ACM SIGMOD Int. Conf. Manage. Data
M3  - Conference paper
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 43
ER  -

TY  - JOUR
AU  - Malliaros, F.D.
AU  - Rossi, M.-E.G.
AU  - Vazirgiannis, M.
TI  - Locating influential nodes in complex networks
PY  - 2016
T2  - Scientific Reports
VL  - 6
C7  - 19307
DO  - 10.1038/srep19307
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-84955168675&doi=10.1038%2fsrep19307&partnerID=40&md5=4b2ae79834b21c69e1fe27a110c7a523
AD  - Computer Science Laboratory, École Polytechnique, Palaiseau, 91120, France
AB  - Understanding and controlling spreading processes in networks is an important topic with many diverse applications, including information dissemination, disease propagation and viral marketing. It is of crucial importance to identify which entities act as influential spreaders that can propagate information to a large portion of the network, in order to ensure efficient information diffusion, optimize available resources or even control the spreading. In this work, we capitalize on the properties of the K-truss decomposition, a triangle-based extension of the core decomposition of graphs, to locate individual influential nodes. Our analysis on real networks indicates that the nodes belonging to the maximal K-truss subgraph show better spreading behavior compared to previously used importance criteria, including node degree and k-core index, leading to faster and wider epidemic spreading. We further show that nodes belonging to such dense subgraphs, dominate the small set of nodes that achieve the optimal spreading in the network.
KW  - Algorithms
KW  - Models, Theoretical
KW  - Neural Networks (Computer)
KW  - algorithm
KW  - artificial neural network
KW  - theoretical model
PB  - Nature Publishing Group
SN  - 20452322 (ISSN)
C2  - 26776455
LA  - English
J2  - Sci. Rep.
M3  - Article
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 121; Correspondence Address: M.-E.G. Rossi; Computer Science Laboratory, École Polytechnique, Palaiseau, 91120, France; email: maria.rossi@polytechnique.edu
ER  -

TY  - CONF
AU  - Kabir, H.
AU  - Madduri, K.
TI  - Shared-Memory Graph Truss Decomposition
PY  - 2017
T2  - Proceedings - 24th IEEE International Conference on High Performance Computing, HiPC 2017
VL  - 2017-December
SP  - 13
EP  - 22
DO  - 10.1109/HiPC.2017.00012
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85050350579&doi=10.1109%2fHiPC.2017.00012&partnerID=40&md5=c1fe173addfcf70ec32bdfb4d60b5e71
AD  - Computer Science and Engineering, Pennsylvania State University, University Park, PA, United States
AB  - We present PKT, a new shared-memory parallel algorithm and OpenMP implementation for the truss decomposition of large sparse graphs. A k-truss is a dense subgraph definition that can be considered a relaxation of a clique. Truss decomposition refers to a partitioning of all the edges in the graph based on their k-truss membership. The truss decomposition of a graph has many applications. We show that our new approach PKT consistently outperforms other truss decomposition approaches for a collection of large sparse graphs and on a 24-core shared-memory server. PKT is based on a recently proposed algorithm for k-core decomposition. © 2017 IEEE.
KW  - graph analysis
KW  - k-core
KW  - k-truss
KW  - multicore
KW  - Application programming interfaces (API)
KW  - Graph theory
KW  - Memory architecture
KW  - Trusses
KW  - Dense sub-graphs
KW  - Graph analysis
KW  - Graph-based
KW  - K-cores
KW  - K-truss
KW  - Multi-cores
KW  - New approaches
KW  - Shared memory
KW  - Shared-memory parallels
KW  - Sparse graphs
KW  - Graphic methods
PB  - Institute of Electrical and Electronics Engineers Inc.
SN  - 978-153862293-3 (ISBN)
LA  - English
J2  - Proc. - IEEE Int. Conf. High Perform. Comput., HiPC
M3  - Conference paper
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 21
ER  -

TY  - CONF
AU  - Sariyöce, A.E.
AU  - Seshadhri, C.
AU  - Pinar, A.
AU  - Catalyörek, U.V.
TI  - Finding the hierarchy of dense Subgraphs using nucleus decompositions
PY  - 2015
T2  - WWW 2015 - Proceedings of the 24th International Conference on World Wide Web
SP  - 927
EP  - 937
DO  - 10.1145/2736277.2741640
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-84968865499&doi=10.1145%2f2736277.2741640&partnerID=40&md5=cea8c072c20f2ba997ae02bfbd35204b
AD  - Ohio State University, Columbus, OH, United States
AD  - University of California, Santa Cruz, CA, United States
AD  - Sandia National Labs, Livermore, CA, United States
AB  - Finding dense substructures in a graph is a fundamental graph mining operation, with applications in bioinformatics, social networks, and visualization to name a few. Yet most standard formulations of this problem (like clique, quasiclique, k-densest subgraph) are NP-hard. Furthermore, the goal is rarely to find the "true optimum", but to identify many (if not all) dense substructures, understand their distribution in the graph, and ideally determine relationships among them. Current dense subgraph finding algorithms usually optimize some objective, and only find a few such subgraphs without providing any structural relations. We define the nucleus decomposition of a graph, which represents the graph as a forest of nuclei. Each nucleus is a subgraph where smaller cliques are present in many larger cliques. The forest of nuclei is a hierarchy by containment, where the edge density increases as we proceed towards leaf nuclei. Sibling nuclei can have limited intersections, which enables discovering overlapping dense subgraphs. With the right parameters, the nucleus decomposition generalizes the classic notions of k-cores and k-Truss decompositions. We give provably efficient algorithms for nucleus decompositions, and empirically evaluate their behavior in a variety of real graphs. The tree of nuclei consistently gives a global, hierarchical snapshot of dense substructures, and outputs dense subgraphs of higher quality than other stateof-the-Art solutions. Our algorithm can process graphs with tens of millions of edges in less than an hour.
KW  - Dense subgraph discovery
KW  - Density hierarchy
KW  - Graph decomposition
KW  - K-core
KW  - K-Truss
KW  - Overlapping dense subgraphs
KW  - Algorithms
KW  - Bioinformatics
KW  - Forestry
KW  - Optimization
KW  - Trusses
KW  - Dense sub-graphs
KW  - Dense subgraph
KW  - Edge densities
KW  - Finding algorithm
KW  - Graph decompositions
KW  - K-cores
KW  - Process graphs
KW  - State of the art
KW  - World Wide Web
PB  - Association for Computing Machinery, Inc
SN  - 978-145033469-3 (ISBN)
LA  - English
J2  - Proc. Int. Conf. World Wide Web, WWW
M3  - Conference paper
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 98
ER  -

TY  - CONF
AU  - Kaur, S.
AU  - Saxena, R.
AU  - Bhatnagar, V.
TI  - Leveraging hierarchy and community structure for determining influencers in networks
PY  - 2017
T2  - Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)
VL  - 10440 LNCS
SP  - 383
EP  - 390
DO  - 10.1007/978-3-319-64283-3_28
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85028456114&doi=10.1007%2f978-3-319-64283-3_28&partnerID=40&md5=332ee1b46f059430a1e817b244993ab6
AD  - Acharya Narendra Dev College, University of Delhi, New Delhi, India
AD  - Deshbandhu College, University of Delhi, New Delhi, India
AD  - Department of Computer Science, University of Delhi, New Delhi, India
AB  - Predicting influencers is an important task in social network analysis. Prerequisite for understanding the spreading dynamics in on-line social networks, it finds applications in product marketing, promotions of innovative ideas, constraining negative information etc. The proposed prediction method IPRI (Influence scoring using Position, Reachability and Interaction) leverages prevailing hierarchy, interaction patterns and community structure in the network for identifying influential actors. The proposal is based on the hypothesis that capacity to influence other social actors is an interplay of three facets of an actor viz. (i) position in social hierarchy (ii) reach to diverse homophilic groups in network, and (iii) intensity of interactions with neighbours. Preliminary comparative performance evaluation of IPRI method against classical and state-of-the-art methods finds it effective. © 2017, Springer International Publishing AG.
KW  - Community
KW  - Hierarchy
KW  - Interaction
KW  - k-truss
KW  - Topology
KW  - Computer networks
KW  - Data mining
KW  - Social networking (online)
KW  - Social sciences
KW  - Topology
KW  - Community
KW  - Community structures
KW  - Comparative performance
KW  - Hierarchy
KW  - Interaction
KW  - Negative information
KW  - On-line social networks
KW  - State-of-the-art methods
KW  - Big data
A2  - Bellatreche L.
A2  - Chakravarthy S.
PB  - Springer Verlag
SN  - 03029743 (ISSN); 978-331964282-6 (ISBN)
LA  - English
J2  - Lect. Notes Comput. Sci.
M3  - Conference paper
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 5; Correspondence Address: R. Saxena; Deshbandhu College, University of Delhi, New Delhi, India; email: rsaxena@db.du.ac.in
ER  -

TY  - JOUR
AU  - Zou, Z.
AU  - Zhu, R.
TI  - Truss decomposition of uncertain graphs
PY  - 2017
T2  - Knowledge and Information Systems
VL  - 50
IS  - 1
SP  - 197
EP  - 230
DO  - 10.1007/s10115-016-0943-y
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-84964033546&doi=10.1007%2fs10115-016-0943-y&partnerID=40&md5=38d560022c3194988c60b7a51596f12f
AD  - School of Computer Science and Technology, Harbin Institute of Technology, Harbin, Heilongjiang, China
AB  - The k-truss of a graph is the largest edge-induced subgraph such that every edge is contained in at least k triangles within the subgraph, where a triangle is a cycle consisting of three vertices. As a new notion of cohesive subgraphs, truss has recently attracted a lot of research attentions in the database and data mining fields. At the same time, uncertainty is an intrinsic property of massive graph data, and truss decomposition (i.e., finding all k-trusses of a graph) has become a key primitive on uncertain graphs. In this paper, we study the truss decomposition problem on uncertain graphs, that is, finding all highly probable k-trusses of an uncertain graph. We first give an formal statement of the truss decomposition problem on uncertain graphs. Then, we prove that the truss decomposition of an uncertain graph attains two elegant properties, namely uniqueness and hierarchy. We show that the truss decomposition of an uncertain graph can be found in O(m1.5Q) time by proposing an in-memory algorithm called TDmem, where m is the number of edges of the uncertain graph, and Q is at most the maximum number of common neighbors of the endpoints of an edge. When an uncertain graph is too large to fit into main memory, we propose an external-memory algorithm TDI         /         O to find the truss decomposition of the uncertain graph. Extensive experiments have been carried out to evaluate the practical performance of the proposed algorithms. The experimental results verify that both TDmem and TDI         /         O are efficient when an uncertain graph is small enough to fit into main memory, and that TDI         /         O is much faster than TDmem when the graph is too large to fit into main memory. © 2016, Springer-Verlag London.
KW  - Cohesive subgraph
KW  - Truss
KW  - Truss decomposition
KW  - Truss number
KW  - Uncertain graph
KW  - Data mining
KW  - Graphic methods
KW  - Trusses
KW  - Database and data mining
KW  - Decomposition problems
KW  - External memory algorithms
KW  - Induced subgraphs
KW  - Intrinsic property
KW  - Memory algorithms
KW  - Subgraphs
KW  - Uncertain graphs
KW  - Graph algorithms
PB  - Springer London
SN  - 02191377 (ISSN)
LA  - English
J2  - Knowl. Inf. Systems. Syst.
M3  - Article
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 20; Correspondence Address: Z. Zou; School of Computer Science and Technology, Harbin Institute of Technology, Harbin, China; email: znzou@hit.edu.cn
ER  -

TY  - CONF
AU  - Li, Y.
AU  - Kuboyama, T.
AU  - Sakamoto, H.
TI  - Mining twitter data: Discover quasi-truss from bipartite graph
PY  - 2013
T2  - Frontiers in Artificial Intelligence and Applications
VL  - 255
SP  - 287
EP  - 295
DO  - 10.3233/978-1-61499-264-6-287
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-84896835784&doi=10.3233%2f978-1-61499-264-6-287&partnerID=40&md5=42bdfa18ce4b2a4791da0715c82d3388
AD  - Graduate School of Computer Science and Systems Engineering, Kyushu Institute of Technology, Japan
AD  - Computer Center, Gakushuin University, Japan
AD  - JST PRESTO, Japan
AB  - Decomposing a large graph into cohesive subgraphs plays a significant role in finding community structures in social network analysis. Among a lot of definitions of cohesive subgraphs, the k-truss is one of the best known cohesive subgraphs with a good trade-off between computational efficiency and clique approximation. In this paper, a quasi-truss decomposition algorithm for bipartite graphs is proposed based on the truss decomposition algorithm for general graphs. The proposed method can be used for analyzing the international business, such as the relationship between clients and sales volume in a certain period, and also analyze the social networking, such as users and hashtags in the twitter community. The twitter community is considered, and useful information can be extracted hierarchically by using the algorithm proposed in this paper. © 2013 The authors and IOS Press.
KW  - Bipartite graph
KW  - Community discovery
KW  - K-truss
KW  - Truss decomposition
KW  - Algorithms
KW  - Graph theory
KW  - Trusses
KW  - Bipartite graphs
KW  - Community discoveries
KW  - Community structures
KW  - Decomposition algorithm
KW  - General graph
KW  - International business
KW  - K-truss
KW  - Large graphs
KW  - Social networking (online)
A2  - Neves-Silva R.
A2  - Universidade Nova de Lisboa
A2  - Watada J.
A2  - Waseda University
A2  - Gloria P.
A2  - Loyola University
A2  - Jain L.
A2  - University of South Australia
A2  - Howlett R.J
A2  - KES International, Bournemouth University
SN  - 09226389 (ISSN); 978-161499263-9 (ISBN)
LA  - English
J2  - Front. Artif. Intell. Appl.
M3  - Conference paper
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 0; Correspondence Address: H. Sakamoto; Kyushu Institute of Technology, Fukuoka, 680-4 Kawazu Iizuka-city, Japan; email: hiroshi@ai.kyutech.ac.jp
ER  -

TY  - CONF
AU  - Xing, Y.
AU  - Xiao, N.
AU  - Lu, Y.
AU  - Li, R.
AU  - Yu, S.
AU  - Gao, S.
TI  - Fast truss decomposition in memory
PY  - 2017
T2  - Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)
VL  - 10658 LNCS
SP  - 719
EP  - 729
DO  - 10.1007/978-3-319-72395-2_64
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85040130977&doi=10.1007%2f978-3-319-72395-2_64&partnerID=40&md5=857a4a433e6386db508dff98a9b15893
AD  - State Key Laboratory of High Performance Computing, National University of Defense Technology, Changsha, China
AD  - National Supercomputer Center in Guangzhou, Sun Yat-sen University, Guangzhou, China
AD  - Guangdong Province Key Laboratory of Popular High Performance Computers, Shenzhen University, Shenzhen, China
AB  - The k-truss is a type of cohesive subgraphs proposed for the analysis of massive network. Existing in-memory algorithms for computing k-truss are inefficient for searching and parallel. We propose a novel traversal algorithm for truss decomposition: it effectively reduces computation complexity, we fully exploit the parallelism thanks to the optimization, and overlap IO and computation for a better performance. Our experiments on real datasets verify that it is 2x–5x faster than the exiting fastest in-memory algorithm. © Springer International Publishing AG 2017.
KW  - Cohesive subgraphs
KW  - Triangle counting
KW  - Truss decomposition
KW  - Optimization
KW  - Computation complexity
KW  - Massive networks
KW  - Memory algorithms
KW  - Real data sets
KW  - Subgraphs
KW  - Traversal algorithms
KW  - Triangle counting
KW  - Trusses
A2  - Wang G.
A2  - Yan Z.
A2  - Choo K.K.R.
A2  - Atiquzzaman M.
PB  - Springer Verlag
SN  - 03029743 (ISSN); 978-331972394-5 (ISBN)
LA  - English
J2  - Lect. Notes Comput. Sci.
M3  - Conference paper
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 3; Correspondence Address: Y. Xing; State Key Laboratory of High Performance Computing, National University of Defense Technology, Changsha, China; email: xingyuxuan_2012@nudt.edu.cn
ER  -

TY  - CONF
AU  - Li, Z.-J.
AU  - Zhang, W.-P.
AU  - Li, R.-H.
AU  - Guo, J.
AU  - Huang, X.
AU  - Mao, R.
TI  - Discovering hierarchical subgraphs of K-core-truss
PY  - 2017
T2  - Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)
VL  - 10569 LNCS
SP  - 441
EP  - 456
DO  - 10.1007/978-3-319-68783-4_30
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85031421802&doi=10.1007%2f978-3-319-68783-4_30&partnerID=40&md5=6d74a5e8804a1203f25724a0d99f10c3
AD  - College of Computer Science and Software Engineering, Shenzhen University, Shenzhen, China
AD  - Hong Kong Baptist University, Hong Kong
AB  - Discovering dense subgraphs in a graph is a fundamental graph mining task, which has a wide range of applications in social networks, biology and graph visualization to name a few. Even the problems of computing most dense subgraphs (e.g., clique, quasi-clique, k-densest subgraph) are NP-hard, there exists polynomial time algorithms for computing k-core and k-truss. In this paper, we propose a novel dense subgraph, (formula presented), that leverages on a new type of important edges based on the concepts of k-core and k-truss. Compared with k-core and k-truss, (formula presented) can significantly discover the interesting and important structural information outside the scope of the k-core and k-truss. We study two useful problems of (formula presented) decomposition and (formula presented) search. In particular, we develop a (formula presented) decomposition algorithm to find all (formula presented) in a graph G by iteratively removing edges with the smallest (formula presented). In addition, we propose a (formula presented) search algorithm to identify a particular (formula presented) containing a given query node such that the core-number k is the largest. Extensive experiments on several web-scale real-world datasets show the effectiveness and efficiency of the (formula presented) model and proposed algorithms. © 2017, Springer International Publishing AG.
KW  - Information systems
KW  - Iterative methods
KW  - Polynomial approximation
KW  - Systems engineering
KW  - Decomposition algorithm
KW  - Dense sub-graphs
KW  - Effectiveness and efficiencies
KW  - Graph visualization
KW  - Polynomial-time algorithms
KW  - Real-world datasets
KW  - Search Algorithms
KW  - Structural information
KW  - Trusses
A2  - Chen L.
A2  - Bouguettaya A.
A2  - Klimenko A.
A2  - Dzerzhinskiy F.
A2  - Klimenko S.V.
A2  - Zhang X.
A2  - Li Q.
A2  - Gao Y.
A2  - Jia W.
PB  - Springer Verlag
SN  - 03029743 (ISSN); 978-331968782-7 (ISBN)
LA  - English
J2  - Lect. Notes Comput. Sci.
M3  - Conference paper
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 0; Correspondence Address: R.-H. Li; College of Computer Science and Software Engineering, Shenzhen University, Shenzhen, China; email: rhli@szu.edu.cn
ER  -

TY  - CONF
AU  - Chen, P.-L.
AU  - Chou, C.-K.
AU  - Chen, M.-S.
TI  - Distributed algorithms for k-truss decomposition
PY  - 2014
T2  - Proceedings - 2014 IEEE International Conference on Big Data, IEEE Big Data 2014
C7  - 7004264
SP  - 471
EP  - 480
DO  - 10.1109/BigData.2014.7004264
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-84988301791&doi=10.1109%2fBigData.2014.7004264&partnerID=40&md5=445bb1e4d7f3d973b89f7b3294d5a12a
AD  - Department of Electrical Engineering, National Taiwan University, Taipei, Taiwan
AD  - Research Center of Information Technology Innovation, Academia Sinica, Taipei, Taiwan
AB  - k-truss, a type of cohesive subgraphs of a network, is an important measure for a social network graph. However, with the emergence of large online social networks, the running time of the traditional batch algorithms for k-truss decomposition is usually prohibitively long on such a graph with billions of edges and millions of vertices. Moreover, the size of a graph becomes too large to load into the main memory of a single machine. Currently, cloud computing has become an imperative way to process the big data. Thus, our aim is to design a scalable algorithm of k-truss decomposition in the scenario of cloud computing. In this paper, we first improve the existing distributed k-truss decomposition in the MapReduce framework. We then propose a theoretical basis for k-truss and use it to design an algorithm based on graph-parallel abstractions. Our experiment results show that our method in the graph-parallel abstraction significantly outperforms the methods based on MapReduce in terms of running time and disk usage. © 2014 IEEE.
KW  - k-truss decomposition
KW  - Large graph processing
KW  - Parallel processing
KW  - Abstracting
KW  - Algorithms
KW  - Cloud computing
KW  - Social networking (online)
KW  - Trusses
KW  - Batch algorithms
KW  - Large graphs
KW  - Mapreduce frameworks
KW  - On-line social networks
KW  - Parallel processing
KW  - Running time
KW  - Scalable algorithms
KW  - Single- machines
KW  - Big data
A2  - Chang W.
A2  - Huan J.
A2  - Cercone N.
A2  - Pyne S.
A2  - Honavar V.
A2  - Lin J.
A2  - Hu X.T.
A2  - Aggarwal C.
A2  - Mobasher B.
A2  - Pei J.
A2  - Nambiar R.
PB  - Institute of Electrical and Electronics Engineers Inc.
SN  - 978-147995665-4 (ISBN)
LA  - English
J2  - Proc. - IEEE Int. Conf. Big Data, IEEE Big Data
M3  - Conference paper
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 34
ER  -

TY  - JOUR
AU  - Wang, J.
AU  - Cheng, J.
TI  - Truss decomposition in massive networks
PY  - 2012
T2  - Proceedings of the VLDB Endowment
VL  - 5
IS  - 9
SP  - 812
EP  - 823
DO  - 10.14778/2311906.2311909
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-84863767594&doi=10.14778%2f2311906.2311909&partnerID=40&md5=85200ed2c5b8d43eb406c8b6864a13b9
AD  - Department of Computer Science and Engineering, The Chinese University of Hong Kong, Hong Kong
AD  - School of Computer Engineering, Nanyang Technological University, Singapore
AB  - The k-truss is a type of cohesive subgraphs proposed recently for the study of networks. While the problem of computing most co-hesive subgraphs is NP-hard, there exists a polynomial time al-gorithm for computing k-truss. Compared with k-core which is also efficient to compute, k-truss represents the " core" of a k-core that keeps the key information of, while filtering out less impor-tant information from, the k-core. However, existing algorithms for computing k-truss are inefficient for handling today's massive networks. We first improve the existing in-memory algorithm for computing k-truss in networks of moderate size. Then, we propose two I/O-efficient algorithms to handle massive networks that can-not fit in main memory. Our experiments on real datasets verify the efficiency of our algorithms and the value of k-truss. © 2012 VLDB Endowment.
KW  - Information filtering
KW  - Polynomial approximation
KW  - In networks
KW  - Main memory
KW  - Massive networks
KW  - Memory algorithms
KW  - NP-hard
KW  - Polynomial-time
KW  - Real data sets
KW  - Subgraphs
KW  - Trusses
PB  - Association for Computing Machinery
SN  - 21508097 (ISSN)
LA  - English
J2  - Proc. VLDB Endow.
M3  - Article
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 280; Correspondence Address: J. Wang; Department of Computer Science and Engineering, The Chinese University of Hong Kong, Hong Kong; email: jwang@cse.cuhk.edu.hk
ER  -

TY  - CONF
AU  - Quick, L.
AU  - Wilkinson, P.
AU  - Hardcastle, D.
TI  - Using pregel-like large scale graph processing frameworks for social network analysis
PY  - 2012
T2  - Proceedings of the 2012 IEEE/ACM International Conference on Advances in Social Networks Analysis and Mining, ASONAM 2012
C7  - 6425724
SP  - 457
EP  - 463
DO  - 10.1109/ASONAM.2012.254
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-84874249099&doi=10.1109%2fASONAM.2012.254&partnerID=40&md5=1988f6d9b0080277a23239200c6d08c6
AD  - Government Communications Headquarters, Cheltenham, GL51 0EX, Hubble Road, United Kingdom
AB  - Pregel is a system for large scale graph processing developed at Google. It provides a scalable framework for running graph analytics on clusters of commodity machines. In this paper, we present several important undirected graph algorithms for social network analysis which fit within this framework. We discuss various graph componentisation methods, diameter estimation, degrees of separations, along with triangle, k-core and k-truss finding and computing clustering coefficients. Finally we present some experimental results using our own implementation of the Pregel framework, and examine key features of the general framework and algorithmic design. © 2012 IEEE.
KW  - Distributed algorithms
KW  - Distributed computing
KW  - Graph theory
KW  - Parallel algorithms
KW  - Algorithms
KW  - Distributed computer systems
KW  - Graph theory
KW  - Parallel algorithms
KW  - Algorithmic design
KW  - Clustering coefficient
KW  - Diameter estimation
KW  - Graph analytics
KW  - Graph processing
KW  - Key feature
KW  - Social Network Analysis
KW  - Undirected graph
KW  - Social networking (online)
SN  - 978-076954799-2 (ISBN)
LA  - English
J2  - Proc. IEEE/ACM Int. Conf. Adv. Soc. Networks Anal. Min., ASONAM
M3  - Conference paper
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 41; Correspondence Address: L. Quick; Government Communications Headquarters, Cheltenham, GL51 0EX, Hubble Road, United Kingdom; email: louise.quick@gchq.gsi.gov.uk
ER  -

TY  - CONF
AU  - Katunka, A.M.
AU  - Yan, C.
AU  - Serge, K.B.
AU  - Zhang, Z.
TI  - K-Truss Based Top-Communities Search in Large Graphs
PY  - 2017
T2  - Proceedings - 5th International Conference on Advanced Cloud and Big Data, CBD 2017
C7  - 8026944
SP  - 244
EP  - 249
DO  - 10.1109/CBD.2017.49
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85031750335&doi=10.1109%2fCBD.2017.49&partnerID=40&md5=d1719070ab1fa1e4765d35fe7b6eea4c
AD  - School of Computer Science and Technology, Donghua University, Shanghai, China
AB  - The study of community search problem subjected to find densely connected subgraphs that satisfy the query conditions in social and information networks has attracted many researchers. In most real life networks a query node normally involves in several communities, therefore, most likely the same query results into communities of different densities. In this paper, based on the concept of k-Truss, which is a type of cohesive subgraph, we propose linear-Time algorithms to find the top-r k-Truss communities containing a query node in large graphs. We adapt some optimal index construction strategies which can support efficient search of top-r k-Truss communities with a linear cost to work for top-r community search. We carry out extensive experiments on real-world large networks, and the results signify the efficiency and effectiveness of the proposed algorithms. © 2017 IEEE.
KW  - Algorithm
KW  - Community search
KW  - K-Truss
KW  - Large graph
KW  - Algorithms
KW  - Clustering algorithms
KW  - Information services
KW  - Trusses
KW  - Community search
KW  - Connected subgraphs
KW  - Different densities
KW  - Index construction
KW  - Information networks
KW  - Large graphs
KW  - Linear-time algorithms
KW  - Real-life networks
KW  - Big data
PB  - Institute of Electrical and Electronics Engineers Inc.
SN  - 978-153861072-5 (ISBN)
LA  - English
J2  - Proc. - Int. Conf. Adv. Cloud Big Data, CBD
M3  - Conference paper
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 1; Correspondence Address: C. Yan; School of Computer Science and Technology, Donghua University, Shanghai, China; email: cryan@dhu.edu.cn
ER  -

TY  - CONF
AU  - Akbas, E.
AU  - Zhao, P.
TI  - Trussbased community search: A truss-equivalence based indexing approach
PY  - 2017
T2  - Proceedings of the VLDB Endowment
VL  - 10
IS  - 11
SP  - 1298
EP  - 1309
DO  - 10.14778/3137628.3137640
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85037059413&doi=10.14778%2f3137628.3137640&partnerID=40&md5=74cbc7855322acb51c3352ef7efcfdb8
AD  - Department of Computer Science, Florida State University, Tallahassee, 32306, FL, United States
AB  - We consider the community search problem defined upon a large graph G: given a query vertex q in G, to find as output all the densely connected subgraphs of G, each of which contains the query v. As an online, query-dependent variant of the well-known community detection problem, community search enables personalized community discovery that has found widely varying applications in real-world, largescale graphs. In this paper, we study the community search problem in the truss-based model aimed at discovering all dense and cohesive k-truss communities to which the query vertex q belongs. We introduce a novel equivalence relation, k-truss equivalence, to model the intrinsic density and cohesiveness of edges in k-truss communities. Consequently, all the edges of G can be partitioned to a series of k-truss equivalence classes that constitute a space-efficient, trusspreserving index structure, EquiTruss. Community search can be henceforth addressed directly upon EquiTruss without repeated, time-demanding accesses to the original graph, G, which proves to be theoretically optimal. In addition, EquiTruss can be efficiently updated in a dynamic fashion when G evolves with edge insertion and deletion. Experimental studies in real-world, large-scale graphs validate the efficiency and effectiveness of EquiTruss, which has achieved at least an order of magnitude speedup in community search over the state-of-the-art method, TCP-Index. © 2017 VLDB.
KW  - Equivalence classes
KW  - Trusses
KW  - Community detection
KW  - Community discoveries
KW  - Connected subgraphs
KW  - Equivalence relations
KW  - Indexing approaches
KW  - Intrinsic density
KW  - State-of-the-art methods
KW  - Truss-based model
KW  - Graph theory
A2  - Salem K.
A2  - Boncz P.
PB  - Association for Computing Machinery
SN  - 21508097 (ISSN)
LA  - English
J2  - Proc. VLDB Endow.
M3  - Conference paper
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 109
ER  -

TY  - CONF
AU  - Huang, X.
AU  - Cheng, H.
AU  - Qin, L.
AU  - Tian, W.
AU  - Yu, J.X.
TI  - Querying K-truss community in large and dynamic graphs
PY  - 2014
T2  - Proceedings of the ACM SIGMOD International Conference on Management of Data
SP  - 1311
EP  - 1322
DO  - 10.1145/2588555.2610495
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-84904348129&doi=10.1145%2f2588555.2610495&partnerID=40&md5=879164e58a45396ccc3ab2f31a7b31c0
AD  - Chinese University of Hong Kong, Hong Kong
AD  - Centre for Quantum Computation and Intelligent Systems, University of Technology, Sydney, Australia
AB  - Community detection which discovers densely connected structures in a network has been studied a lot. In this paper, we study online community search which is practically useful but less studied in the literature. Given a query vertex in a graph, the problem is to find meaningful communities that the vertex belongs to in an online manner. We propose a novel community model based on the κ-truss concept, which brings nice structural and computational properties. We design a compact and elegant index structure which supports the efficient search of κ-truss communities with a linear cost with respect to the community size. In addition, we investigate the κ truss community search problem in a dynamic graph setting with frequent insertions and deletions of graph vertices and edges. Extensive experiments on large real-world networks demonstrate the effectiveness and efficiency of our community model and search algorithms. © 2014 ACM.
KW  - Community search
KW  - Dynamic graph
KW  - κ-truss
KW  - Trusses
KW  - Community detection
KW  - Community search
KW  - Computational properties
KW  - Connected structures
KW  - Dynamic graph
KW  - Effectiveness and efficiencies
KW  - Insertions and deletions
KW  - On-line communities
KW  - Graph theory
PB  - Association for Computing Machinery
SN  - 07308078 (ISSN); 978-145032376-5 (ISBN); 978-145032376-5 (ISBN)
LA  - English
J2  - Proc. ACM SIGMOD Int. Conf. Manage. Data
M3  - Conference paper
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 319
ER  -

TY  - CONF
AU  - Sariyüce, A.E.
AU  - Seshadhri, C.
AU  - Pinar, A.
AU  - Çatalyürek, Ü.V.
TI  - Nucleus decompositions for identifying hierarchy of dense subgraphs
PY  - 2017
T2  - ACM Transactions on the Web
VL  - 11
IS  - 3
C7  - 16
DO  - 10.1145/3057742
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85024486412&doi=10.1145%2f3057742&partnerID=40&md5=52e1bf32cf66f593c0d78f3c83cf0a69
AD  - Sandia National Laboratories, 7011 East Ave., Livermore, 94551, CA, United States
AD  - University of California Santa Cruz, 1156 High Street Baskin School of Engineering, Santa Cruz, 95064, CA, United States
AD  - Georgia Institute of Technology, Klaus Advanced Computing Building, 266 Ferst Drive, Atlanta, 30332, GA, United States
AB  - Finding dense substructures in a graph is a fundamental graph mining operation, with applications in bioinformatics, social networks, and visualization to name a few. Yet most standard formulations of this problem (like clique, quasi-clique, densest at-least-k subgraph) are NP-hard. Furthermore, the goal is rarely to find the "true optimum" but to identify many (if not all) dense substructures, understand their distribution in the graph, and ideally determine relationships among them. Current dense subgraph finding algorithms usually optimize some objective and only find a few such subgraphs without providing any structural relations. We define the nucleus decomposition of a graph, which represents the graph as a forest of nuclei. Each nucleus is a subgraph where smaller cliques are present in many larger cliques. The forest of nuclei is a hierarchy by containment, where the edge density increases as we proceed towards leaf nuclei. Sibling nuclei can have limited intersections, which enables discovering overlapping dense subgraphs. With the right parameters, the nucleus decomposition generalizes the classic notions of k-core and k-truss decompositions. We present practical algorithms for nucleus decompositions and empirically evaluate their behavior in a variety of real graphs. The tree of nuclei consistently gives a global, hierarchical snapshot of dense substructures and outputs dense subgraphs of comparable quality with the state-of-the-art solutions that are dense and have non-trivial sizes. Our algorithms can process real-world graphs with tens of millions of edges in less than an hour. We demonstrate how proposed algorithms can be utilized on a citation network. Our analysis showed that dense units identified by our algorithms correspond to coherent articles on a specific area. Our experiments also show that we can identify dense structures that are lost within larger structures by other methods and find further finer grain structure within dense groups. © 2017 ACM.
KW  - Dense subgraph discovery
KW  - Density hierarchy
KW  - Graph decomposition
KW  - K-core
KW  - K-truss
KW  - Overlapping dense subgraphs
KW  - Forestry
KW  - Trusses
KW  - Citation networks
KW  - Dense structures
KW  - Dense sub-graphs
KW  - Dense subgraph
KW  - Finding algorithm
KW  - Graph decompositions
KW  - K-cores
KW  - Real-world graphs
KW  - Optimization
PB  - Association for Computing Machinery
SN  - 15591131 (ISSN)
LA  - English
J2  - ACM Trans. Web
M3  - Conference paper
DB  - Scopus
N1  - Export Date: 15 November 2023; Cited By: 19
ER  -

